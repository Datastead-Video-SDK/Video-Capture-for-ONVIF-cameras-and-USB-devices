#define TVIDEOGRABBERDLLNAME "TVideoGrabber.dll"

#include "TVideoGrabber.h"

#ifdef __GNUC__
#define STDCALL __attribute__((stdcall))
#else
#define STDCALL _stdcall
#endif

//#region DeclareFunctionTypesCPP
      typedef void (STDCALL *tAbout) (void *TVGObject);
      typedef int (STDCALL *tAnalogVideoStandardIndex) (void *TVGObject, const wchar_t *Value);
      typedef const wchar_t * (STDCALL *tASFStreaming_GetAuthorizationList) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tASFStreaming_GetConnectedClients) (void *TVGObject);
      typedef int (STDCALL *tASFStreaming_GetConnectedClientsCount) (void *TVGObject);
      typedef BOOL (STDCALL *tASFStreaming_ResetAuthorizations) (void *TVGObject);
      typedef BOOL (STDCALL *tASFStreaming_SetAuthorization) (void *TVGObject, BOOL Allowed, const wchar_t *IP, const wchar_t *Mask);
      typedef BOOL (STDCALL *tAssociateMultiplexedSlave) (void *TVGObject, int InputNumber, int SlaveUniqueID);
      typedef int (STDCALL *tAudioCompressorIndex) (void *TVGObject, const wchar_t *Value);
      typedef int (STDCALL *tAudioDeviceIndex) (void *TVGObject, const wchar_t *Value);
      typedef int (STDCALL *tAudioInputIndex) (void *TVGObject, const wchar_t *Value);
      typedef int (STDCALL *tAudioRendererIndex) (void *TVGObject, const wchar_t *Value);
      typedef BOOL (STDCALL *tAVIDuration) (void *TVGObject, const wchar_t *AVIFile, __int64*Duration, __int64*FrameCount);
      typedef const wchar_t * (STDCALL *tAVIHeaderInfo) (void *TVGObject, const wchar_t *AVIFile, THeaderAttribute HeaderAttribute);
      typedef BOOL (STDCALL *tAVIInfo) (void *TVGObject, const wchar_t *AVIFile, __int64*Duration, __int64*FrameCount, int*_VideoWidth, int*_VideoHeight, double*VideoFrameRateFps, int*AvgBitRate, int*AudioChannels, int*AudioSamplesPerSec, int*AudioBitsPerSample, const wchar_t **VideoCodec, const wchar_t **AudioCodec);
      typedef const wchar_t * (STDCALL *tAVIInfo2) (void *TVGObject, const wchar_t *AVIFile, TAVIInfoType AVIInfoType);
      typedef BOOL (STDCALL *tCameraControlAuto) (void *TVGObject, TCameraControl Setting);
      typedef int (STDCALL *tCameraControlDefault) (void *TVGObject, TCameraControl Setting);
      typedef int (STDCALL *tCameraControlMax) (void *TVGObject, TCameraControl Setting);
      typedef int (STDCALL *tCameraControlMin) (void *TVGObject, TCameraControl Setting);
      typedef int (STDCALL *tCameraControlStep) (void *TVGObject, TCameraControl Setting);
      typedef int (STDCALL *tCameraControlValue) (void *TVGObject, TCameraControl Setting);
      typedef BOOL (STDCALL *tCancel) (void *TVGObject);
      typedef BOOL (STDCALL *tCanProcessMessages) (void *TVGObject);
      typedef BOOL (STDCALL *tCaptureFrameRenderedTo) (void *TVGObject, int DisplayIndex, TFrameCaptureDest Dest, const wchar_t *FileName);
      typedef BOOL (STDCALL *tCaptureFrameSyncTo) (void *TVGObject, TFrameCaptureDest Dest, const wchar_t *FileName);
      typedef BOOL (STDCALL *tCaptureFrameTo) (void *TVGObject, TFrameCaptureDest Dest, const wchar_t *FileName);
      typedef void (STDCALL *tClearHeaderAttributes) (void *TVGObject);
      typedef void (STDCALL *tClosePlayer) (void *TVGObject);
      typedef void (STDCALL *tContinueProcessing) (void *TVGObject);
      typedef BOOL (STDCALL *tCreatePreallocCapFile) (void *TVGObject);
      typedef void * (STDCALL *tCreateVideoGrabber) (void *TVGObject);
      typedef void (STDCALL *tDestroyVideoGrabber) (void *TVGObject);
      typedef void (STDCALL *tDisplay_SetLocation) (void *TVGObject, int WindowLeft, int WindowTop, int WindowWidth, int WindowHeight);
      typedef BOOL (STDCALL *tDrawBitmapOverFrame) (void *TVGObject, HBITMAP BitmapHandle, BOOL Stretched, int LeftLocation, int TopLocation, int bmWidth, int bmHeight, BOOL Transparent_Enabled, BOOL UseTransparentColor, int Transparent_ColorValue, BOOL AlphaBlend_Enabled, int AlphaBlend_Value, BOOL ChromaKey, int ChromaKeyRGBColor, int ChromaKeyLeewayPercent);
      typedef void (STDCALL *tDualDisplay_SetLocation) (void *TVGObject, int WindowLeft, int WindowTop, int WindowWidth, int WindowHeight);
      typedef double (STDCALL *tDVDInfo) (void *TVGObject, const wchar_t *DVDRootDirectory, TDVDInfoType DVDInfoType, int TitleNumber);
      typedef BOOL (STDCALL *tEnableMultiplexedInput) (void *TVGObject, int InputNumber, BOOL Enable);
      typedef BOOL (STDCALL *tEnableMultipurposeEncoder) (void *TVGObject, TMultipurposeEncoderInstance MultipurposeEncoderType, BOOL Enable);
      typedef BOOL (STDCALL *tEnableThreadMode) (void *TVGObject);
      typedef BOOL (STDCALL *tEncoder_CloseOutputFile) (void *TVGObject, int EncoderUniqueID);
      typedef BOOL (STDCALL *tEncoder_GetInt) (void *TVGObject, int EncoderID, TEncoder_int Setting, int*Value);
      typedef BOOL (STDCALL *tEncoder_NewOutputFile) (void *TVGObject, int EncoderUniqueID, const wchar_t *OutputFile, BOOL OpenPaused);
      typedef BOOL (STDCALL *tEncoder_Pause) (void *TVGObject, int EncoderUniqueID);
      typedef BOOL (STDCALL *tEncoder_Resume) (void *TVGObject, int EncoderUniqueID);
      typedef BOOL (STDCALL *tEncoder_SetInt) (void *TVGObject, int EncoderID, TEncoder_int Setting, int Value);
      typedef BOOL (STDCALL *tEncoder_SetStr) (void *TVGObject, int EncoderID, TEncoder_str Setting, const wchar_t *Value);
      typedef int (STDCALL *tEncoders_CreateInstanceForRecording) (void *TVGObject, const wchar_t *OutputFile);
      typedef int (STDCALL *tEncoders_CreateInstanceForStreaming) (void *TVGObject, const wchar_t *OutputURL);
      typedef void (STDCALL *tEncoders_RemoveAllInstances) (void *TVGObject);
      typedef BOOL (STDCALL *tEncoders_RemoveInstance) (void *TVGObject, int EncoderUniqueID);
      typedef BOOL (STDCALL *tEnumerateWindows) (void *TVGObject);
      typedef void (STDCALL *tFastForwardPlayer) (void *TVGObject);
      typedef int (STDCALL *tFindIndexInListByName) (void *TVGObject, const wchar_t *List, const wchar_t *SearchedString, BOOL IsSubString, BOOL IgnoreCase);
      typedef BOOL (STDCALL *tGetAdjustOverlayAspectRatio) (void *TVGObject);
      typedef BOOL (STDCALL *tGetAdjustPixelAspectRatio) (void *TVGObject);
      typedef TAero (STDCALL *tGetAero) (void *TVGObject);
      typedef int (STDCALL *tGetAnalogVideoStandard) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetAnalogVideoStandards) (void *TVGObject);
      typedef int (STDCALL *tGetAnalogVideoStandardsCount) (void *TVGObject);
      typedef TApplicationPriority (STDCALL *tGetApplicationPriority) (void *TVGObject);
      typedef int (STDCALL *tGetASFAudioBitRate) (void *TVGObject);
      typedef int (STDCALL *tGetASFAudioChannels) (void *TVGObject);
      typedef int (STDCALL *tGetASFBufferWindow) (void *TVGObject);
      typedef TASFDeinterlaceMode (STDCALL *tGetASFDeinterlaceMode) (void *TVGObject);
      typedef BOOL (STDCALL *tGetASFDirectStreamingKeepClientsConnected) (void *TVGObject);
      typedef BOOL (STDCALL *tGetASFFixedFrameRate) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetASFMediaServerPublishingPoint) (void *TVGObject);
      typedef BOOL (STDCALL *tGetASFMediaServerRemovePublishingPointAfterDisconnect) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetASFMediaServerTemplatePublishingPoint) (void *TVGObject);
      typedef int (STDCALL *tGetASFNetworkMaxUsers) (void *TVGObject);
      typedef int (STDCALL *tGetASFNetworkPort) (void *TVGObject);
      typedef int (STDCALL *tGetASFProfile) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetASFProfileFromCustomFile) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetASFProfiles) (void *TVGObject);
      typedef int (STDCALL *tGetASFProfilesCount) (void *TVGObject);
      typedef TASFProfileVersion (STDCALL *tGetASFProfileVersion) (void *TVGObject);
      typedef int (STDCALL *tGetASFVideoBitRate) (void *TVGObject);
      typedef double (STDCALL *tGetASFVideoFrameRate) (void *TVGObject);
      typedef int (STDCALL *tGetASFVideoHeight) (void *TVGObject);
      typedef int (STDCALL *tGetASFVideoMaxKeyFrameSpacing) (void *TVGObject);
      typedef int (STDCALL *tGetASFVideoQuality) (void *TVGObject);
      typedef int (STDCALL *tGetASFVideoWidth) (void *TVGObject);
      typedef double (STDCALL *tGetAspectRatioToUse) (void *TVGObject);
      typedef BOOL (STDCALL *tGetAssociateAudioAndVideoDevices) (void *TVGObject);
      typedef int (STDCALL *tGetAudioBalance) (void *TVGObject);
      typedef TAudioChannelRenderMode (STDCALL *tGetAudioChannelRenderMode) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetAudioCodec) (void *TVGObject);
      typedef int (STDCALL *tGetAudioCompressor) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetAudioCompressorName) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetAudioCompressors) (void *TVGObject);
      typedef int (STDCALL *tGetAudioCompressorsCount) (void *TVGObject);
      typedef int (STDCALL *tGetAudioDevice) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetAudioDeviceName) (void *TVGObject);
      typedef BOOL (STDCALL *tGetAudioDeviceRendering) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetAudioDevices) (void *TVGObject);
      typedef int (STDCALL *tGetAudioDevicesCount) (void *TVGObject);
      typedef TAudioFormat (STDCALL *tGetAudioFormat) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetAudioFormats) (void *TVGObject);
      typedef int (STDCALL *tGetAudioInput) (void *TVGObject);
      typedef int (STDCALL *tGetAudioInputBalance) (void *TVGObject);
      typedef int (STDCALL *tGetAudioInputLevel) (void *TVGObject);
      typedef BOOL (STDCALL *tGetAudioInputMono) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetAudioInputs) (void *TVGObject);
      typedef int (STDCALL *tGetAudioInputsCount) (void *TVGObject);
      typedef BOOL (STDCALL *tGetAudioPeakEvent) (void *TVGObject);
      typedef BOOL (STDCALL *tGetAudioRecording) (void *TVGObject);
      typedef int (STDCALL *tGetAudioRenderer) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetAudioRendererName) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetAudioRenderers) (void *TVGObject);
      typedef int (STDCALL *tGetAudioRenderersCount) (void *TVGObject);
      typedef TAudioSource (STDCALL *tGetAudioSource) (void *TVGObject);
      typedef int (STDCALL *tGetAudioStreamNumber) (void *TVGObject);
      typedef int (STDCALL *tGetAudioSyncAdjustment) (void *TVGObject);
      typedef BOOL (STDCALL *tGetAudioSyncAdjustmentEnabled) (void *TVGObject);
      typedef int (STDCALL *tGetAudioVolume) (void *TVGObject);
      typedef BOOL (STDCALL *tGetAutoConnectRelatedPins) (void *TVGObject);
      typedef TAutoFileName (STDCALL *tGetAutoFileName) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetAutoFileNameDateTimeFormat) (void *TVGObject);
      typedef int (STDCALL *tGetAutoFileNameMinDigits) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetAutoFilePrefix) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetAutoFileSuffix) (void *TVGObject);
      typedef BOOL (STDCALL *tGetAutoRefreshPreview) (void *TVGObject);
      typedef BOOL (STDCALL *tGetAutoStartPlayer) (void *TVGObject);
      typedef BOOL (STDCALL *tGetAVIDurationUpdated) (void *TVGObject);
      typedef BOOL (STDCALL *tGetAVIFormatOpenDML) (void *TVGObject);
      typedef BOOL (STDCALL *tGetAVIFormatOpenDMLCompatibilityIndex) (void *TVGObject);
      typedef int (STDCALL *tGetBackgroundColor) (void *TVGObject);
      typedef int (STDCALL *tGetBufferCount) (void *TVGObject);
      typedef int (STDCALL *tGetBurstCount) (void *TVGObject);
      typedef int (STDCALL *tGetBurstInterval) (void *TVGObject);
      typedef BOOL (STDCALL *tGetBurstMode) (void *TVGObject);
      typedef TFrameCaptureDest (STDCALL *tGetBurstType) (void *TVGObject);
      typedef BOOL (STDCALL *tGetBusy) (void *TVGObject);
      typedef TCursors (STDCALL *tGetBusyCursor) (void *TVGObject);
      typedef BOOL (STDCALL *tGetCameraControlSettings) (void *TVGObject);
      typedef double (STDCALL *tGetCameraExposure) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetCameraExposureAsString) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetCaptureFileExt) (void *TVGObject);
      typedef int (STDCALL *tGetColorKey) (void *TVGObject);
      typedef BOOL (STDCALL *tGetColorKeyEnabled) (void *TVGObject);
      typedef TCompressionMode (STDCALL *tGetCompressionMode) (void *TVGObject);
      typedef TCompressionType (STDCALL *tGetCompressionType) (void *TVGObject);
      typedef BOOL (STDCALL *tGetCropping_Enabled) (void *TVGObject);
      typedef int (STDCALL *tGetCropping_Height) (void *TVGObject);
      typedef BOOL (STDCALL *tGetCropping_Outbounds) (void *TVGObject);
      typedef int (STDCALL *tGetCropping_Width) (void *TVGObject);
      typedef int (STDCALL *tGetCropping_X) (void *TVGObject);
      typedef int (STDCALL *tGetCropping_XMax) (void *TVGObject);
      typedef int (STDCALL *tGetCropping_Y) (void *TVGObject);
      typedef int (STDCALL *tGetCropping_YMax) (void *TVGObject);
      typedef double (STDCALL *tGetCropping_Zoom) (void *TVGObject);
      typedef double (STDCALL *tGetCurrentFrameRate) (void *TVGObject);
      typedef TCurrentState (STDCALL *tGetCurrentState) (void *TVGObject);
      typedef __int64 (STDCALL *tGetDeliveredFrames) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetDirectShowFilters) (void *TVGObject);
      typedef int (STDCALL *tGetDirectShowFiltersCount) (void *TVGObject);
      typedef BOOL (STDCALL *tGetDisplayActive) (void *TVGObject, int DisplayIndex);
      typedef BOOL (STDCALL *tGetDisplayAlphaBlendEnabled) (void *TVGObject, int DisplayIndex);
      typedef int (STDCALL *tGetDisplayAlphaBlendValue) (void *TVGObject, int DisplayIndex);
      typedef TAspectRatio (STDCALL *tGetDisplayAspectRatio) (void *TVGObject, int DisplayIndex);
      typedef BOOL (STDCALL *tGetDisplayAutoSize) (void *TVGObject, int DisplayIndex);
      typedef BOOL (STDCALL *tGetDisplayEmbedded) (void *TVGObject, int DisplayIndex);
      typedef BOOL (STDCALL *tGetDisplayEmbedded_FitParent) (void *TVGObject, int DisplayIndex);
      typedef BOOL (STDCALL *tGetDisplayFullScreen) (void *TVGObject, int DisplayIndex);
      typedef int (STDCALL *tGetDisplayHeight) (void *TVGObject, int DisplayIndex);
      typedef int (STDCALL *tGetDisplayLeft) (void *TVGObject, int DisplayIndex);
      typedef int (STDCALL *tGetDisplayMonitor) (void *TVGObject, int DisplayIndex);
      typedef BOOL (STDCALL *tGetDisplayMouseMovesWindow) (void *TVGObject, int DisplayIndex);
      typedef int (STDCALL *tGetDisplayPanScanRatio) (void *TVGObject, int DisplayIndex);
      typedef BOOL (STDCALL *tGetDisplayStayOnTop) (void *TVGObject, int DisplayIndex);
      typedef int (STDCALL *tGetDisplayTop) (void *TVGObject, int DisplayIndex);
      typedef BOOL (STDCALL *tGetDisplayTransparentColorEnabled) (void *TVGObject, int DisplayIndex);
      typedef int (STDCALL *tGetDisplayTransparentColorValue) (void *TVGObject, int DisplayIndex);
      typedef int (STDCALL *tGetDisplayVideoHeight) (void *TVGObject, int DisplayIndex);
      typedef BOOL (STDCALL *tGetDisplayVideoPortEnabled) (void *TVGObject, int DisplayIndex);
      typedef int (STDCALL *tGetDisplayVideoWidth) (void *TVGObject, int DisplayIndex);
      typedef HWND (STDCALL *tGetDisplayVideoWindowHandle) (void *TVGObject, int DisplayIndex);
      typedef BOOL (STDCALL *tGetDisplayVisible) (void *TVGObject, int DisplayIndex);
      typedef int (STDCALL *tGetDisplayWidth) (void *TVGObject, int DisplayIndex);
      typedef int (STDCALL *tGetDroppedFrameCount) (void *TVGObject);
      typedef int (STDCALL *tGetDroppedFramesPollingInterval) (void *TVGObject);
      typedef BOOL (STDCALL *tGetDVDateTimeEnabled) (void *TVGObject);
      typedef int (STDCALL *tGetDVDiscontinuityMinimumInterval) (void *TVGObject);
      typedef int (STDCALL *tGetDVDTitle) (void *TVGObject);
      typedef TDVVideoFormat (STDCALL *tGetDVEncoder_VideoFormat) (void *TVGObject);
      typedef TDVSize (STDCALL *tGetDVEncoder_VideoResolution) (void *TVGObject);
      typedef TDVVideoStandard (STDCALL *tGetDVEncoder_VideoStandard) (void *TVGObject);
      typedef BOOL (STDCALL *tGetDVRecordingInNativeFormatSeparatesStreams) (void *TVGObject);
      typedef BOOL (STDCALL *tGetDVReduceFrameRate) (void *TVGObject);
      typedef BOOL (STDCALL *tGetDVRgb219) (void *TVGObject);
      typedef BOOL (STDCALL *tGetDVTimeCodeEnabled) (void *TVGObject);
      typedef BOOL (STDCALL *tGetEventNotificationSynchrone) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetExtraDLLPath) (void *TVGObject);
      typedef BOOL (STDCALL *tGetFilterInterfaceByName) (void *TVGObject, const wchar_t *FilterName, void **FilterIntf);
      typedef BOOL (STDCALL *tGetFixFlickerOrBlackCapture) (void *TVGObject);
      typedef int (STDCALL *tGetFrameBitmapInfo) (void *TVGObject, TFrameBitmapInfoType FrameBitmapInfoType);
      typedef int (STDCALL *tGetFrameCaptureHeight) (void *TVGObject);
      typedef int (STDCALL *tGetFrameCaptureWidth) (void *TVGObject);
      typedef BOOL (STDCALL *tGetFrameCaptureWithoutOverlay) (void *TVGObject);
      typedef int (STDCALL *tGetFrameCaptureZoomSize) (void *TVGObject);
      typedef TFrameGrabber (STDCALL *tGetFrameGrabber) (void *TVGObject);
      typedef TFrameGrabberRGBFormat (STDCALL *tGetFrameGrabberCurrentRGBFormat) (void *TVGObject);
      typedef TFrameGrabberRGBFormat (STDCALL *tGetFrameGrabberRGBFormat) (void *TVGObject);
      typedef __int64 (STDCALL *tGetFrameInfo) (void *TVGObject, int FrameId, TFrameInfoId FrameInfoId);
      typedef const wchar_t * (STDCALL *tGetFrameInfoString) (void *TVGObject, TFrameInfoStringId FrameInfoStringId);
      typedef BOOL (STDCALL *tGetFrameNumberStartsFromZero) (void *TVGObject);
      typedef double (STDCALL *tGetFrameRate) (void *TVGObject);
      typedef int (STDCALL *tGetFrameRateDivider) (void *TVGObject);
      typedef BOOL (STDCALL *tGetFWCam1394) (void *TVGObject, const wchar_t *FWCam1394ID, int*Value, int*Flags, unsigned int*Capabilities, int*MinValue, int*MaxValue, int*Default);
      typedef const wchar_t * (STDCALL *tGetFWCam1394List) (void *TVGObject);
      typedef int (STDCALL *tGetGetLastFrameWaitTimeoutMs) (void *TVGObject);
      typedef BOOL (STDCALL *tGetHoldRecording) (void *TVGObject);
      typedef BOOL (STDCALL *tGetImageOverlay_AlphaBlend) (void *TVGObject, int Index);
      typedef int (STDCALL *tGetImageOverlay_AlphaBlendValue) (void *TVGObject, int Index);
      typedef BOOL (STDCALL *tGetImageOverlay_ChromaKey) (void *TVGObject, int Index);
      typedef int (STDCALL *tGetImageOverlay_ChromaKeyLeewayPercent) (void *TVGObject, int Index);
      typedef int (STDCALL *tGetImageOverlay_ChromaKeyRGBColor) (void *TVGObject, int Index);
      typedef BOOL (STDCALL *tGetImageOverlay_Enabled) (void *TVGObject, int Index);
      typedef int (STDCALL *tGetImageOverlay_Height) (void *TVGObject, int Index);
      typedef int (STDCALL *tGetImageOverlay_LeftLocation) (void *TVGObject, int Index);
      typedef double (STDCALL *tGetImageOverlay_RotationAngle) (void *TVGObject, int Index);
      typedef BOOL (STDCALL *tGetImageOverlay_StretchToVideoSize) (void *TVGObject, int Index);
      typedef int (STDCALL *tGetImageOverlay_TargetDisplay) (void *TVGObject, int Index);
      typedef int (STDCALL *tGetImageOverlay_TopLocation) (void *TVGObject, int Index);
      typedef BOOL (STDCALL *tGetImageOverlay_Transparent) (void *TVGObject, int Index);
      typedef int (STDCALL *tGetImageOverlay_TransparentColorValue) (void *TVGObject, int Index);
      typedef BOOL (STDCALL *tGetImageOverlay_UseTransparentColor) (void *TVGObject, int Index);
      typedef TVideoAlignment (STDCALL *tGetImageOverlay_VideoAlignment) (void *TVGObject, int Index);
      typedef int (STDCALL *tGetImageOverlay_Width) (void *TVGObject, int Index);
      typedef BOOL (STDCALL *tGetImageOverlayAlphaBlend) (void *TVGObject);
      typedef int (STDCALL *tGetImageOverlayAlphaBlendValue) (void *TVGObject);
      typedef BOOL (STDCALL *tGetImageOverlayChromaKey) (void *TVGObject);
      typedef int (STDCALL *tGetImageOverlayChromaKeyLeewayPercent) (void *TVGObject);
      typedef int (STDCALL *tGetImageOverlayChromaKeyRGBColor) (void *TVGObject);
      typedef BOOL (STDCALL *tGetImageOverlayEnabled) (void *TVGObject);
      typedef int (STDCALL *tGetImageOverlayHeight) (void *TVGObject);
      typedef int (STDCALL *tGetImageOverlayLeftLocation) (void *TVGObject);
      typedef double (STDCALL *tGetImageOverlayRotationAngle) (void *TVGObject);
      typedef int (STDCALL *tGetImageOverlaySelector) (void *TVGObject);
      typedef BOOL (STDCALL *tGetImageOverlayStretchToVideoSize) (void *TVGObject);
      typedef int (STDCALL *tGetImageOverlayTargetDisplay) (void *TVGObject);
      typedef int (STDCALL *tGetImageOverlayTopLocation) (void *TVGObject);
      typedef BOOL (STDCALL *tGetImageOverlayTransparent) (void *TVGObject);
      typedef int (STDCALL *tGetImageOverlayTransparentColorValue) (void *TVGObject);
      typedef BOOL (STDCALL *tGetImageOverlayUseTransparentColor) (void *TVGObject);
      typedef TVideoAlignment (STDCALL *tGetImageOverlayVideoAlignment) (void *TVGObject);
      typedef int (STDCALL *tGetImageOverlayWidth) (void *TVGObject);
      typedef double (STDCALL *tGetImageRatio) (void *TVGObject);
      typedef BOOL (STDCALL *tGetInFrameProgressEvent) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetIPCameraURL) (void *TVGObject);
      typedef BOOL (STDCALL *tGetIsAnalogVideoDecoderAvailable) (void *TVGObject);
      typedef BOOL (STDCALL *tGetIsAudioCrossbarAvailable) (void *TVGObject);
      typedef TTriState (STDCALL *tGetIsAudioInputBalanceAvailable) (void *TVGObject);
      typedef BOOL (STDCALL *tGetIsCameraControlAvailable) (void *TVGObject);
      typedef BOOL (STDCALL *tGetIsDigitalVideoIn) (void *TVGObject);
      typedef BOOL (STDCALL *tGetIsDVCommandAvailable) (void *TVGObject);
      typedef BOOL (STDCALL *tGetIsHorizontalSyncLocked) (void *TVGObject);
      typedef BOOL (STDCALL *tGetIsMpegStream) (void *TVGObject);
      typedef TTriState (STDCALL *tGetIsPlayerAudioStreamAvailable) (void *TVGObject);
      typedef TTriState (STDCALL *tGetIsPlayerVideoStreamAvailable) (void *TVGObject);
      typedef BOOL (STDCALL *tGetIsRecordingPaused) (void *TVGObject);
      typedef BOOL (STDCALL *tGetIsTVAudioAvailable) (void *TVGObject);
      typedef BOOL (STDCALL *tGetIsTVAutoTuneRunning) (void *TVGObject);
      typedef BOOL (STDCALL *tGetIsTVTunerAvailable) (void *TVGObject);
      typedef BOOL (STDCALL *tGetIsVideoControlAvailable) (void *TVGObject);
      typedef BOOL (STDCALL *tGetIsVideoCrossbarAvailable) (void *TVGObject);
      typedef BOOL (STDCALL *tGetIsVideoInterlaced) (void *TVGObject);
      typedef BOOL (STDCALL *tGetIsVideoPortAvailable) (void *TVGObject);
      typedef BOOL (STDCALL *tGetIsVideoQualityAvailable) (void *TVGObject);
      typedef BOOL (STDCALL *tGetIsWDMVideoDriver) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetItemNameFromList) (void *TVGObject, const wchar_t *List, int ItemIndex);
      typedef TJPEGPerformance (STDCALL *tGetJPEGPerformance) (void *TVGObject);
      typedef BOOL (STDCALL *tGetJPEGProgressiveDisplay) (void *TVGObject);
      typedef int (STDCALL *tGetJPEGQuality) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetLast_BurstFrameCapture_FileName) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetLast_CaptureFrameTo_FileName) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetLast_Clip_Played) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetLast_Recording_FileName) (void *TVGObject);
      typedef int (STDCALL *tGetLastAverageStreamValue) (void *TVGObject, TStreamType StreamType);
      typedef HBITMAP (STDCALL *tGetLastFrameAsHBITMAP) (void *TVGObject, int BufferIndex, BOOL WithOverlays, int SrcLeftLocation, int SrcTopLocation, int SrcWidth, int SrcHeight, int DestWidth, int DestHeight, int BitmapColorBitCount);
      typedef void * (STDCALL *tGetLastFrameBitmapBits) (void *TVGObject, int BufferIndex, BOOL WithOverlays, BOOL ReleaseFrame);
      typedef void * (STDCALL *tGetLastFrameBitmapBits2) (void *TVGObject, int BufferIndex, BOOL WithOverlays, BOOL ReleaseFrame, int*BitmapWidth, int*BitmapHeight, int*BitmapLineSize, int*BitmapSize, int*BitmapBitsPerPixel);
      typedef const wchar_t * (STDCALL *tGetLicenseString) (void *TVGObject);
      typedef BOOL (STDCALL *tGetLogoDisplayed) (void *TVGObject);
      typedef TLogoLayout (STDCALL *tGetLogoLayout) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetLogString) (void *TVGObject, TLogType Value);
      typedef int (STDCALL *tGetMiscDeviceControl) (void *TVGObject, TMiscDeviceControl MiscDeviceControl, int Index);
      typedef int (STDCALL *tGetMixAudioSamplesLevel) (void *TVGObject, int Index);
      typedef int (STDCALL *tGetMixer_MosaicColumns) (void *TVGObject);
      typedef int (STDCALL *tGetMixer_MosaicLines) (void *TVGObject);
      typedef BOOL (STDCALL *tGetMotionDetector_CompareBlue) (void *TVGObject);
      typedef BOOL (STDCALL *tGetMotionDetector_CompareGreen) (void *TVGObject);
      typedef BOOL (STDCALL *tGetMotionDetector_CompareRed) (void *TVGObject);
      typedef BOOL (STDCALL *tGetMotionDetector_Enabled) (void *TVGObject);
      typedef double (STDCALL *tGetMotionDetector_GlobalMotionRatio) (void *TVGObject);
      typedef BOOL (STDCALL *tGetMotionDetector_GreyScale) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetMotionDetector_Grid) (void *TVGObject);
      typedef int (STDCALL *tGetMotionDetector_GridXCount) (void *TVGObject);
      typedef int (STDCALL *tGetMotionDetector_GridYCount) (void *TVGObject);
      typedef BOOL (STDCALL *tGetMotionDetector_IsGridValid) (void *TVGObject);
      typedef double (STDCALL *tGetMotionDetector_MaxDetectionsPerSecond) (void *TVGObject);
      typedef int (STDCALL *tGetMotionDetector_MotionResetMs) (void *TVGObject);
      typedef int (STDCALL *tGetMotionDetector_ReduceCPULoad) (void *TVGObject);
      typedef BOOL (STDCALL *tGetMotionDetector_ReduceVideoNoise) (void *TVGObject);
      typedef BOOL (STDCALL *tGetMotionDetector_Triggered) (void *TVGObject);
      typedef BOOL (STDCALL *tGetMouseWheelControlsZoomAtCursor) (void *TVGObject);
      typedef BOOL (STDCALL *tGetMouseWheelEventEnabled) (void *TVGObject);
      typedef TMpegStreamType (STDCALL *tGetMpegStreamType) (void *TVGObject);
      typedef BOOL (STDCALL *tGetMultiplexedInputEmulation) (void *TVGObject);
      typedef TMultiplexedRole (STDCALL *tGetMultiplexedRole) (void *TVGObject);
      typedef int (STDCALL *tGetMultiplexedStabilizationDelay) (void *TVGObject);
      typedef int (STDCALL *tGetMultiplexedSwitchDelay) (void *TVGObject);
      typedef int (STDCALL *tGetMultiplexer) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetMultiplexerName) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetMultiplexers) (void *TVGObject);
      typedef int (STDCALL *tGetMultiplexersCount) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetMultipurposeEncoderSettings) (void *TVGObject, TMultipurposeEncoderInstance MultipurposeEncoderType);
      typedef BOOL (STDCALL *tGetMuteAudioRendering) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetName) (void *TVGObject);
      typedef TNDIBandwidthType (STDCALL *tGetNDIBandwidthType) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetNDIGroups) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetNDIName) (void *TVGObject);
      typedef int (STDCALL *tGetNDIReceiveTimeoutMs) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetNDISessions) (void *TVGObject, BOOL AsXML, BOOL ReportURLInfo);
      typedef int (STDCALL *tGetNearestVideoHeight) (void *TVGObject, int PreferredVideoWidth, int PreferredVideoHeight);
      typedef void (STDCALL *tGetNearestVideoSize) (void *TVGObject, int PreferredVideoWidth, int PreferredVideoHeight, int*NearestVideoWidth, int*NearestVideoHeight);
      typedef int (STDCALL *tGetNearestVideoWidth) (void *TVGObject, int PreferredVideoWidth, int PreferredVideoHeight);
      typedef TNetworkStreaming (STDCALL *tGetNetworkStreaming) (void *TVGObject);
      typedef TNetworkStreamingType (STDCALL *tGetNetworkStreamingType) (void *TVGObject);
      typedef TCursors (STDCALL *tGetNormalCursor) (void *TVGObject);
      typedef TNotificationMethod (STDCALL *tGetNotificationMethod) (void *TVGObject);
      typedef TThreadPriority (STDCALL *tGetNotificationPriority) (void *TVGObject);
      typedef int (STDCALL *tGetNotificationSleepTime) (void *TVGObject);
      typedef BOOL (STDCALL *tGetOnFrameBitmapEventSynchrone) (void *TVGObject);
      typedef BOOL (STDCALL *tGetOpenURLAsync) (void *TVGObject);
      typedef BOOL (STDCALL *tGetOverlayAfterTransform) (void *TVGObject);
      typedef double (STDCALL *tGetPixelsDistance) (void *TVGObject, int x1, int y1, int x2, int y2);
      typedef BOOL (STDCALL *tGetPlayerAudioRendering) (void *TVGObject);
      typedef __int64 (STDCALL *tGetPlayerDuration) (void *TVGObject);
      typedef TDVSize (STDCALL *tGetPlayerDVSize) (void *TVGObject);
      typedef int (STDCALL *tGetPlayerFastSeekSpeedRatio) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetPlayerFileName) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetPlayerForcedCodec) (void *TVGObject);
      typedef __int64 (STDCALL *tGetPlayerFrameCount) (void *TVGObject);
      typedef __int64 (STDCALL *tGetPlayerFramePosition) (void *TVGObject);
      typedef double (STDCALL *tGetPlayerFrameRate) (void *TVGObject);
      typedef THwAccel (STDCALL *tGetPlayerHwAccel) (void *TVGObject);
      typedef int (STDCALL *tGetPlayerOpenProgressPercent) (void *TVGObject);
      typedef BOOL (STDCALL *tGetPlayerRefreshPausedDisplay) (void *TVGObject);
      typedef double (STDCALL *tGetPlayerRefreshPausedDisplayFrameRate) (void *TVGObject);
      typedef double (STDCALL *tGetPlayerSpeedRatio) (void *TVGObject);
      typedef BOOL (STDCALL *tGetPlayerSpeedRatioConstantAudioPitch) (void *TVGObject);
      typedef TPlayerState (STDCALL *tGetPlayerState) (void *TVGObject);
      typedef __int64 (STDCALL *tGetPlayerTimePosition) (void *TVGObject);
      typedef BOOL (STDCALL *tGetPlayerTrackBarSynchrone) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetPlaylist) (void *TVGObject);
      typedef int (STDCALL *tGetPlaylistIndex) (void *TVGObject);
      typedef BOOL (STDCALL *tGetPreallocCapFileCopiedAfterRecording) (void *TVGObject);
      typedef BOOL (STDCALL *tGetPreallocCapFileEnabled) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetPreallocCapFileName) (void *TVGObject);
      typedef int (STDCALL *tGetPreallocCapFileSizeInMB) (void *TVGObject);
      typedef int (STDCALL *tGetPreviewZoomSize) (void *TVGObject);
      typedef BOOL (STDCALL *tGetQuickDeviceInitialization) (void *TVGObject);
      typedef BOOL (STDCALL *tGetRawAudioSampleCapture) (void *TVGObject);
      typedef BOOL (STDCALL *tGetRawCaptureAsyncEvent) (void *TVGObject);
      typedef TRawSampleCaptureLocation (STDCALL *tGetRawSampleCaptureLocation) (void *TVGObject);
      typedef BOOL (STDCALL *tGetRawVideoSampleCapture) (void *TVGObject);
      typedef int (STDCALL *tGetRecordingAudioBitRate) (void *TVGObject);
      typedef int (STDCALL *tGetRecordingBacktimedFramesCount) (void *TVGObject);
      typedef BOOL (STDCALL *tGetRecordingCanPause) (void *TVGObject);
      typedef double (STDCALL *tGetRecordingDuration) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetRecordingFileName) (void *TVGObject);
      typedef int (STDCALL *tGetRecordingFileSizeMaxInMB) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetRecordingFourCC) (void *TVGObject);
      typedef int (STDCALL *tGetRecordingHeight) (void *TVGObject);
      typedef BOOL (STDCALL *tGetRecordingInNativeFormat) (void *TVGObject);
      typedef TRecordingMethod (STDCALL *tGetRecordingMethod) (void *TVGObject);
      typedef BOOL (STDCALL *tGetRecordingOnMotion_Enabled) (void *TVGObject);
      typedef double (STDCALL *tGetRecordingOnMotion_MotionThreshold) (void *TVGObject);
      typedef int (STDCALL *tGetRecordingOnMotion_NoMotionPauseDelayMs) (void *TVGObject);
      typedef BOOL (STDCALL *tGetRecordingPauseCreatesNewFile) (void *TVGObject);
      typedef TRecordingSize (STDCALL *tGetRecordingSize) (void *TVGObject);
      typedef TRecordingTimer (STDCALL *tGetRecordingTimer) (void *TVGObject);
      typedef int (STDCALL *tGetRecordingTimerInterval) (void *TVGObject);
      typedef int (STDCALL *tGetRecordingVideoBitRate) (void *TVGObject);
      typedef int (STDCALL *tGetRecordingWidth) (void *TVGObject);
      typedef BOOL (STDCALL *tGetReencodingIncludeAudioStream) (void *TVGObject);
      typedef BOOL (STDCALL *tGetReencodingIncludeVideoStream) (void *TVGObject);
      typedef TRecordingMethod (STDCALL *tGetReencodingMethod) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetReencodingNewVideoClip) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetReencodingSourceVideoClip) (void *TVGObject);
      typedef __int64 (STDCALL *tGetReencodingStartFrame) (void *TVGObject);
      typedef __int64 (STDCALL *tGetReencodingStartTime) (void *TVGObject);
      typedef __int64 (STDCALL *tGetReencodingStopFrame) (void *TVGObject);
      typedef __int64 (STDCALL *tGetReencodingStopTime) (void *TVGObject);
      typedef BOOL (STDCALL *tGetReencodingUseAudioCompressor) (void *TVGObject);
      typedef BOOL (STDCALL *tGetReencodingUseFrameGrabber) (void *TVGObject);
      typedef BOOL (STDCALL *tGetReencodingUseVideoCompressor) (void *TVGObject);
      typedef BOOL (STDCALL *tGetReencodingWMVOutput) (void *TVGObject);
      typedef int (STDCALL *tGetRGBPixelAt) (void *TVGObject, int x, int y);
      typedef BOOL (STDCALL *tGetScreenRecordingLayeredWindows) (void *TVGObject);
      typedef int (STDCALL *tGetScreenRecordingMonitor) (void *TVGObject);
      typedef BOOL (STDCALL *tGetScreenRecordingNonVisibleWindows) (void *TVGObject);
      typedef int (STDCALL *tGetScreenRecordingSizePercent) (void *TVGObject);
      typedef BOOL (STDCALL *tGetScreenRecordingThroughClipboard) (void *TVGObject);
      typedef BOOL (STDCALL *tGetScreenRecordingWithCursor) (void *TVGObject);
      typedef int (STDCALL *tGetSendToDV_DeviceIndex) (void *TVGObject);
      typedef int (STDCALL *tGetSpeakerBalance) (void *TVGObject);
      typedef BOOL (STDCALL *tGetSpeakerControl) (void *TVGObject);
      typedef int (STDCALL *tGetSpeakerVolume) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetStoragePath) (void *TVGObject);
      typedef TStoragePathMode (STDCALL *tGetStoragePathMode) (void *TVGObject);
      typedef BOOL (STDCALL *tGetStoreDeviceSettingsInRegistry) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetStreamingURL) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetStreamInterface_Format) (void *TVGObject);
      typedef double (STDCALL *tGetStreamInterface_FrameRate) (void *TVGObject);
      typedef BOOL (STDCALL *tGetStreamInterface_IsRealTime) (void *TVGObject);
      typedef BOOL (STDCALL *tGetSyncCommands) (void *TVGObject);
      typedef TSynchronizationRole (STDCALL *tGetSynchronizationRole) (void *TVGObject);
      typedef BOOL (STDCALL *tGetSynchronized) (void *TVGObject);
      typedef TSyncPreview (STDCALL *tGetSyncPreview) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetSystemTempPath) (void *TVGObject);
      typedef TTextOverlayAlign (STDCALL *tGetTextOverlay_Align) (void *TVGObject, int Index);
      typedef BOOL (STDCALL *tGetTextOverlay_AlphaBlend) (void *TVGObject, int Index);
      typedef int (STDCALL *tGetTextOverlay_AlphaBlendValue) (void *TVGObject, int Index);
      typedef int (STDCALL *tGetTextOverlay_BkColor) (void *TVGObject, int Index);
      typedef BOOL (STDCALL *tGetTextOverlay_Enabled) (void *TVGObject, int Index);
      typedef INT_PTR (STDCALL *tGetTextOverlay_Font) (void *TVGObject, int Index);
      typedef int (STDCALL *tGetTextOverlay_FontColor) (void *TVGObject, int Index);
      typedef int (STDCALL *tGetTextOverlay_FontSize) (void *TVGObject, int Index);
      typedef int (STDCALL *tGetTextOverlay_GradientColor) (void *TVGObject, int Index);
      typedef TTextOverlayGradientMode (STDCALL *tGetTextOverlay_GradientMode) (void *TVGObject, int Index);
      typedef BOOL (STDCALL *tGetTextOverlay_HighResFont) (void *TVGObject, int Index);
      typedef int (STDCALL *tGetTextOverlay_Left) (void *TVGObject, int Index);
      typedef TTextOrientation (STDCALL *tGetTextOverlay_Orientation) (void *TVGObject, int Index);
      typedef int (STDCALL *tGetTextOverlay_Right) (void *TVGObject, int Index);
      typedef BOOL (STDCALL *tGetTextOverlay_Scrolling) (void *TVGObject, int Index);
      typedef int (STDCALL *tGetTextOverlay_ScrollingSpeed) (void *TVGObject, int Index);
      typedef BOOL (STDCALL *tGetTextOverlay_Shadow) (void *TVGObject, int Index);
      typedef int (STDCALL *tGetTextOverlay_ShadowColor) (void *TVGObject, int Index);
      typedef TCardinalDirection (STDCALL *tGetTextOverlay_ShadowDirection) (void *TVGObject, int Index);
      typedef const wchar_t * (STDCALL *tGetTextOverlay_String) (void *TVGObject, int Index);
      typedef int (STDCALL *tGetTextOverlay_TargetDisplay) (void *TVGObject, int Index);
      typedef int (STDCALL *tGetTextOverlay_Top) (void *TVGObject, int Index);
      typedef BOOL (STDCALL *tGetTextOverlay_Transparent) (void *TVGObject, int Index);
      typedef TVideoAlignment (STDCALL *tGetTextOverlay_VideoAlignment) (void *TVGObject, int Index);
      typedef TTextOverlayAlign (STDCALL *tGetTextOverlayAlign) (void *TVGObject);
      typedef BOOL (STDCALL *tGetTextOverlayAlphaBlend) (void *TVGObject);
      typedef int (STDCALL *tGetTextOverlayAlphaBlendValue) (void *TVGObject);
      typedef int (STDCALL *tGetTextOverlayBkColor) (void *TVGObject);
      typedef BOOL (STDCALL *tGetTextOverlayEnabled) (void *TVGObject);
      typedef INT_PTR (STDCALL *tGetTextOverlayFont) (void *TVGObject);
      typedef int (STDCALL *tGetTextOverlayFontColor) (void *TVGObject);
      typedef int (STDCALL *tGetTextOverlayFontSize) (void *TVGObject);
      typedef int (STDCALL *tGetTextOverlayGradientColor) (void *TVGObject);
      typedef TTextOverlayGradientMode (STDCALL *tGetTextOverlayGradientMode) (void *TVGObject);
      typedef BOOL (STDCALL *tGetTextOverlayHighResFont) (void *TVGObject);
      typedef int (STDCALL *tGetTextOverlayLeft) (void *TVGObject);
      typedef TTextOrientation (STDCALL *tGetTextOverlayOrientation) (void *TVGObject);
      typedef int (STDCALL *tGetTextOverlayRight) (void *TVGObject);
      typedef BOOL (STDCALL *tGetTextOverlayScrolling) (void *TVGObject);
      typedef int (STDCALL *tGetTextOverlayScrollingSpeed) (void *TVGObject);
      typedef int (STDCALL *tGetTextOverlaySelector) (void *TVGObject);
      typedef BOOL (STDCALL *tGetTextOverlayShadow) (void *TVGObject);
      typedef int (STDCALL *tGetTextOverlayShadowColor) (void *TVGObject);
      typedef TCardinalDirection (STDCALL *tGetTextOverlayShadowDirection) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetTextOverlayString) (void *TVGObject);
      typedef int (STDCALL *tGetTextOverlayTargetDisplay) (void *TVGObject);
      typedef int (STDCALL *tGetTextOverlayTop) (void *TVGObject);
      typedef BOOL (STDCALL *tGetTextOverlayTransparent) (void *TVGObject);
      typedef TVideoAlignment (STDCALL *tGetTextOverlayVideoAlignment) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetThirdPartyDeinterlacer) (void *TVGObject);
      typedef BOOL (STDCALL *tGetTimeCodeReaderAvailable) (void *TVGObject);
      typedef BOOL (STDCALL *tGetTranslatedCoordinates) (void *TVGObject, int DisplayIndex, int NativeX, int NativeY, int*TranslatedX, int*TranslatedY);
      typedef BOOL (STDCALL *tGetTranslateMouseCoordinates) (void *TVGObject);
      typedef int (STDCALL *tGetTunerFrequency) (void *TVGObject);
      typedef TTunerMode (STDCALL *tGetTunerMode) (void *TVGObject);
      typedef int (STDCALL *tGetTVChannel) (void *TVGObject);
      typedef int (STDCALL *tGetTVChannelInfo) (void *TVGObject, TTVChannelInfo Value);
      typedef int (STDCALL *tGetTVCountryCode) (void *TVGObject);
      typedef TTunerInputType (STDCALL *tGetTVTunerInputType) (void *TVGObject);
      typedef BOOL (STDCALL *tGetTVUseFrequencyOverrides) (void *TVGObject);
      typedef int (STDCALL *tGetUniqueID) (void *TVGObject);
      typedef BOOL (STDCALL *tGetUseClock) (void *TVGObject);
      typedef double (STDCALL *tGetv360_AspectRatio) (void *TVGObject);
      typedef BOOL (STDCALL *tGetv360_Enabled) (void *TVGObject);
      typedef Tv360_Angle (STDCALL *tGetv360_MasterAngle) (void *TVGObject);
      typedef TV360_MouseAction (STDCALL *tGetv360_MouseAction) (void *TVGObject);
      typedef int (STDCALL *tGetv360_MouseActionPercent) (void *TVGObject);
      typedef BOOL (STDCALL *tGetVCRHorizontalLocking) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetVersion) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetVideoCodec) (void *TVGObject);
      typedef int (STDCALL *tGetVideoCompression_DataRate) (void *TVGObject);
      typedef int (STDCALL *tGetVideoCompression_KeyFrameRate) (void *TVGObject);
      typedef int (STDCALL *tGetVideoCompression_PFramesPerKeyFrame) (void *TVGObject);
      typedef double (STDCALL *tGetVideoCompression_Quality) (void *TVGObject);
      typedef int (STDCALL *tGetVideoCompression_WindowSize) (void *TVGObject);
      typedef BOOL (STDCALL *tGetVideoCompressionSettings) (void *TVGObject, int*DataRate, int*KeyFrameRate, int*PFramesPerKeyFrame, int*WindowSize, double*Quality, BOOL*CanQuality, BOOL*CanCrunch, BOOL*CanKeyFrame, BOOL*CanBFrame, BOOL*CanWindow);
      typedef int (STDCALL *tGetVideoCompressor) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetVideoCompressorName) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetVideoCompressors) (void *TVGObject);
      typedef int (STDCALL *tGetVideoCompressorsCount) (void *TVGObject);
      typedef BOOL (STDCALL *tGetVideoControlMode) (void *TVGObject, TVideoControl Mode);
      typedef BOOL (STDCALL *tGetVideoControlSettings) (void *TVGObject);
      typedef TCursors (STDCALL *tGetVideoCursor) (void *TVGObject);
      typedef __int64 (STDCALL *tGetVideoDelay) (void *TVGObject);
      typedef int (STDCALL *tGetVideoDevice) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetVideoDeviceName) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetVideoDevices) (void *TVGObject);
      typedef int (STDCALL *tGetVideoDevicesCount) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetVideoDevicesId) (void *TVGObject);
      typedef BOOL (STDCALL *tGetVideoDoubleBuffered) (void *TVGObject);
      typedef int (STDCALL *tGetVideoFormat) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetVideoFormats) (void *TVGObject);
      typedef int (STDCALL *tGetVideoFormatsCount) (void *TVGObject);
      typedef TFileSort (STDCALL *tGetVideoFromImages_BitmapsSortedBy) (void *TVGObject);
      typedef BOOL (STDCALL *tGetVideoFromImages_RepeatIndefinitely) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetVideoFromImages_SourceDirectory) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetVideoFromImages_TemporaryFile) (void *TVGObject);
      typedef int (STDCALL *tGetVideoHeight) (void *TVGObject);
      typedef int (STDCALL *tGetVideoHeight_PreferredAspectRatio) (void *TVGObject);
      typedef int (STDCALL *tGetVideoHeightFromIndex) (void *TVGObject, int SizeIndex);
      typedef int (STDCALL *tGetVideoInput) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetVideoInputs) (void *TVGObject);
      typedef int (STDCALL *tGetVideoInputsCount) (void *TVGObject);
      typedef int (STDCALL *tGetVideoProcessingBrightness) (void *TVGObject);
      typedef int (STDCALL *tGetVideoProcessingContrast) (void *TVGObject);
      typedef TVideoDeinterlacing (STDCALL *tGetVideoProcessingDeinterlacing) (void *TVGObject);
      typedef BOOL (STDCALL *tGetVideoProcessingGrayScale) (void *TVGObject);
      typedef int (STDCALL *tGetVideoProcessingHue) (void *TVGObject);
      typedef BOOL (STDCALL *tGetVideoProcessingInvertColors) (void *TVGObject);
      typedef BOOL (STDCALL *tGetVideoProcessingLeftRight) (void *TVGObject);
      typedef int (STDCALL *tGetVideoProcessingPixellization) (void *TVGObject);
      typedef TVideoRotation (STDCALL *tGetVideoProcessingRotation) (void *TVGObject);
      typedef double (STDCALL *tGetVideoProcessingRotationCustomAngle) (void *TVGObject);
      typedef int (STDCALL *tGetVideoProcessingSaturation) (void *TVGObject);
      typedef BOOL (STDCALL *tGetVideoProcessingTopDown) (void *TVGObject);
      typedef BOOL (STDCALL *tGetVideoQualitySettings) (void *TVGObject);
      typedef TVideoRenderer (STDCALL *tGetVideoRenderer) (void *TVGObject);
      typedef TVideoRendererExternal (STDCALL *tGetVideoRendererExternal) (void *TVGObject);
      typedef int (STDCALL *tGetVideoRendererExternalIndex) (void *TVGObject);
      typedef TVideoRendererPriority (STDCALL *tGetVideoRendererPriority) (void *TVGObject);
      typedef int (STDCALL *tGetVideoSize) (void *TVGObject);
      typedef BOOL (STDCALL *tGetVideoSizeFromIndex) (void *TVGObject, int SizeIndex, int*_VideoWidth, int*_VideoHeight);
      typedef const wchar_t * (STDCALL *tGetVideoSizes) (void *TVGObject);
      typedef int (STDCALL *tGetVideoSizesCount) (void *TVGObject);
      typedef TVideoSource (STDCALL *tGetVideoSource) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetVideoSource_FileOrURL) (void *TVGObject);
      typedef __int64 (STDCALL *tGetVideoSource_FileOrURL_StartTime) (void *TVGObject);
      typedef __int64 (STDCALL *tGetVideoSource_FileOrURL_StopTime) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetVideoSources) (void *TVGObject);
      typedef int (STDCALL *tGetVideoSourcesCount) (void *TVGObject);
      typedef int (STDCALL *tGetVideoStreamNumber) (void *TVGObject);
      typedef int (STDCALL *tGetVideoSubtype) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tGetVideoSubtypes) (void *TVGObject);
      typedef int (STDCALL *tGetVideoSubtypesCount) (void *TVGObject);
      typedef BOOL (STDCALL *tGetVideoVisibleWhenStopped) (void *TVGObject);
      typedef int (STDCALL *tGetVideoWidth) (void *TVGObject);
      typedef int (STDCALL *tGetVideoWidth_PreferredAspectRatio) (void *TVGObject);
      typedef int (STDCALL *tGetVideoWidthFromIndex) (void *TVGObject, int SizeIndex);
      typedef int (STDCALL *tGetVirtualAudioStreamControl) (void *TVGObject);
      typedef int (STDCALL *tGetVirtualVideoStreamControl) (void *TVGObject);
      typedef BOOL (STDCALL *tGetVMR9ImageAdjustmentBounds) (void *TVGObject, BOOL MainDisplay, TVMR9ImageAdjustment VMR9ControlSetting, int*MinValue, int*MaxValue, int*StepSize, int*DefaultValue, int*CurrentValue);
      typedef TVuMeter (STDCALL *tGetVuMeter) (void *TVGObject);
      typedef TVuMeter (STDCALL *tGetVuMeter_Enabled) (void *TVGObject, int Index);
      typedef unsigned int (STDCALL *tGetVUMeterSetting) (void *TVGObject, unsigned int ChannelIndex, TVUMeterSetting VUMeterSetting);
      typedef TWebcamStillCaptureButton (STDCALL *tGetWebcamStillCaptureButton) (void *TVGObject);
      typedef int (STDCALL *tGetZoomCoeff) (void *TVGObject);
      typedef int (STDCALL *tGetZoomXCenter) (void *TVGObject);
      typedef int (STDCALL *tGetZoomYCenter) (void *TVGObject);
      typedef TGraphState (STDCALL *tGraphState) (void *TVGObject);
      typedef void (STDCALL *tInitSyncMgr) (void *TVGObject, BOOL FromDeb, BOOL Is_DM);
      typedef BOOL (STDCALL *tIsAudioDeviceASoundCard) (void *TVGObject, int DeviceIndex);
      typedef BOOL (STDCALL *tIsAudioDeviceConnected) (void *TVGObject, int DeviceIndex);
      typedef BOOL (STDCALL *tIsAudioRendererConnected) (void *TVGObject, int RendererIndex);
      typedef BOOL (STDCALL *tIsCameraControlSettingAvailable) (void *TVGObject, TCameraControl Setting);
      typedef BOOL (STDCALL *tIsDialogAvailable) (void *TVGObject, TDialog Dialog);
      typedef BOOL (STDCALL *tIsDirectX8OrHigherInstalled) (void *TVGObject);
      typedef BOOL (STDCALL *tIsDVDevice) (void *TVGObject, int Index);
      typedef BOOL (STDCALL *tIsPlaylistActive) (void *TVGObject);
      typedef BOOL (STDCALL *tIsPreviewStarted) (void *TVGObject);
      typedef BOOL (STDCALL *tIsServerResponding) (void *TVGObject, const wchar_t *URL, int Timeout_Seconds);
      typedef BOOL (STDCALL *tIsURLResponding) (void *TVGObject);
      typedef TTriState (STDCALL *tIsURLVideoStreamAvailable) (void *TVGObject, int TimeOut_Ms);
      typedef BOOL (STDCALL *tIsVideoControlModeAvailable) (void *TVGObject, TVideoControl Mode);
      typedef BOOL (STDCALL *tIsVideoDeviceConnected) (void *TVGObject, int DeviceIndex);
      typedef BOOL (STDCALL *tIsVideoQualitySettingAvailable) (void *TVGObject, TVideoQuality Setting);
      typedef BOOL (STDCALL *tIsVideoSignalDetected) (void *TVGObject, BOOL DetectConnexantBlueScreen, BOOL DetectCustomRGB, int CustomR, int CustomG, int CustomB, BOOL UseAsMaxValues);
      typedef BOOL (STDCALL *tIsVMR9ImageAdjustmentAvailable) (void *TVGObject, BOOL MainDisplay);
      typedef BOOL (STDCALL *tLoadCompressorSettingsFromDataString) (void *TVGObject, BOOL IsVideoCompressor, int CompressorIndex, const wchar_t *DataString);
      typedef BOOL (STDCALL *tLoadCompressorSettingsFromTextFile) (void *TVGObject, BOOL IsVideoCompressor, int CompressorIndex, const wchar_t *FileName);
      typedef BOOL (STDCALL *tMixAudioSamples) (void *TVGObject, void *pSampleBuffer, int SampleBufferSize, int SampleDataLength, TFormatType SampleFormatType, void *pFormat, __int64 SampleStartTime, __int64 SampleStopTime);
      typedef BOOL (STDCALL *tMixer_Activation) (void *TVGObject, int Id, BOOL Activate);
      typedef int (STDCALL *tMixer_AddAudioToMixer) (void *TVGObject, int SourceUniqueID);
      typedef int (STDCALL *tMixer_AddToMixer) (void *TVGObject, int SourceUniqueID, int SourceVideoInput, int MosaicLine, int MosaicColumn, int AlternatedGroup, int AlternatedTimeIntervalInMs, BOOL ReplacePreviouslyAdded, BOOL CanEraseBackground);
      typedef BOOL (STDCALL *tMixer_AudioActivation) (void *TVGObject, int Id, BOOL Activate);
      typedef BOOL (STDCALL *tMixer_RemoveAudioFromMixer) (void *TVGObject, int Id);
      typedef BOOL (STDCALL *tMixer_RemoveFromMixer) (void *TVGObject, int Id);
      typedef BOOL (STDCALL *tMixer_SetOverlayAttributes) (void *TVGObject, int Id, BOOL Transparent_Enabled, BOOL UseTransparentColor, int Transparent_ColorValue, BOOL AlphaBlend_Enabled, int AlphaBlend_Value, BOOL ChromaKey_Enabled, int ChromaKeyRGBColor, int ChromaKeyLeewayPercent, double RotationAngle);
      typedef int (STDCALL *tMixer_SetupPIPFromSource) (void *TVGObject, int SourceUniqueID, int Source_Left, int Source_Top, int Source_Width, int Source_Height, BOOL ActivatePIP, int PIP_Left, int PIP_Top, int PIP_Width, int PIP_Height, BOOL MoveToTop);
      typedef int (STDCALL *tMonitor_Primary_Index) (void *TVGObject);
      typedef BOOL (STDCALL *tMonitorBounds) (void *TVGObject, int MonitorNumber, int*LeftBound, int*TopBound, int*RightBound, int*BottomBound);
      typedef int (STDCALL *tMonitorsCount) (void *TVGObject);
      typedef int (STDCALL *tMotionDetector_CellColorIntensity) (void *TVGObject, TRGBSelector RGBSelector, int x, int y);
      typedef double (STDCALL *tMotionDetector_CellMotionRatio) (void *TVGObject, int x, int y);
      typedef const wchar_t * (STDCALL *tMotionDetector_Get2DTextGrid) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tMotionDetector_Get2DTextMotion) (void *TVGObject);
      typedef BOOL (STDCALL *tMotionDetector_GetCellLocation) (void *TVGObject, int x, int y, int*XLocation, int*YLocation);
      typedef BOOL (STDCALL *tMotionDetector_GetCellSensitivity) (void *TVGObject, int x, int y, int*Value);
      typedef BOOL (STDCALL *tMotionDetector_GetCellSize) (void *TVGObject, int*XSize, int*YSize);
      typedef int (STDCALL *tMotionDetector_GlobalColorIntensity) (void *TVGObject, TRGBSelector RGBSelector);
      typedef void (STDCALL *tMotionDetector_GloballyIncOrDecSensitivity) (void *TVGObject, int Value);
      typedef void (STDCALL *tMotionDetector_Reset) (void *TVGObject);
      typedef void (STDCALL *tMotionDetector_ResetGlobalSensitivity) (void *TVGObject, int Value);
      typedef BOOL (STDCALL *tMotionDetector_SetCellSensitivity) (void *TVGObject, int x, int y, int Value);
      typedef void (STDCALL *tMotionDetector_SetGridSize) (void *TVGObject, int x, int y);
      typedef void (STDCALL *tMotionDetector_ShowGridDialog) (void *TVGObject);
      typedef void (STDCALL *tMotionDetector_TriggerNow) (void *TVGObject);
      typedef BOOL (STDCALL *tMotionDetector_UseThisReferenceSample) (void *TVGObject, HBITMAP Bitmap_, const wchar_t *BMPFile, const wchar_t *JPEGFile);
      typedef int (STDCALL *tMPEGProgramSetting) (void *TVGObject, TMPEGProgramSetting MPEGProgramSettingValue, int Value);
      typedef int (STDCALL *tMultiplexerIndex) (void *TVGObject, const wchar_t *Value);
      typedef const wchar_t * (STDCALL *tMultipurposeEncoder_Convert100nsToHhMmSsZzz) (void *TVGObject, __int64 Time100ns);
      typedef BOOL (STDCALL *tMultipurposeEncoder_GetCurrentInfo) (void *TVGObject, TMultipurposeEncoderInstance MultipurposeEncoderType, unsigned int*InputsTotalDurationMs, unsigned int*FrameCount, double*fps, double*quality, double*SizeWrittenKb, unsigned int*TimeMs, double*BitRateKbps, unsigned int*DuplicatedCount, unsigned int*DroppedCount, int*ExitCode);
      typedef const wchar_t * (STDCALL *tMultipurposeEncoder_GetLastLog) (void *TVGObject, TMultipurposeEncoderInstance MultipurposeEncoderType);
      typedef BOOL (STDCALL *tMultipurposeEncoder_QuickConfigure_UDPStreaming_H264) (void *TVGObject, BOOL LogTofile, BOOL VideoEnabled, BOOL AudioEnabled, const wchar_t *DestinationIP, int DestinationPort, int VideoBitRateKb, int AudioBitRateKb);
      typedef BOOL (STDCALL *tMultipurposeEncoder_ReindexClip) (void *TVGObject, const wchar_t *CurrentFileName, const wchar_t *NewFileName);
      typedef void (STDCALL *tNotifyPlayerTrackbarAction) (void *TVGObject, TTrackbarAction TrackbarAction);
      typedef BOOL (STDCALL *tONVIF_GetBool) (void *TVGObject, const wchar_t *ParamIdentifier, BOOL*Value);
      typedef BOOL (STDCALL *tONVIF_GetDouble) (void *TVGObject, const wchar_t *ParamIdentifier, double*Value);
      typedef BOOL (STDCALL *tONVIF_GetInt) (void *TVGObject, const wchar_t *ParamIdentifier, int*Value);
      typedef BOOL (STDCALL *tONVIF_GetStr) (void *TVGObject, const wchar_t *ParamIdentifier, const wchar_t **Value);
      typedef BOOL (STDCALL *tONVIF_SetBool) (void *TVGObject, const wchar_t *ParamIdentifier, BOOL Value);
      typedef BOOL (STDCALL *tONVIF_SetDouble) (void *TVGObject, const wchar_t *ParamIdentifier, double Value);
      typedef BOOL (STDCALL *tONVIF_SetInt) (void *TVGObject, const wchar_t *ParamIdentifier, const wchar_t *Value);
      typedef BOOL (STDCALL *tONVIF_SetStr) (void *TVGObject, const wchar_t *ParamIdentifier, const wchar_t *Value);
      typedef const wchar_t * (STDCALL *tONVIFDeviceInfo) (void *TVGObject, TONVIFDeviceInfo ONVIFDeviceInfoType);
      typedef BOOL (STDCALL *tONVIFPTZGetLimits) (void *TVGObject, double*Pan_Min, double*Pan_Max, double*Tilt_Min, double*Tilt_Max, double*Zoom_Min, double*Zoom_Max);
      typedef BOOL (STDCALL *tONVIFPTZGetPosition) (void *TVGObject, double*Pan, double*Tilt, double*Zoom, __int64*UTCTime, int*IsMoving);
      typedef BOOL (STDCALL *tONVIFPTZPreset) (void *TVGObject, const wchar_t *PresetAction, const wchar_t *PresetName);
      typedef BOOL (STDCALL *tONVIFPTZSendAuxiliaryCommand) (void *TVGObject, const wchar_t *AuxiliaryCommand);
      typedef BOOL (STDCALL *tONVIFPTZSetPosition) (void *TVGObject, double Pan, double Tilt, double Zoom, double SpeedRatio, BOOL IsRelative);
      typedef BOOL (STDCALL *tONVIFPTZStartMove) (void *TVGObject, const wchar_t *PTZType, BOOL OppositeDirection, double SpeedRatio, int DurationMs);
      typedef BOOL (STDCALL *tONVIFPTZStopMove) (void *TVGObject, const wchar_t *PTZType);
      typedef BOOL (STDCALL *tONVIFSnapShot) (void *TVGObject, BOOL OnRawVideoSampleCallbackEnabled, BOOL SaveToFile, const wchar_t *FileName);
      typedef BOOL (STDCALL *tOpenDVD) (void *TVGObject);
      typedef BOOL (STDCALL *tOpenPlayer) (void *TVGObject);
      typedef BOOL (STDCALL *tOpenPlayerAtFramePositions) (void *TVGObject, __int64 StartFrame, __int64 StopFrame, BOOL KeepBounds, BOOL CloseAndReopenIfAlreadyOpened);
      typedef BOOL (STDCALL *tOpenPlayerAtTimePositions) (void *TVGObject, __int64 StartTime, __int64 StopTime, BOOL KeepBounds, BOOL CloseAndReopenIfAlreadyOpened);
      typedef void (STDCALL *tPausePlayer) (void *TVGObject);
      typedef BOOL (STDCALL *tPausePreview) (void *TVGObject);
      typedef BOOL (STDCALL *tPauseRecording) (void *TVGObject);
      typedef BOOL (STDCALL *tPlayerFrameStep) (void *TVGObject, int FrameCount);
      typedef BOOL (STDCALL *tPlaylist) (void *TVGObject, TPlaylist PlaylistAction, const wchar_t *VideoClip);
      typedef int (STDCALL *tPointGreyConfig) (void *TVGObject, TPointGreyConfig ConfigType, unsigned int*PGRActionValue, unsigned int ulRegister, unsigned int ulMode, unsigned int ulLeft, unsigned int ulTop, unsigned int ulWidth, unsigned int ulHeight, unsigned int ulPercentage, unsigned int ulFormat);
      typedef BOOL (STDCALL *tPutMiscDeviceControl) (void *TVGObject, TMiscDeviceControl MiscDeviceControl, int Index, int Value);
      typedef unsigned int (STDCALL *tRecordingKBytesWrittenToDisk) (void *TVGObject);
      typedef BOOL (STDCALL *tRecordToNewFileNow) (void *TVGObject, const wchar_t *NewRecordingFileName, BOOL ResetStreamTime);
      typedef BOOL (STDCALL *tReencodeVideoClip) (void *TVGObject, const wchar_t *SourceVideoClip, const wchar_t *NewVideoClip, BOOL IncludeVideoStream, BOOL IncludeAudioStream, BOOL UseFrameGrabber, BOOL UseCurrentVideoCompressor, BOOL UseCurrentAudioCompressor);
      typedef void (STDCALL *tRefreshDevicesAndCompressorsLists) (void *TVGObject);
      typedef void (STDCALL *tRefreshPlayerOverlays) (void *TVGObject);
      typedef BOOL (STDCALL *tResetPreview) (void *TVGObject);
      typedef BOOL (STDCALL *tResetVideoDeviceSettings) (void *TVGObject);
      typedef BOOL (STDCALL *tResumePreview) (void *TVGObject);
      typedef BOOL (STDCALL *tResumeRecording) (void *TVGObject);
      typedef void (STDCALL *tRetrieveInitialXYAfterRotation) (void *TVGObject, int X, int Y, int*OriginalX, int*OriginalY);
      typedef void (STDCALL *tRewindPlayer) (void *TVGObject);
      typedef void (STDCALL *tRunPlayer) (void *TVGObject);
      typedef void (STDCALL *tRunPlayerBackwards) (void *TVGObject);
      typedef const wchar_t * (STDCALL *tSaveCompressorSettingsToDataString) (void *TVGObject, BOOL IsVideoCompressor, int CompressorIndex);
      typedef BOOL (STDCALL *tSaveCompressorSettingsToTextFile) (void *TVGObject, BOOL IsVideoCompressor, int CompressorIndex, const wchar_t *FileName);
      typedef BOOL (STDCALL *tScheduleNextActionAtAbsoluteDateTime) (void *TVGObject, int Year, int Month, int Day, int Hour, int Min, int Sec, int MSec);
      typedef BOOL (STDCALL *tScheduleNextActionAtAbsoluteTime) (void *TVGObject, int Hour, int Min, int Sec, int MSec);
      typedef BOOL (STDCALL *tScheduleNextActionFromNow) (void *TVGObject, int Day, int Hour, int Min, int Sec, int MSec);
      typedef BOOL (STDCALL *tScreenRecordingUsingCoordinates) (void *TVGObject, BOOL FunctionEnabled, int scLeft, int scTop, int scWidth, int scHeight);
      typedef BOOL (STDCALL *tSendCameraCommand) (void *TVGObject, int Pan, int Tilt, BOOL Relative);
      typedef BOOL (STDCALL *tSendDVCommand) (void *TVGObject, TDVCommand DVCommand);
      typedef BOOL (STDCALL *tSendImageToVideoFromBitmaps) (void *TVGObject, const wchar_t *ImageFilePath, HBITMAP BitmapHandle, BOOL CanFreeBitmapHandle, BOOL EndOfData);
      typedef BOOL (STDCALL *tSendImageToVideoFromBitmaps2) (void *TVGObject, void *pBtmapInfo, byte *pBitmapBits, BOOL EndOfData);
      typedef BOOL (STDCALL *tSendIPCameraCommand) (void *TVGObject, const wchar_t *IPCameraCommand);
      typedef void (STDCALL *tSet_OnDeviceArrivalOrRemoval) (void *TVGObject, void*Value);
      typedef void (STDCALL *tSetAdjustOverlayAspectRatio) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetAdjustPixelAspectRatio) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetAero) (void *TVGObject, TAero Value);
      typedef void (STDCALL *tSetAnalogVideoStandard) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetApplicationPriority) (void *TVGObject, TApplicationPriority Value);
      typedef void (STDCALL *tSetASFAudioBitRate) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetASFAudioChannels) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetASFBufferWindow) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetASFDeinterlaceMode) (void *TVGObject, TASFDeinterlaceMode Value);
      typedef void (STDCALL *tSetASFDirectStreamingKeepClientsConnected) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetASFFixedFrameRate) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetASFMediaServerPublishingPoint) (void *TVGObject, const wchar_t *Value);
      typedef void (STDCALL *tSetASFMediaServerRemovePublishingPointAfterDisconnect) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetASFMediaServerTemplatePublishingPoint) (void *TVGObject, const wchar_t *Value);
      typedef void (STDCALL *tSetASFNetworkMaxUsers) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetASFNetworkPort) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetASFProfile) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetASFProfileFromCustomFile) (void *TVGObject, const wchar_t *Value);
      typedef void (STDCALL *tSetASFProfileVersion) (void *TVGObject, TASFProfileVersion Value);
      typedef void (STDCALL *tSetASFVideoBitRate) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetASFVideoFrameRate) (void *TVGObject, double Value);
      typedef void (STDCALL *tSetASFVideoHeight) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetASFVideoMaxKeyFrameSpacing) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetASFVideoQuality) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetASFVideoWidth) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetAspectRatioToUse) (void *TVGObject, double Value);
      typedef void (STDCALL *tSetAssociateAudioAndVideoDevices) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetAudioBalance) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetAudioChannelRenderMode) (void *TVGObject, TAudioChannelRenderMode Value);
      typedef void (STDCALL *tSetAudioCompressor) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetAudioDevice) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetAudioDeviceRendering) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetAudioFormat) (void *TVGObject, TAudioFormat Value);
      typedef void (STDCALL *tSetAudioInput) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetAudioInputBalance) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetAudioInputLevel) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetAudioInputMono) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetAudioPeakEvent) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetAudioRecording) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetAudioRenderer) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetAudioRendererAdditional) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetAudioSource) (void *TVGObject, TAudioSource Value);
      typedef void (STDCALL *tSetAudioStreamNumber) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetAudioSyncAdjustment) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetAudioSyncAdjustmentEnabled) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetAudioVolume) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetAuthentication) (void *TVGObject, TAuthenticationType AuthenticationType, const wchar_t *UserName, const wchar_t *Password);
      typedef void (STDCALL *tSetAutoConnectRelatedPins) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetAutoFileName) (void *TVGObject, TAutoFileName Value);
      typedef void (STDCALL *tSetAutoFileNameDateTimeFormat) (void *TVGObject, const wchar_t *Value);
      typedef void (STDCALL *tSetAutoFileNameMinDigits) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetAutoFilePrefix) (void *TVGObject, const wchar_t *Value);
      typedef void (STDCALL *tSetAutoFileSuffix) (void *TVGObject, const wchar_t *Value);
      typedef void (STDCALL *tSetAutoRefreshPreview) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetAutoStartPlayer) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetAVIDurationUpdated) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetAVIFormatOpenDML) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetAVIFormatOpenDMLCompatibilityIndex) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetAVIMuxConfig) (void *TVGObject, TAVIMuxConfig AVIMuxSetting, int Value);
      typedef void (STDCALL *tSetBackgroundColor) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetBufferCount) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetBurstCount) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetBurstInterval) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetBurstMode) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetBurstType) (void *TVGObject, TFrameCaptureDest Value);
      typedef void (STDCALL *tSetBusyCursor) (void *TVGObject, TCursors Value);
      typedef void (STDCALL *tSetCallbackSender) (void *TVGObject, void *Sender);
      typedef BOOL (STDCALL *tSetCameraControl) (void *TVGObject, TCameraControl Setting, BOOL SetAuto, BOOL SetDefault, int SetValue);
      typedef void (STDCALL *tSetCameraControlSettings) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetCameraExposure) (void *TVGObject, double Value);
      typedef void (STDCALL *tSetCaptureFileExt) (void *TVGObject, const wchar_t *Value);
      typedef void (STDCALL *tSetColorKey) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetColorKeyEnabled) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetCompressionMode) (void *TVGObject, TCompressionMode Value);
      typedef void (STDCALL *tSetCompressionType) (void *TVGObject, TCompressionType Value);
      typedef void (STDCALL *tSetCropping_Enabled) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetCropping_Height) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetCropping_Outbounds) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetCropping_Width) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetCropping_X) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetCropping_Y) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetCropping_Zoom) (void *TVGObject, double Value);
      typedef void (STDCALL *tSetDisplayActive) (void *TVGObject, int DisplayIndex, BOOL Value);
      typedef void (STDCALL *tSetDisplayAlphaBlendEnabled) (void *TVGObject, int DisplayIndex, BOOL Value);
      typedef void (STDCALL *tSetDisplayAlphaBlendValue) (void *TVGObject, int DisplayIndex, int Value);
      typedef void (STDCALL *tSetDisplayAspectRatio) (void *TVGObject, int DisplayIndex, TAspectRatio Value);
      typedef BOOL (STDCALL *tSetDisplayAssociatedRenderer) (void *TVGObject, int DisplayIndex, const wchar_t *Value);
      typedef void (STDCALL *tSetDisplayAutoSize) (void *TVGObject, int DisplayIndex, BOOL Value);
      typedef void (STDCALL *tSetDisplayEmbedded) (void *TVGObject, int DisplayIndex, BOOL Value);
      typedef void (STDCALL *tSetDisplayEmbedded_FitParent) (void *TVGObject, int DisplayIndex, BOOL Value);
      typedef void (STDCALL *tSetDisplayFullScreen) (void *TVGObject, int DisplayIndex, BOOL Value);
      typedef void (STDCALL *tSetDisplayHeight) (void *TVGObject, int DisplayIndex, int Value);
      typedef void (STDCALL *tSetDisplayLeft) (void *TVGObject, int DisplayIndex, int Value);
      typedef BOOL (STDCALL *tSetDisplayLocation) (void *TVGObject, int DisplayIndex, int WindowLeft, int WindowTop, int WindowWidth, int WindowHeight);
      typedef void (STDCALL *tSetDisplayMonitor) (void *TVGObject, int DisplayIndex, int Value);
      typedef void (STDCALL *tSetDisplayMouseMovesWindow) (void *TVGObject, int DisplayIndex, BOOL Value);
      typedef void (STDCALL *tSetDisplayPanScanRatio) (void *TVGObject, int DisplayIndex, int Value);
      typedef BOOL (STDCALL *tSetDisplayParent) (void *TVGObject, int DisplayIndex, int DisplayParent);
      typedef void (STDCALL *tSetDisplayStayOnTop) (void *TVGObject, int DisplayIndex, BOOL Value);
      typedef void (STDCALL *tSetDisplayTop) (void *TVGObject, int DisplayIndex, int Value);
      typedef void (STDCALL *tSetDisplayTransparentColorEnabled) (void *TVGObject, int DisplayIndex, BOOL Value);
      typedef void (STDCALL *tSetDisplayTransparentColorValue) (void *TVGObject, int DisplayIndex, int Value);
      typedef void (STDCALL *tSetDisplayVideoPortEnabled) (void *TVGObject, int DisplayIndex, BOOL Value);
      typedef void (STDCALL *tSetDisplayVisible) (void *TVGObject, int DisplayIndex, BOOL Value);
      typedef void (STDCALL *tSetDisplayWidth) (void *TVGObject, int DisplayIndex, int Value);
      typedef void (STDCALL *tSetDroppedFramesPollingInterval) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetDVDateTimeEnabled) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetDVDiscontinuityMinimumInterval) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetDVDTitle) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetDVEncoder_VideoFormat) (void *TVGObject, TDVVideoFormat Value);
      typedef void (STDCALL *tSetDVEncoder_VideoResolution) (void *TVGObject, TDVSize Value);
      typedef void (STDCALL *tSetDVEncoder_VideoStandard) (void *TVGObject, TDVVideoStandard Value);
      typedef void (STDCALL *tSetDVRecordingInNativeFormatSeparatesStreams) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetDVReduceFrameRate) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetDVRgb219) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetDVTimeCodeEnabled) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetEventNotificationSynchrone) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetExtraDLLPath) (void *TVGObject, const wchar_t *Value);
      typedef void (STDCALL *tSetFixFlickerOrBlackCapture) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetFrameCaptureBounds) (void *TVGObject, int LeftPosition, int TopPosition, int RightPosition, int BottomPosition);
      typedef void (STDCALL *tSetFrameCaptureHeight) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetFrameCaptureWidth) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetFrameCaptureWithoutOverlay) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetFrameCaptureZoomSize) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetFrameGrabber) (void *TVGObject, TFrameGrabber Value);
      typedef void (STDCALL *tSetFrameGrabberRGBFormat) (void *TVGObject, TFrameGrabberRGBFormat Value);
      typedef void (STDCALL *tSetFrameNumberStartsFromZero) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetFrameRate) (void *TVGObject, double Value);
      typedef void (STDCALL *tSetFrameRateDivider) (void *TVGObject, int Value);
      typedef BOOL (STDCALL *tSetFWCam1394) (void *TVGObject, const wchar_t *FWCam1394ID, int Value);
      typedef void (STDCALL *tSetGetLastFrameWaitTimeoutMs) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetHeaderAttribute) (void *TVGObject, THeaderAttribute HeaderAttribute, const wchar_t *Value);
      typedef void (STDCALL *tSetHoldRecording) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetImageOverlay_AlphaBlend) (void *TVGObject, int Index, BOOL Value);
      typedef void (STDCALL *tSetImageOverlay_AlphaBlendValue) (void *TVGObject, int Index, int Value);
      typedef void (STDCALL *tSetImageOverlay_Attributes) (void *TVGObject, int LeftLocation, int TopLocation, int StretchedWidth, int StretchedHeight, BOOL Transparent_Enabled, BOOL UseTransparentColor, int Transparent_ColorValue, BOOL AlphaBlend_Enabled, int AlphaBlend_Value);
      typedef void (STDCALL *tSetImageOverlay_Attributes2) (void *TVGObject, int Index, int LeftLocation, int TopLocation, int StretchedWidth, int StretchedHeight, BOOL Transparent_Enabled, BOOL UseTransparentColor, int Transparent_ColorValue, BOOL AlphaBlend_Enabled, int AlphaBlend_Value);
      typedef void (STDCALL *tSetImageOverlay_ChromaKey) (void *TVGObject, int Index, BOOL Value);
      typedef void (STDCALL *tSetImageOverlay_ChromaKeyLeewayPercent) (void *TVGObject, int Index, int Value);
      typedef void (STDCALL *tSetImageOverlay_ChromaKeyRGBColor) (void *TVGObject, int Index, int Value);
      typedef void (STDCALL *tSetImageOverlay_Enabled) (void *TVGObject, int Index, BOOL Value);
      typedef void (STDCALL *tSetImageOverlay_Height) (void *TVGObject, int Index, int Value);
      typedef void (STDCALL *tSetImageOverlay_LeftLocation) (void *TVGObject, int Index, int Value);
      typedef void (STDCALL *tSetImageOverlay_RotationAngle) (void *TVGObject, int Index, double Value);
      typedef void (STDCALL *tSetImageOverlay_StretchToVideoSize) (void *TVGObject, int Index, BOOL Value);
      typedef void (STDCALL *tSetImageOverlay_TargetDisplay) (void *TVGObject, int Index, int Value);
      typedef void (STDCALL *tSetImageOverlay_TopLocation) (void *TVGObject, int Index, int Value);
      typedef void (STDCALL *tSetImageOverlay_Transparent) (void *TVGObject, int Index, BOOL Value);
      typedef void (STDCALL *tSetImageOverlay_TransparentColorValue) (void *TVGObject, int Index, int Value);
      typedef void (STDCALL *tSetImageOverlay_UseTransparentColor) (void *TVGObject, int Index, BOOL Value);
      typedef void (STDCALL *tSetImageOverlay_VideoAlignment) (void *TVGObject, int Index, TVideoAlignment Value);
      typedef void (STDCALL *tSetImageOverlay_Width) (void *TVGObject, int Index, int Value);
      typedef void (STDCALL *tSetImageOverlayAlphaBlend) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetImageOverlayAlphaBlendValue) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetImageOverlayChromaKey) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetImageOverlayChromaKeyLeewayPercent) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetImageOverlayChromaKeyRGBColor) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetImageOverlayEnabled) (void *TVGObject, BOOL Value);
      typedef BOOL (STDCALL *tSetImageOverlayFromBMPFile) (void *TVGObject, const wchar_t *FileName);
      typedef BOOL (STDCALL *tSetImageOverlayFromBMPFile2) (void *TVGObject, int Index, const wchar_t *FileName);
      typedef BOOL (STDCALL *tSetImageOverlayFromHBitmap) (void *TVGObject, HBITMAP Bitmap);
      typedef BOOL (STDCALL *tSetImageOverlayFromHBitmap2) (void *TVGObject, int Index, HBITMAP Bitmap);
      typedef BOOL (STDCALL *tSetImageOverlayFromHBitmap3) (void *TVGObject, int Index, HBITMAP Bitmap, BOOL ReleaseBitmap);
      typedef BOOL (STDCALL *tSetImageOverlayFromImageFile) (void *TVGObject, const wchar_t *FileName);
      typedef BOOL (STDCALL *tSetImageOverlayFromImageFile2) (void *TVGObject, int Index, const wchar_t *FileName);
      typedef BOOL (STDCALL *tSetImageOverlayFromJPEGFile) (void *TVGObject, const wchar_t *FileName);
      typedef BOOL (STDCALL *tSetImageOverlayFromJPEGFile2) (void *TVGObject, int Index, const wchar_t *FileName);
      typedef void (STDCALL *tSetImageOverlayHeight) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetImageOverlayLeftLocation) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetImageOverlayRotationAngle) (void *TVGObject, double Value);
      typedef void (STDCALL *tSetImageOverlaySelector) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetImageOverlayStretchToVideoSize) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetImageOverlayTargetDisplay) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetImageOverlayTopLocation) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetImageOverlayTransparent) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetImageOverlayTransparentColorValue) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetImageOverlayUseTransparentColor) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetImageOverlayVideoAlignment) (void *TVGObject, TVideoAlignment Value);
      typedef void (STDCALL *tSetImageOverlayWidth) (void *TVGObject, int Value);
      typedef BOOL (STDCALL *tSetIPCameraSetting) (void *TVGObject, TIPCameraSetting Setting, int Value);
      typedef void (STDCALL *tSetIPCameraURL) (void *TVGObject, const wchar_t *Value);
      typedef void (STDCALL *tSetJPEGPerformance) (void *TVGObject, TJPEGPerformance Value);
      typedef void (STDCALL *tSetJPEGProgressiveDisplay) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetJPEGQuality) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetLicenseString) (void *TVGObject, const wchar_t *PassedValue);
      typedef void (STDCALL *tSetLocation) (void *TVGObject, int lLeft, int lTop, int lWidth, int lHeight);
      typedef void (STDCALL *tSetLogoDisplayed) (void *TVGObject, BOOL Value);
      typedef BOOL (STDCALL *tSetLogoFromBMPFile) (void *TVGObject, const wchar_t *FileName);
      typedef BOOL (STDCALL *tSetLogoFromHBitmap) (void *TVGObject, HBITMAP Bitmap);
      typedef BOOL (STDCALL *tSetLogoFromJPEGFile) (void *TVGObject, const wchar_t *FileName);
      typedef void (STDCALL *tSetLogoLayout) (void *TVGObject, TLogoLayout Value);
      typedef void (STDCALL *tSetMixAudioSamplesLevel) (void *TVGObject, int Index, int Value);
      typedef void (STDCALL *tSetMixer_MosaicColumns) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetMixer_MosaicLines) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetMotionDetector_CompareBlue) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetMotionDetector_CompareGreen) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetMotionDetector_CompareRed) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetMotionDetector_Enabled) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetMotionDetector_GreyScale) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetMotionDetector_Grid) (void *TVGObject, const wchar_t *Value);
      typedef void (STDCALL *tSetMotionDetector_MaxDetectionsPerSecond) (void *TVGObject, double Value);
      typedef void (STDCALL *tSetMotionDetector_MotionResetMs) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetMotionDetector_ReduceCPULoad) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetMotionDetector_ReduceVideoNoise) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetMotionDetector_Triggered) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetMouseWheelControlsZoomAtCursor) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetMouseWheelEventEnabled) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetMpegStreamType) (void *TVGObject, TMpegStreamType Value);
      typedef void (STDCALL *tSetMultiplexedInputEmulation) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetMultiplexedRole) (void *TVGObject, TMultiplexedRole Value);
      typedef void (STDCALL *tSetMultiplexedStabilizationDelay) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetMultiplexedSwitchDelay) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetMultiplexer) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetMultiplexerFilterByName) (void *TVGObject, const wchar_t *Value);
      typedef BOOL (STDCALL *tSetMultipurposeEncoderSettings) (void *TVGObject, TMultipurposeEncoderInstance MultipurposeEncoderType, const wchar_t *Settings);
      typedef void (STDCALL *tSetMuteAudioRendering) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetName) (void *TVGObject, const wchar_t *Value);
      typedef void (STDCALL *tSetNDIBandwidthType) (void *TVGObject, TNDIBandwidthType Value);
      typedef void (STDCALL *tSetNDIGroups) (void *TVGObject, const wchar_t *Value);
      typedef void (STDCALL *tSetNDIName) (void *TVGObject, const wchar_t *Value);
      typedef void (STDCALL *tSetNDIReceiveTimeoutMs) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetNetworkStreaming) (void *TVGObject, TNetworkStreaming Value);
      typedef void (STDCALL *tSetNetworkStreamingType) (void *TVGObject, TNetworkStreamingType Value);
      typedef void (STDCALL *tSetNormalCursor) (void *TVGObject, TCursors Value);
      typedef void (STDCALL *tSetNotificationMethod) (void *TVGObject, TNotificationMethod Value);
      typedef void (STDCALL *tSetNotificationPriority) (void *TVGObject, TThreadPriority Value);
      typedef void (STDCALL *tSetNotificationSleepTime) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetOnAudioBufferNegotiation) (void *TVGObject, TOnAudioBufferNegotiationCb Event);
      typedef void (STDCALL *tSetOnAudioDeviceSelected) (void *TVGObject, TOnAudioDeviceSelectedCb Event);
      typedef void (STDCALL *tSetOnAudioPeak) (void *TVGObject, TOnAudioPeakCb Event);
      typedef void (STDCALL *tSetOnAuthenticationNeeded) (void *TVGObject, TOnAuthenticationNeededCb Event);
      typedef void (STDCALL *tSetOnAVIDurationUpdated) (void *TVGObject, TOnAVIDurationUpdatedCb Event);
      typedef void (STDCALL *tSetOnBacktimedFramesCountReached) (void *TVGObject, TOnBacktimedFramesCountReachedCb Event);
      typedef void (STDCALL *tSetOnBitmapsLoadingProgress) (void *TVGObject, TOnBitmapsLoadingProgressCb Event);
      typedef void (STDCALL *tSetOnClick) (void *TVGObject, TOnClickCb Event);
      typedef void (STDCALL *tSetOnClientConnection) (void *TVGObject, TOnClientConnectionCb Event);
      typedef void (STDCALL *tSetOnColorKeyChange) (void *TVGObject, TOnColorKeyChangeCb Event);
      typedef void (STDCALL *tSetOnCopyPreallocDataCompleted) (void *TVGObject, TOnCopyPreallocDataCompletedCb Event);
      typedef void (STDCALL *tSetOnCopyPreallocDataProgress) (void *TVGObject, TOnCopyPreallocDataProgressCb Event);
      typedef void (STDCALL *tSetOnCopyPreallocDataStarted) (void *TVGObject, TOnCopyPreallocDataStartedCb Event);
      typedef void (STDCALL *tSetOnCreatePreallocFileCompleted) (void *TVGObject, TOnCreatePreallocFileCompletedCb Event);
      typedef void (STDCALL *tSetOnCreatePreallocFileProgress) (void *TVGObject, TOnCreatePreallocFileProgressCb Event);
      typedef void (STDCALL *tSetOnCreatePreallocFileStarted) (void *TVGObject, TOnCreatePreallocFileStartedCb Event);
      typedef void (STDCALL *tSetOnDblClick) (void *TVGObject, TOnDblClickCb Event);
      typedef void (STDCALL *tSetOnDeviceArrivalOrRemoval) (void *TVGObject, TOnDeviceArrivalOrRemovalCb Event);
      typedef void (STDCALL *tSetOnDeviceLost) (void *TVGObject, TOnDeviceLostCb Event);
      typedef void (STDCALL *tSetOnDeviceReconnected) (void *TVGObject, TOnDeviceReconnectedCb Event);
      typedef void (STDCALL *tSetOnDeviceReconnecting) (void *TVGObject, TOnDeviceReconnectingCb Event);
      typedef void (STDCALL *tSetOnDirectNetworkStreamingHostUrl) (void *TVGObject, TOnDirectNetworkStreamingHostUrlCb Event);
      typedef void (STDCALL *tSetOnDiskFull) (void *TVGObject, TOnDiskFullCb Event);
      typedef void (STDCALL *tSetOnDoEvents) (void *TVGObject, void*Value);
      typedef void (STDCALL *tSetOnDragDrop) (void *TVGObject, TOnDragDropCb Event);
      typedef void (STDCALL *tSetOnDragDropFiles) (void *TVGObject, TOnDragDropFilesCb Event);
      typedef void (STDCALL *tSetOnDragOver) (void *TVGObject, TOnDragOverCb Event);
      typedef void (STDCALL *tSetOnDVCommandCompleted) (void *TVGObject, TOnDVCommandCompletedCb Event);
      typedef void (STDCALL *tSetOnDVDiscontinuity) (void *TVGObject, TOnDVDiscontinuityCb Event);
      typedef void (STDCALL *tSetOnEnumerateWindows) (void *TVGObject, TOnEnumerateWindowsCb Event);
      typedef void (STDCALL *tSetOnFilterSelected) (void *TVGObject, TOnFilterSelectedCb Event);
      typedef void (STDCALL *tSetOnFirstFrameReceived) (void *TVGObject, TOnFirstFrameReceivedCb Event);
      typedef void (STDCALL *tSetOnFrameBitmap) (void *TVGObject, TOnFrameBitmapCb Event);
      typedef void (STDCALL *tSetOnFrameBitmapEventSynchrone) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetOnFrameCaptureCompleted) (void *TVGObject, TOnFrameCaptureCompletedCb Event);
      typedef void (STDCALL *tSetOnFrameOverlayUsingDC) (void *TVGObject, TOnFrameOverlayUsingDCCb Event);
      typedef void (STDCALL *tSetOnFrameOverlayUsingDIB) (void *TVGObject, TOnFrameOverlayUsingDIBCb Event);
      typedef void (STDCALL *tSetOnFrameProgress) (void *TVGObject, TOnFrameProgressCb Event);
      typedef void (STDCALL *tSetOnFrameProgress2) (void *TVGObject, TOnFrameProgress2Cb Event);
      typedef void (STDCALL *tSetOnGraphBuilt) (void *TVGObject, TOnGraphBuiltCb Event);
      typedef void (STDCALL *tSetOnInactive) (void *TVGObject, TOnInactiveCb Event);
      typedef void (STDCALL *tSetOnKeyPress) (void *TVGObject, TOnKeyPressCb Event);
      typedef void (STDCALL *tSetOnLastCommandCompleted) (void *TVGObject, TOnLastCommandCompletedCb Event);
      typedef void (STDCALL *tSetOnLeavingFullScreen) (void *TVGObject, TOnLeavingFullScreenCb Event);
      typedef void (STDCALL *tSetOnLog) (void *TVGObject, TOnLogCb Event);
      typedef void (STDCALL *tSetOnMotionDetected) (void *TVGObject, TOnMotionDetectedCb Event);
      typedef void (STDCALL *tSetOnMotionNotDetected) (void *TVGObject, TOnMotionNotDetectedCb Event);
      typedef void (STDCALL *tSetOnMouseDown) (void *TVGObject, TOnMouseDownCb Event);
      typedef void (STDCALL *tSetOnMouseDown_Video) (void *TVGObject, TOnMouseDown_VideoCb Event);
      typedef void (STDCALL *tSetOnMouseDown_Window) (void *TVGObject, TOnMouseDown_WindowCb Event);
      typedef void (STDCALL *tSetOnMouseEnter) (void *TVGObject, TOnMouseEnterCb Event);
      typedef void (STDCALL *tSetOnMouseLeave) (void *TVGObject, TOnMouseLeaveCb Event);
      typedef void (STDCALL *tSetOnMouseMove) (void *TVGObject, TOnMouseMoveCb Event);
      typedef void (STDCALL *tSetOnMouseMove_Video) (void *TVGObject, TOnMouseMove_VideoCb Event);
      typedef void (STDCALL *tSetOnMouseMove_Window) (void *TVGObject, TOnMouseMove_WindowCb Event);
      typedef void (STDCALL *tSetOnMouseUp) (void *TVGObject, TOnMouseUpCb Event);
      typedef void (STDCALL *tSetOnMouseUp_Video) (void *TVGObject, TOnMouseUp_VideoCb Event);
      typedef void (STDCALL *tSetOnMouseUp_Window) (void *TVGObject, TOnMouseUp_WindowCb Event);
      typedef void (STDCALL *tSetOnMouseWheel) (void *TVGObject, TOnMouseWheelCb Event);
      typedef void (STDCALL *tSetOnMultipurposeEncoderCompleted) (void *TVGObject, TOnMultipurposeEncoderCompletedCb Event);
      typedef void (STDCALL *tSetOnMultipurposeEncoderError) (void *TVGObject, TOnMultipurposeEncoderErrorCb Event);
      typedef void (STDCALL *tSetOnMultipurposeEncoderProgress) (void *TVGObject, TOnMultipurposeEncoderProgressCb Event);
      typedef void (STDCALL *tSetOnNoVideoDevices) (void *TVGObject, TOnNoVideoDevicesCb Event);
      typedef void (STDCALL *tSetOnNTPTimeStamp) (void *TVGObject, TOnNTPTimeStampCb Event);
      typedef void (STDCALL *tSetOnPlayerBufferingData) (void *TVGObject, TOnPlayerBufferingDataCb Event);
      typedef void (STDCALL *tSetOnPlayerDurationUpdated) (void *TVGObject, TOnPlayerDurationUpdatedCb Event);
      typedef void (STDCALL *tSetOnPlayerEndOfPlaylist) (void *TVGObject, TOnPlayerEndOfPlaylistCb Event);
      typedef void (STDCALL *tSetOnPlayerEndOfStream) (void *TVGObject, TOnPlayerEndOfStreamCb Event);
      typedef void (STDCALL *tSetOnPlayerOpened) (void *TVGObject, TOnPlayerOpenedCb Event);
      typedef void (STDCALL *tSetOnPlayerStateChanged) (void *TVGObject, TOnPlayerStateChangedCb Event);
      typedef void (STDCALL *tSetOnPlayerUpdateTrackbarPosition) (void *TVGObject, TOnPlayerUpdateTrackbarPositionCb Event);
      typedef void (STDCALL *tSetOnPreviewStarted) (void *TVGObject, TOnPreviewStartedCb Event);
      typedef void (STDCALL *tSetOnRawAudioSample) (void *TVGObject, TOnRawAudioSampleCb Event);
      typedef void (STDCALL *tSetOnRawVideoSample) (void *TVGObject, TOnRawVideoSampleCb Event);
      typedef void (STDCALL *tSetOnRecordingCompleted) (void *TVGObject, TOnRecordingCompletedCb Event);
      typedef void (STDCALL *tSetOnRecordingPaused) (void *TVGObject, TOnRecordingPausedCb Event);
      typedef void (STDCALL *tSetOnRecordingReadyToStart) (void *TVGObject, TOnRecordingReadyToStartCb Event);
      typedef void (STDCALL *tSetOnRecordingStarted) (void *TVGObject, TOnRecordingStartedCb Event);
      typedef void (STDCALL *tSetOnReencodingCompleted) (void *TVGObject, TOnReencodingCompletedCb Event);
      typedef void (STDCALL *tSetOnReencodingProgress) (void *TVGObject, TOnReencodingProgressCb Event);
      typedef void (STDCALL *tSetOnReencodingStarted) (void *TVGObject, TOnReencodingStartedCb Event);
      typedef void (STDCALL *tSetOnReinitializing) (void *TVGObject, TOnReinitializingCb Event);
      typedef void (STDCALL *tSetOnResizeVideo) (void *TVGObject, TOnResizeVideoCb Event);
      typedef void (STDCALL *tSetOnStoppingGraph) (void *TVGObject, TOnStoppingGraphCb Event);
      typedef void (STDCALL *tSetOnStoppingGraphCompleted) (void *TVGObject, TOnStoppingGraphCompletedCb Event);
      typedef void (STDCALL *tSetOnTextOverlayScrollingCompleted) (void *TVGObject, TOnTextOverlayScrollingCompletedCb Event);
      typedef void (STDCALL *tSetOnThirdPartyFilterAdded) (void *TVGObject, TOnThirdPartyFilterAddedCb Event);
      typedef void (STDCALL *tSetOnThirdPartyFilterConnected) (void *TVGObject, TOnThirdPartyFilterConnectedCb Event);
      typedef void (STDCALL *tSetOnThirdPartyFilterConnected2) (void *TVGObject, TOnThirdPartyFilterConnected2Cb Event);
      typedef void (STDCALL *tSetOnThreadSync) (void *TVGObject, TOnThreadSyncCb Event);
      typedef void (STDCALL *tSetOnTVChannelScanCompleted) (void *TVGObject, TOnTVChannelScanCompletedCb Event);
      typedef void (STDCALL *tSetOnTVChannelScanStarted) (void *TVGObject, TOnTVChannelScanStartedCb Event);
      typedef void (STDCALL *tSetOnTVChannelSelected) (void *TVGObject, TOnTVChannelSelectedCb Event);
      typedef void (STDCALL *tSetOnVideoCompressionSettings) (void *TVGObject, TOnVideoCompressionSettingsCb Event);
      typedef void (STDCALL *tSetOnVideoDeviceSelected) (void *TVGObject, TOnVideoDeviceSelectedCb Event);
      typedef void (STDCALL *tSetOnVideoFromBitmapsNextFrameNeeded) (void *TVGObject, TOnVideoFromBitmapsNextFrameNeededCb Event);
      typedef void (STDCALL *tSetOpenURLAsync) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetOverlayAfterTransform) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetParentWindow) (void *TVGObject, HWND Value);
      typedef void (STDCALL *tSetPlayerAudioRendering) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetPlayerDuration) (void *TVGObject, __int64 Value);
      typedef void (STDCALL *tSetPlayerDVSize) (void *TVGObject, TDVSize Value);
      typedef void (STDCALL *tSetPlayerFastSeekSpeedRatio) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetPlayerFileName) (void *TVGObject, const wchar_t *Value);
      typedef void (STDCALL *tSetPlayerForcedCodec) (void *TVGObject, const wchar_t *Value);
      typedef void (STDCALL *tSetPlayerFramePosition) (void *TVGObject, __int64 Value);
      typedef void (STDCALL *tSetPlayerHwAccel) (void *TVGObject, THwAccel Value);
      typedef void (STDCALL *tSetPlayerRefreshPausedDisplay) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetPlayerRefreshPausedDisplayFrameRate) (void *TVGObject, double Value);
      typedef void (STDCALL *tSetPlayerSpeedRatio) (void *TVGObject, double Value);
      typedef void (STDCALL *tSetPlayerSpeedRatioConstantAudioPitch) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetPlayerTimePosition) (void *TVGObject, __int64 Value);
      typedef void (STDCALL *tSetPlayerTrackBarSynchrone) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetPlaylistIndex) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetPreallocCapFileCopiedAfterRecording) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetPreallocCapFileEnabled) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetPreallocCapFileName) (void *TVGObject, const wchar_t *Value);
      typedef void (STDCALL *tSetPreallocCapFileSizeInMB) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetPreviewZoomSize) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetQuickDeviceInitialization) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetRawAudioSampleCapture) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetRawCaptureAsyncEvent) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetRawSampleCaptureLocation) (void *TVGObject, TRawSampleCaptureLocation Value);
      typedef void (STDCALL *tSetRawVideoSampleCapture) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetRecordingAudioBitRate) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetRecordingBacktimedFramesCount) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetRecordingCanPause) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetRecordingFileName) (void *TVGObject, const wchar_t *Value);
      typedef void (STDCALL *tSetRecordingFileSizeMaxInMB) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetRecordingInNativeFormat) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetRecordingMethod) (void *TVGObject, TRecordingMethod Value);
      typedef void (STDCALL *tSetRecordingOnMotion_Enabled) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetRecordingOnMotion_MotionThreshold) (void *TVGObject, double Value);
      typedef void (STDCALL *tSetRecordingOnMotion_NoMotionPauseDelayMs) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetRecordingPauseCreatesNewFile) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetRecordingSize) (void *TVGObject, TRecordingSize Value);
      typedef void (STDCALL *tSetRecordingTimer) (void *TVGObject, TRecordingTimer Value);
      typedef void (STDCALL *tSetRecordingTimerInterval) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetRecordingVideoBitRate) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetReencodingIncludeAudioStream) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetReencodingIncludeVideoStream) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetReencodingMethod) (void *TVGObject, TRecordingMethod Value);
      typedef void (STDCALL *tSetReencodingNewVideoClip) (void *TVGObject, const wchar_t *Value);
      typedef void (STDCALL *tSetReencodingSourceVideoClip) (void *TVGObject, const wchar_t *Value);
      typedef void (STDCALL *tSetReencodingStartFrame) (void *TVGObject, __int64 Value);
      typedef void (STDCALL *tSetReencodingStartTime) (void *TVGObject, __int64 Value);
      typedef void (STDCALL *tSetReencodingStopFrame) (void *TVGObject, __int64 Value);
      typedef void (STDCALL *tSetReencodingStopTime) (void *TVGObject, __int64 Value);
      typedef void (STDCALL *tSetReencodingUseAudioCompressor) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetReencodingUseFrameGrabber) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetReencodingUseVideoCompressor) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetReencodingWMVOutput) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetScreenRecordingLayeredWindows) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetScreenRecordingMonitor) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetScreenRecordingNonVisibleWindows) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetScreenRecordingSizePercent) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetScreenRecordingThroughClipboard) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetScreenRecordingWithCursor) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetSendToDV_DeviceIndex) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetSpeakerBalance) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetSpeakerControl) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetSpeakerVolume) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetStoragePath) (void *TVGObject, const wchar_t *Value);
      typedef void (STDCALL *tSetStoragePathMode) (void *TVGObject, TStoragePathMode Value);
      typedef void (STDCALL *tSetStoreDeviceSettingsInRegistry) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetStreamInterface_Format) (void *TVGObject, const wchar_t *Value);
      typedef void (STDCALL *tSetStreamInterface_FrameRate) (void *TVGObject, double Value);
      typedef void (STDCALL *tSetStreamInterface_IsRealTime) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetSyncCommands) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetSynchronizationRole) (void *TVGObject, TSynchronizationRole Value);
      typedef void (STDCALL *tSetSynchronized) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetSyncPreview) (void *TVGObject, TSyncPreview Value);
      typedef void (STDCALL *tSetTextOverlay_Align) (void *TVGObject, int Index, TTextOverlayAlign Value);
      typedef void (STDCALL *tSetTextOverlay_AlphaBlend) (void *TVGObject, int Index, BOOL Value);
      typedef void (STDCALL *tSetTextOverlay_AlphaBlendValue) (void *TVGObject, int Index, int Value);
      typedef void (STDCALL *tSetTextOverlay_BkColor) (void *TVGObject, int Index, int Value);
      typedef void (STDCALL *tSetTextOverlay_CustomVar) (void *TVGObject, int Index, int VarIndex, const wchar_t *VarText);
      typedef void (STDCALL *tSetTextOverlay_Enabled) (void *TVGObject, int Index, BOOL Value);
      typedef void (STDCALL *tSetTextOverlay_Font) (void *TVGObject, int Index, INT_PTR Value);
      typedef void (STDCALL *tSetTextOverlay_FontColor) (void *TVGObject, int Index, int Value);
      typedef void (STDCALL *tSetTextOverlay_FontSize) (void *TVGObject, int Index, int Value);
      typedef void (STDCALL *tSetTextOverlay_GradientColor) (void *TVGObject, int Index, int Value);
      typedef void (STDCALL *tSetTextOverlay_GradientMode) (void *TVGObject, int Index, TTextOverlayGradientMode Value);
      typedef void (STDCALL *tSetTextOverlay_HighResFont) (void *TVGObject, int Index, BOOL Value);
      typedef void (STDCALL *tSetTextOverlay_Left) (void *TVGObject, int Index, int Value);
      typedef void (STDCALL *tSetTextOverlay_Orientation) (void *TVGObject, int Index, TTextOrientation Value);
      typedef void (STDCALL *tSetTextOverlay_Right) (void *TVGObject, int Index, int Value);
      typedef void (STDCALL *tSetTextOverlay_Scrolling) (void *TVGObject, int Index, BOOL Value);
      typedef void (STDCALL *tSetTextOverlay_ScrollingSpeed) (void *TVGObject, int Index, int Value);
      typedef void (STDCALL *tSetTextOverlay_Shadow) (void *TVGObject, int Index, BOOL Value);
      typedef void (STDCALL *tSetTextOverlay_ShadowColor) (void *TVGObject, int Index, int Value);
      typedef void (STDCALL *tSetTextOverlay_ShadowDirection) (void *TVGObject, int Index, TCardinalDirection Value);
      typedef void (STDCALL *tSetTextOverlay_String) (void *TVGObject, int Index, const wchar_t *Value);
      typedef void (STDCALL *tSetTextOverlay_TargetDisplay) (void *TVGObject, int Index, int Value);
      typedef void (STDCALL *tSetTextOverlay_Top) (void *TVGObject, int Index, int Value);
      typedef void (STDCALL *tSetTextOverlay_Transparent) (void *TVGObject, int Index, BOOL Value);
      typedef void (STDCALL *tSetTextOverlay_VideoAlignment) (void *TVGObject, int Index, TVideoAlignment Value);
      typedef void (STDCALL *tSetTextOverlayAlign) (void *TVGObject, TTextOverlayAlign Value);
      typedef void (STDCALL *tSetTextOverlayAlphaBlend) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetTextOverlayAlphaBlendValue) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetTextOverlayBkColor) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetTextOverlayEnabled) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetTextOverlayFont) (void *TVGObject, INT_PTR Value);
      typedef void (STDCALL *tSetTextOverlayFontColor) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetTextOverlayFontSize) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetTextOverlayGradientColor) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetTextOverlayGradientMode) (void *TVGObject, TTextOverlayGradientMode Value);
      typedef void (STDCALL *tSetTextOverlayHighResFont) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetTextOverlayLeft) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetTextOverlayOrientation) (void *TVGObject, TTextOrientation Value);
      typedef void (STDCALL *tSetTextOverlayRight) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetTextOverlayScrolling) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetTextOverlayScrollingSpeed) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetTextOverlaySelector) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetTextOverlayShadow) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetTextOverlayShadowColor) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetTextOverlayShadowDirection) (void *TVGObject, TCardinalDirection Value);
      typedef void (STDCALL *tSetTextOverlayString) (void *TVGObject, const wchar_t *Value);
      typedef void (STDCALL *tSetTextOverlayTargetDisplay) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetTextOverlayTop) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetTextOverlayTransparent) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetTextOverlayVideoAlignment) (void *TVGObject, TVideoAlignment Value);
      typedef void (STDCALL *tSetThirdPartyDeinterlacer) (void *TVGObject, const wchar_t *Value);
      typedef void (STDCALL *tSetTranslateMouseCoordinates) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetTunerFrequency) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetTunerMode) (void *TVGObject, TTunerMode Value);
      typedef void (STDCALL *tSetTVChannel) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetTVCountryCode) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetTVTunerInputType) (void *TVGObject, TTunerInputType Value);
      typedef void (STDCALL *tSetTVUseFrequencyOverrides) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetUseClock) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetv360_AspectRatio) (void *TVGObject, double Value);
      typedef void (STDCALL *tSetv360_Enabled) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetv360_MasterAngle) (void *TVGObject, Tv360_Angle Value);
      typedef void (STDCALL *tSetv360_MouseAction) (void *TVGObject, TV360_MouseAction Value);
      typedef void (STDCALL *tSetv360_MouseActionPercent) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetVCRHorizontalLocking) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetVersion) (void *TVGObject, const wchar_t *Value);
      typedef void (STDCALL *tSetVideoCompression_DataRate) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetVideoCompression_KeyFrameRate) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetVideoCompression_PFramesPerKeyFrame) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetVideoCompression_Quality) (void *TVGObject, double Value);
      typedef void (STDCALL *tSetVideoCompression_WindowSize) (void *TVGObject, int Value);
      typedef BOOL (STDCALL *tSetVideoCompressionDefaults) (void *TVGObject);
      typedef BOOL (STDCALL *tSetVideoCompressionSettings) (void *TVGObject, int DataRate, int KeyFrameRate, int PFramesPerKeyFrame, int WindowSize, double Quality);
      typedef void (STDCALL *tSetVideoCompressor) (void *TVGObject, int Value);
      typedef BOOL (STDCALL *tSetVideoControlMode) (void *TVGObject, BOOL FlipHorizontal, BOOL FlipVertical, BOOL ExternalTriggerEnable, BOOL Trigger);
      typedef BOOL (STDCALL *tSetVideoControlMode2) (void *TVGObject, TVideoControl Mode, BOOL Value);
      typedef void (STDCALL *tSetVideoControlSettings) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetVideoCursor) (void *TVGObject, TCursors Value);
      typedef void (STDCALL *tSetVideoDelay) (void *TVGObject, __int64 Value);
      typedef void (STDCALL *tSetVideoDevice) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetVideoDoubleBuffered) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetVideoFormat) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetVideoFromImages_BitmapsSortedBy) (void *TVGObject, TFileSort Value);
      typedef void (STDCALL *tSetVideoFromImages_RepeatIndefinitely) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetVideoFromImages_SourceDirectory) (void *TVGObject, const wchar_t *Value);
      typedef void (STDCALL *tSetVideoFromImages_TemporaryFile) (void *TVGObject, const wchar_t *Value);
      typedef void (STDCALL *tSetVideoInput) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetVideoProcessingBrightness) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetVideoProcessingContrast) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetVideoProcessingDeinterlacing) (void *TVGObject, TVideoDeinterlacing Value);
      typedef void (STDCALL *tSetVideoProcessingGrayScale) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetVideoProcessingHue) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetVideoProcessingInvertColors) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetVideoProcessingLeftRight) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetVideoProcessingPixellization) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetVideoProcessingRotation) (void *TVGObject, TVideoRotation Value);
      typedef void (STDCALL *tSetVideoProcessingRotationCustomAngle) (void *TVGObject, double Value);
      typedef void (STDCALL *tSetVideoProcessingSaturation) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetVideoProcessingTopDown) (void *TVGObject, BOOL Value);
      typedef BOOL (STDCALL *tSetVideoQuality) (void *TVGObject, TVideoQuality Setting, BOOL SetAuto, BOOL SetDefault, int SetValue);
      typedef void (STDCALL *tSetVideoQualitySettings) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetVideoRenderer) (void *TVGObject, TVideoRenderer Value);
      typedef void (STDCALL *tSetVideoRendererExternal) (void *TVGObject, TVideoRendererExternal Value);
      typedef void (STDCALL *tSetVideoRendererExternalIndex) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetVideoRendererPriority) (void *TVGObject, TVideoRendererPriority Value);
      typedef void (STDCALL *tSetVideoSize) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetVideoSource) (void *TVGObject, TVideoSource Value);
      typedef void (STDCALL *tSetVideoSource_FileOrURL) (void *TVGObject, const wchar_t *Value);
      typedef void (STDCALL *tSetVideoSource_FileOrURL_StartTime) (void *TVGObject, __int64 Value);
      typedef void (STDCALL *tSetVideoSource_FileOrURL_StopTime) (void *TVGObject, __int64 Value);
      typedef void (STDCALL *tSetVideoStreamNumber) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetVideoSubtype) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetVideoVisibleWhenStopped) (void *TVGObject, BOOL Value);
      typedef void (STDCALL *tSetVirtualAudioStreamControl) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetVirtualVideoStreamControl) (void *TVGObject, int Value);
      typedef BOOL (STDCALL *tSetVMR9ImageAdjustmentValue) (void *TVGObject, BOOL MainDisplay, TVMR9ImageAdjustment VMR9ControlSetting, int Value, BOOL FixRange);
      typedef void (STDCALL *tSetVuMeter) (void *TVGObject, TVuMeter Value);
      typedef void (STDCALL *tSetVuMeter_Enabled) (void *TVGObject, int Index, TVuMeter Value);
      typedef void (STDCALL *tSetVUMeterSetting) (void *TVGObject, unsigned int ChannelIndex, TVUMeterSetting VUMeterSetting, INT_PTR Value);
      typedef void (STDCALL *tSetWebcamStillCaptureButton) (void *TVGObject, TWebcamStillCaptureButton Value);
      typedef BOOL (STDCALL *tSetWindowRecordingByHandle) (void *TVGObject, HWND Window_Handle);
      typedef BOOL (STDCALL *tSetWindowRecordingByName) (void *TVGObject, const wchar_t *WindowName, BOOL ExactMatch);
      typedef BOOL (STDCALL *tSetWindowTransparency) (void *TVGObject, HWND WndHandle, BOOL UseColorKey, BOOL UseAlpha, int AlphaValue);
      typedef void (STDCALL *tSetZoomCoeff) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetZoomXCenter) (void *TVGObject, int Value);
      typedef void (STDCALL *tSetZoomYCenter) (void *TVGObject, int Value);
      typedef void (STDCALL *tShowDebugWindow) (void *TVGObject);
      typedef BOOL (STDCALL *tShowDialog) (void *TVGObject, TDialog Dialog);
      typedef BOOL (STDCALL *tStartAudioRecording) (void *TVGObject);
      typedef BOOL (STDCALL *tStartAudioRendering) (void *TVGObject);
      typedef BOOL (STDCALL *tStartPreview) (void *TVGObject);
      typedef BOOL (STDCALL *tStartRecording) (void *TVGObject);
      typedef BOOL (STDCALL *tStartReencoding) (void *TVGObject);
      typedef BOOL (STDCALL *tStartSynchronized) (void *TVGObject);
      typedef BOOL (STDCALL *tStop) (void *TVGObject);
      typedef void (STDCALL *tStopPlayer) (void *TVGObject);
      typedef void (STDCALL *tStopPreview) (void *TVGObject);
      typedef void (STDCALL *tStopRecording) (void *TVGObject);
      typedef BOOL (STDCALL *tStopReencoding) (void *TVGObject);
      typedef int (STDCALL *tStreamInterface_PushData) (void *TVGObject, byte *Buffer, int BufferSize);
      typedef BOOL (STDCALL *tTextOverlay_CreateCustomFont) (void *TVGObject, int Index, int fHeight, int fWidth, int fEscapement, int fOrientation, int fWeight, BOOL fItalic, BOOL fUnderline, BOOL fStrikeOut, unsigned int fCharSet, unsigned int fOutputPrecision, unsigned int fClipPrecision, unsigned int fQuality, unsigned int fPitchAndFamily, const wchar_t *FontFacename);
      typedef BOOL (STDCALL *tThirdPartyFilter_AddToList) (void *TVGObject, TThirdPartyFilterList Location, const wchar_t *GUIDString, const wchar_t *OptionalDLLFilePath, const wchar_t *FilterName, BOOL Enable, BOOL CanSaveFilterState);
      typedef BOOL (STDCALL *tThirdPartyFilter_ClearList) (void *TVGObject);
      typedef BOOL (STDCALL *tThirdPartyFilter_Enable) (void *TVGObject, TThirdPartyFilterList Location, const wchar_t *GUIDString, BOOL Enable);
      typedef BOOL (STDCALL *tThirdPartyFilter_RemoveFromList) (void *TVGObject, TThirdPartyFilterList Location, const wchar_t *GUIDString);
      typedef BOOL (STDCALL *tThirdPartyFilter_ShowDialog) (void *TVGObject, TThirdPartyFilterList Location, const wchar_t *GUIDString);
      typedef BOOL (STDCALL *tTVClearFrequencyOverrides) (void *TVGObject);
      typedef BOOL (STDCALL *tTVGetMinMaxChannels) (void *TVGObject, int*MinChannel, int*MaxChannel);
      typedef int (STDCALL *tTVSetChannelFrequencyOverride) (void *TVGObject, int TVChannel, int FrequencyInHz);
      typedef BOOL (STDCALL *tTVStartAutoScan) (void *TVGObject);
      typedef BOOL (STDCALL *tTVStartAutoScanChannels) (void *TVGObject, int MinChannel, int MaxChannel, int Interval_ms);
      typedef BOOL (STDCALL *tTVStopAutoScan) (void *TVGObject);
      typedef void (STDCALL *tUpdateTrackbarBounds) (void *TVGObject);
      typedef void (STDCALL *tUseNearestVideoSize) (void *TVGObject, int PreferredWidth, int PreferredHeight, BOOL Stretch);
      typedef BOOL (STDCALL *tv360_AddYawPitchRoll) (void *TVGObject, double Yaw, double Pitch, double Roll);
      typedef double (STDCALL *tv360_GetAngle) (void *TVGObject, Tv360_InOut Direction, Tv360_Angle Angle);
      typedef void (STDCALL *tv360_GetYawPitchRoll) (void *TVGObject, double*Yaw, double*Pitch, double*Roll);
      typedef void (STDCALL *tv360_ResetAnglesToDefault) (void *TVGObject);
      typedef BOOL (STDCALL *tv360_SetAngle) (void *TVGObject, Tv360_InOut Direction, Tv360_Angle Angle, double Value);
      typedef BOOL (STDCALL *tv360_SetInterpolation) (void *TVGObject, Tv360_Interpolation Value);
      typedef BOOL (STDCALL *tv360_SetProjection) (void *TVGObject, Tv360_InOut Direction, Tv360_Projection Value);
      typedef BOOL (STDCALL *tv360_SetStereoFormat) (void *TVGObject, Tv360_InOut Direction, Tv360_StereoFormat Value);
      typedef BOOL (STDCALL *tv360_SetTranspose) (void *TVGObject, Tv360_InOut Direction, BOOL Value);
      typedef BOOL (STDCALL *tv360_SetYawPitchRoll) (void *TVGObject, double Yaw, double Pitch, double Roll);
      typedef BOOL (STDCALL *tVDECGetHorizontalLocked) (void *TVGObject, int*plLocked);
      typedef BOOL (STDCALL *tVDECGetNumberOfLines) (void *TVGObject, int*plNumberOfLines);
      typedef BOOL (STDCALL *tVDECGetOutputEnable) (void *TVGObject, int*plOutputEnable);
      typedef BOOL (STDCALL *tVDECGetVCRHorizontalLocking) (void *TVGObject, int*plVCRHorizontalLocking);
      typedef BOOL (STDCALL *tVDECPutOutputEnable) (void *TVGObject, int lOutputEnable);
      typedef BOOL (STDCALL *tVDECPutTVFormat) (void *TVGObject, int lAnalogVideoStandard);
      typedef BOOL (STDCALL *tVDECPutVCRHorizontalLocking) (void *TVGObject, int lVCRHorizontalLocking);
      typedef int (STDCALL *tVideoCompressorIndex) (void *TVGObject, const wchar_t *Value);
      typedef int (STDCALL *tVideoDeviceIndex) (void *TVGObject, const wchar_t *Value);
      typedef int (STDCALL *tVideoDeviceIndexFromId) (void *TVGObject, const wchar_t *Value);
      typedef int (STDCALL *tVideoFormatIndex) (void *TVGObject, const wchar_t *Value);
      typedef BOOL (STDCALL *tVideoFromImages_CreateSetOfBitmaps) (void *TVGObject);
      typedef int (STDCALL *tVideoInputIndex) (void *TVGObject, const wchar_t *Value);
      typedef BOOL (STDCALL *tVideoQualityAuto) (void *TVGObject, TVideoQuality Setting);
      typedef int (STDCALL *tVideoQualityDefault) (void *TVGObject, TVideoQuality Setting);
      typedef int (STDCALL *tVideoQualityMax) (void *TVGObject, TVideoQuality Setting);
      typedef int (STDCALL *tVideoQualityMin) (void *TVGObject, TVideoQuality Setting);
      typedef int (STDCALL *tVideoQualityStep) (void *TVGObject, TVideoQuality Setting);
      typedef int (STDCALL *tVideoQualityValue) (void *TVGObject, TVideoQuality Setting);
      typedef int (STDCALL *tVideoSizeIndex) (void *TVGObject, const wchar_t *Value);
      typedef int (STDCALL *tVideoSubtypeIndex) (void *TVGObject, const wchar_t *Value);
      typedef void * (STDCALL *tWaitForLastFrameBitmapBits) (void *TVGObject, int BufferIndex, BOOL WithOverlays, BOOL ReleaseFrame, int*BitmapWidth, int*BitmapHeight, int*BitmapLineSize, int*BitmapSize, int*BitmapBitsPerPixel, __int64*FrameTime, __int64*FrameNumber);
      typedef BOOL (STDCALL *tWriteScriptCommand) (void *TVGObject, const wchar_t *ScriptType, const wchar_t *ScriptArgument);
      typedef BOOL (STDCALL *tzReservedInternal1) (void *TVGObject, void *Param1, void *Param2);
      typedef BOOL (STDCALL *tzReservedInternal2) (void *TVGObject, BOOL Param1);
      typedef INT_PTR (STDCALL *tzReservedInternal3) (void *TVGObject);
//#endregion DeclareFunctionTypesCPP

//#region DeclareFunctionPointersCPP
   
   static tAbout _About;
   static tAnalogVideoStandardIndex _AnalogVideoStandardIndex;
   static tASFStreaming_GetAuthorizationList _ASFStreaming_GetAuthorizationList;
   static tASFStreaming_GetConnectedClients _ASFStreaming_GetConnectedClients;
   static tASFStreaming_GetConnectedClientsCount _ASFStreaming_GetConnectedClientsCount;
   static tASFStreaming_ResetAuthorizations _ASFStreaming_ResetAuthorizations;
   static tASFStreaming_SetAuthorization _ASFStreaming_SetAuthorization;
   static tAssociateMultiplexedSlave _AssociateMultiplexedSlave;
   static tAudioCompressorIndex _AudioCompressorIndex;
   static tAudioDeviceIndex _AudioDeviceIndex;
   static tAudioInputIndex _AudioInputIndex;
   static tAudioRendererIndex _AudioRendererIndex;
   static tAVIDuration _AVIDuration;
   static tAVIHeaderInfo _AVIHeaderInfo;
   static tAVIInfo _AVIInfo;
   static tAVIInfo2 _AVIInfo2;
   static tCameraControlAuto _CameraControlAuto;
   static tCameraControlDefault _CameraControlDefault;
   static tCameraControlMax _CameraControlMax;
   static tCameraControlMin _CameraControlMin;
   static tCameraControlStep _CameraControlStep;
   static tCameraControlValue _CameraControlValue;
   static tCancel _Cancel;
   static tCanProcessMessages _CanProcessMessages;
   static tCaptureFrameRenderedTo _CaptureFrameRenderedTo;
   static tCaptureFrameSyncTo _CaptureFrameSyncTo;
   static tCaptureFrameTo _CaptureFrameTo;
   static tClearHeaderAttributes _ClearHeaderAttributes;
   static tClosePlayer _ClosePlayer;
   static tContinueProcessing _ContinueProcessing;
   static tCreatePreallocCapFile _CreatePreallocCapFile;
   static tCreateVideoGrabber _CreateVideoGrabber;
   static tDestroyVideoGrabber _DestroyVideoGrabber;
   static tDisplay_SetLocation _Display_SetLocation;
   static tDrawBitmapOverFrame _DrawBitmapOverFrame;
   static tDualDisplay_SetLocation _DualDisplay_SetLocation;
   static tDVDInfo _DVDInfo;
   static tEnableMultiplexedInput _EnableMultiplexedInput;
   static tEnableMultipurposeEncoder _EnableMultipurposeEncoder;
   static tEnableThreadMode _EnableThreadMode;
   static tEncoder_CloseOutputFile _Encoder_CloseOutputFile;
   static tEncoder_GetInt _Encoder_GetInt;
   static tEncoder_NewOutputFile _Encoder_NewOutputFile;
   static tEncoder_Pause _Encoder_Pause;
   static tEncoder_Resume _Encoder_Resume;
   static tEncoder_SetInt _Encoder_SetInt;
   static tEncoder_SetStr _Encoder_SetStr;
   static tEncoders_CreateInstanceForRecording _Encoders_CreateInstanceForRecording;
   static tEncoders_CreateInstanceForStreaming _Encoders_CreateInstanceForStreaming;
   static tEncoders_RemoveAllInstances _Encoders_RemoveAllInstances;
   static tEncoders_RemoveInstance _Encoders_RemoveInstance;
   static tEnumerateWindows _EnumerateWindows;
   static tFastForwardPlayer _FastForwardPlayer;
   static tFindIndexInListByName _FindIndexInListByName;
   static tGetAdjustOverlayAspectRatio _GetAdjustOverlayAspectRatio;
   static tGetAdjustPixelAspectRatio _GetAdjustPixelAspectRatio;
   static tGetAero _GetAero;
   static tGetAnalogVideoStandard _GetAnalogVideoStandard;
   static tGetAnalogVideoStandards _GetAnalogVideoStandards;
   static tGetAnalogVideoStandardsCount _GetAnalogVideoStandardsCount;
   static tGetApplicationPriority _GetApplicationPriority;
   static tGetASFAudioBitRate _GetASFAudioBitRate;
   static tGetASFAudioChannels _GetASFAudioChannels;
   static tGetASFBufferWindow _GetASFBufferWindow;
   static tGetASFDeinterlaceMode _GetASFDeinterlaceMode;
   static tGetASFDirectStreamingKeepClientsConnected _GetASFDirectStreamingKeepClientsConnected;
   static tGetASFFixedFrameRate _GetASFFixedFrameRate;
   static tGetASFMediaServerPublishingPoint _GetASFMediaServerPublishingPoint;
   static tGetASFMediaServerRemovePublishingPointAfterDisconnect _GetASFMediaServerRemovePublishingPointAfterDisconnect;
   static tGetASFMediaServerTemplatePublishingPoint _GetASFMediaServerTemplatePublishingPoint;
   static tGetASFNetworkMaxUsers _GetASFNetworkMaxUsers;
   static tGetASFNetworkPort _GetASFNetworkPort;
   static tGetASFProfile _GetASFProfile;
   static tGetASFProfileFromCustomFile _GetASFProfileFromCustomFile;
   static tGetASFProfiles _GetASFProfiles;
   static tGetASFProfilesCount _GetASFProfilesCount;
   static tGetASFProfileVersion _GetASFProfileVersion;
   static tGetASFVideoBitRate _GetASFVideoBitRate;
   static tGetASFVideoFrameRate _GetASFVideoFrameRate;
   static tGetASFVideoHeight _GetASFVideoHeight;
   static tGetASFVideoMaxKeyFrameSpacing _GetASFVideoMaxKeyFrameSpacing;
   static tGetASFVideoQuality _GetASFVideoQuality;
   static tGetASFVideoWidth _GetASFVideoWidth;
   static tGetAspectRatioToUse _GetAspectRatioToUse;
   static tGetAssociateAudioAndVideoDevices _GetAssociateAudioAndVideoDevices;
   static tGetAudioBalance _GetAudioBalance;
   static tGetAudioChannelRenderMode _GetAudioChannelRenderMode;
   static tGetAudioCodec _GetAudioCodec;
   static tGetAudioCompressor _GetAudioCompressor;
   static tGetAudioCompressorName _GetAudioCompressorName;
   static tGetAudioCompressors _GetAudioCompressors;
   static tGetAudioCompressorsCount _GetAudioCompressorsCount;
   static tGetAudioDevice _GetAudioDevice;
   static tGetAudioDeviceName _GetAudioDeviceName;
   static tGetAudioDeviceRendering _GetAudioDeviceRendering;
   static tGetAudioDevices _GetAudioDevices;
   static tGetAudioDevicesCount _GetAudioDevicesCount;
   static tGetAudioFormat _GetAudioFormat;
   static tGetAudioFormats _GetAudioFormats;
   static tGetAudioInput _GetAudioInput;
   static tGetAudioInputBalance _GetAudioInputBalance;
   static tGetAudioInputLevel _GetAudioInputLevel;
   static tGetAudioInputMono _GetAudioInputMono;
   static tGetAudioInputs _GetAudioInputs;
   static tGetAudioInputsCount _GetAudioInputsCount;
   static tGetAudioPeakEvent _GetAudioPeakEvent;
   static tGetAudioRecording _GetAudioRecording;
   static tGetAudioRenderer _GetAudioRenderer;
   static tGetAudioRendererName _GetAudioRendererName;
   static tGetAudioRenderers _GetAudioRenderers;
   static tGetAudioRenderersCount _GetAudioRenderersCount;
   static tGetAudioSource _GetAudioSource;
   static tGetAudioStreamNumber _GetAudioStreamNumber;
   static tGetAudioSyncAdjustment _GetAudioSyncAdjustment;
   static tGetAudioSyncAdjustmentEnabled _GetAudioSyncAdjustmentEnabled;
   static tGetAudioVolume _GetAudioVolume;
   static tGetAutoConnectRelatedPins _GetAutoConnectRelatedPins;
   static tGetAutoFileName _GetAutoFileName;
   static tGetAutoFileNameDateTimeFormat _GetAutoFileNameDateTimeFormat;
   static tGetAutoFileNameMinDigits _GetAutoFileNameMinDigits;
   static tGetAutoFilePrefix _GetAutoFilePrefix;
   static tGetAutoFileSuffix _GetAutoFileSuffix;
   static tGetAutoRefreshPreview _GetAutoRefreshPreview;
   static tGetAutoStartPlayer _GetAutoStartPlayer;
   static tGetAVIDurationUpdated _GetAVIDurationUpdated;
   static tGetAVIFormatOpenDML _GetAVIFormatOpenDML;
   static tGetAVIFormatOpenDMLCompatibilityIndex _GetAVIFormatOpenDMLCompatibilityIndex;
   static tGetBackgroundColor _GetBackgroundColor;
   static tGetBufferCount _GetBufferCount;
   static tGetBurstCount _GetBurstCount;
   static tGetBurstInterval _GetBurstInterval;
   static tGetBurstMode _GetBurstMode;
   static tGetBurstType _GetBurstType;
   static tGetBusy _GetBusy;
   static tGetBusyCursor _GetBusyCursor;
   static tGetCameraControlSettings _GetCameraControlSettings;
   static tGetCameraExposure _GetCameraExposure;
   static tGetCameraExposureAsString _GetCameraExposureAsString;
   static tGetCaptureFileExt _GetCaptureFileExt;
   static tGetColorKey _GetColorKey;
   static tGetColorKeyEnabled _GetColorKeyEnabled;
   static tGetCompressionMode _GetCompressionMode;
   static tGetCompressionType _GetCompressionType;
   static tGetCropping_Enabled _GetCropping_Enabled;
   static tGetCropping_Height _GetCropping_Height;
   static tGetCropping_Outbounds _GetCropping_Outbounds;
   static tGetCropping_Width _GetCropping_Width;
   static tGetCropping_X _GetCropping_X;
   static tGetCropping_XMax _GetCropping_XMax;
   static tGetCropping_Y _GetCropping_Y;
   static tGetCropping_YMax _GetCropping_YMax;
   static tGetCropping_Zoom _GetCropping_Zoom;
   static tGetCurrentFrameRate _GetCurrentFrameRate;
   static tGetCurrentState _GetCurrentState;
   static tGetDeliveredFrames _GetDeliveredFrames;
   static tGetDirectShowFilters _GetDirectShowFilters;
   static tGetDirectShowFiltersCount _GetDirectShowFiltersCount;
   static tGetDisplayActive _GetDisplayActive;
   static tGetDisplayAlphaBlendEnabled _GetDisplayAlphaBlendEnabled;
   static tGetDisplayAlphaBlendValue _GetDisplayAlphaBlendValue;
   static tGetDisplayAspectRatio _GetDisplayAspectRatio;
   static tGetDisplayAutoSize _GetDisplayAutoSize;
   static tGetDisplayEmbedded _GetDisplayEmbedded;
   static tGetDisplayEmbedded_FitParent _GetDisplayEmbedded_FitParent;
   static tGetDisplayFullScreen _GetDisplayFullScreen;
   static tGetDisplayHeight _GetDisplayHeight;
   static tGetDisplayLeft _GetDisplayLeft;
   static tGetDisplayMonitor _GetDisplayMonitor;
   static tGetDisplayMouseMovesWindow _GetDisplayMouseMovesWindow;
   static tGetDisplayPanScanRatio _GetDisplayPanScanRatio;
   static tGetDisplayStayOnTop _GetDisplayStayOnTop;
   static tGetDisplayTop _GetDisplayTop;
   static tGetDisplayTransparentColorEnabled _GetDisplayTransparentColorEnabled;
   static tGetDisplayTransparentColorValue _GetDisplayTransparentColorValue;
   static tGetDisplayVideoHeight _GetDisplayVideoHeight;
   static tGetDisplayVideoPortEnabled _GetDisplayVideoPortEnabled;
   static tGetDisplayVideoWidth _GetDisplayVideoWidth;
   static tGetDisplayVideoWindowHandle _GetDisplayVideoWindowHandle;
   static tGetDisplayVisible _GetDisplayVisible;
   static tGetDisplayWidth _GetDisplayWidth;
   static tGetDroppedFrameCount _GetDroppedFrameCount;
   static tGetDroppedFramesPollingInterval _GetDroppedFramesPollingInterval;
   static tGetDVDateTimeEnabled _GetDVDateTimeEnabled;
   static tGetDVDiscontinuityMinimumInterval _GetDVDiscontinuityMinimumInterval;
   static tGetDVDTitle _GetDVDTitle;
   static tGetDVEncoder_VideoFormat _GetDVEncoder_VideoFormat;
   static tGetDVEncoder_VideoResolution _GetDVEncoder_VideoResolution;
   static tGetDVEncoder_VideoStandard _GetDVEncoder_VideoStandard;
   static tGetDVRecordingInNativeFormatSeparatesStreams _GetDVRecordingInNativeFormatSeparatesStreams;
   static tGetDVReduceFrameRate _GetDVReduceFrameRate;
   static tGetDVRgb219 _GetDVRgb219;
   static tGetDVTimeCodeEnabled _GetDVTimeCodeEnabled;
   static tGetEventNotificationSynchrone _GetEventNotificationSynchrone;
   static tGetExtraDLLPath _GetExtraDLLPath;
   static tGetFilterInterfaceByName _GetFilterInterfaceByName;
   static tGetFixFlickerOrBlackCapture _GetFixFlickerOrBlackCapture;
   static tGetFrameBitmapInfo _GetFrameBitmapInfo;
   static tGetFrameCaptureHeight _GetFrameCaptureHeight;
   static tGetFrameCaptureWidth _GetFrameCaptureWidth;
   static tGetFrameCaptureWithoutOverlay _GetFrameCaptureWithoutOverlay;
   static tGetFrameCaptureZoomSize _GetFrameCaptureZoomSize;
   static tGetFrameGrabber _GetFrameGrabber;
   static tGetFrameGrabberCurrentRGBFormat _GetFrameGrabberCurrentRGBFormat;
   static tGetFrameGrabberRGBFormat _GetFrameGrabberRGBFormat;
   static tGetFrameInfo _GetFrameInfo;
   static tGetFrameInfoString _GetFrameInfoString;
   static tGetFrameNumberStartsFromZero _GetFrameNumberStartsFromZero;
   static tGetFrameRate _GetFrameRate;
   static tGetFrameRateDivider _GetFrameRateDivider;
   static tGetFWCam1394 _GetFWCam1394;
   static tGetFWCam1394List _GetFWCam1394List;
   static tGetGetLastFrameWaitTimeoutMs _GetGetLastFrameWaitTimeoutMs;
   static tGetHoldRecording _GetHoldRecording;
   static tGetImageOverlay_AlphaBlend _GetImageOverlay_AlphaBlend;
   static tGetImageOverlay_AlphaBlendValue _GetImageOverlay_AlphaBlendValue;
   static tGetImageOverlay_ChromaKey _GetImageOverlay_ChromaKey;
   static tGetImageOverlay_ChromaKeyLeewayPercent _GetImageOverlay_ChromaKeyLeewayPercent;
   static tGetImageOverlay_ChromaKeyRGBColor _GetImageOverlay_ChromaKeyRGBColor;
   static tGetImageOverlay_Enabled _GetImageOverlay_Enabled;
   static tGetImageOverlay_Height _GetImageOverlay_Height;
   static tGetImageOverlay_LeftLocation _GetImageOverlay_LeftLocation;
   static tGetImageOverlay_RotationAngle _GetImageOverlay_RotationAngle;
   static tGetImageOverlay_StretchToVideoSize _GetImageOverlay_StretchToVideoSize;
   static tGetImageOverlay_TargetDisplay _GetImageOverlay_TargetDisplay;
   static tGetImageOverlay_TopLocation _GetImageOverlay_TopLocation;
   static tGetImageOverlay_Transparent _GetImageOverlay_Transparent;
   static tGetImageOverlay_TransparentColorValue _GetImageOverlay_TransparentColorValue;
   static tGetImageOverlay_UseTransparentColor _GetImageOverlay_UseTransparentColor;
   static tGetImageOverlay_VideoAlignment _GetImageOverlay_VideoAlignment;
   static tGetImageOverlay_Width _GetImageOverlay_Width;
   static tGetImageOverlayAlphaBlend _GetImageOverlayAlphaBlend;
   static tGetImageOverlayAlphaBlendValue _GetImageOverlayAlphaBlendValue;
   static tGetImageOverlayChromaKey _GetImageOverlayChromaKey;
   static tGetImageOverlayChromaKeyLeewayPercent _GetImageOverlayChromaKeyLeewayPercent;
   static tGetImageOverlayChromaKeyRGBColor _GetImageOverlayChromaKeyRGBColor;
   static tGetImageOverlayEnabled _GetImageOverlayEnabled;
   static tGetImageOverlayHeight _GetImageOverlayHeight;
   static tGetImageOverlayLeftLocation _GetImageOverlayLeftLocation;
   static tGetImageOverlayRotationAngle _GetImageOverlayRotationAngle;
   static tGetImageOverlaySelector _GetImageOverlaySelector;
   static tGetImageOverlayStretchToVideoSize _GetImageOverlayStretchToVideoSize;
   static tGetImageOverlayTargetDisplay _GetImageOverlayTargetDisplay;
   static tGetImageOverlayTopLocation _GetImageOverlayTopLocation;
   static tGetImageOverlayTransparent _GetImageOverlayTransparent;
   static tGetImageOverlayTransparentColorValue _GetImageOverlayTransparentColorValue;
   static tGetImageOverlayUseTransparentColor _GetImageOverlayUseTransparentColor;
   static tGetImageOverlayVideoAlignment _GetImageOverlayVideoAlignment;
   static tGetImageOverlayWidth _GetImageOverlayWidth;
   static tGetImageRatio _GetImageRatio;
   static tGetInFrameProgressEvent _GetInFrameProgressEvent;
   static tGetIPCameraURL _GetIPCameraURL;
   static tGetIsAnalogVideoDecoderAvailable _GetIsAnalogVideoDecoderAvailable;
   static tGetIsAudioCrossbarAvailable _GetIsAudioCrossbarAvailable;
   static tGetIsAudioInputBalanceAvailable _GetIsAudioInputBalanceAvailable;
   static tGetIsCameraControlAvailable _GetIsCameraControlAvailable;
   static tGetIsDigitalVideoIn _GetIsDigitalVideoIn;
   static tGetIsDVCommandAvailable _GetIsDVCommandAvailable;
   static tGetIsHorizontalSyncLocked _GetIsHorizontalSyncLocked;
   static tGetIsMpegStream _GetIsMpegStream;
   static tGetIsPlayerAudioStreamAvailable _GetIsPlayerAudioStreamAvailable;
   static tGetIsPlayerVideoStreamAvailable _GetIsPlayerVideoStreamAvailable;
   static tGetIsRecordingPaused _GetIsRecordingPaused;
   static tGetIsTVAudioAvailable _GetIsTVAudioAvailable;
   static tGetIsTVAutoTuneRunning _GetIsTVAutoTuneRunning;
   static tGetIsTVTunerAvailable _GetIsTVTunerAvailable;
   static tGetIsVideoControlAvailable _GetIsVideoControlAvailable;
   static tGetIsVideoCrossbarAvailable _GetIsVideoCrossbarAvailable;
   static tGetIsVideoInterlaced _GetIsVideoInterlaced;
   static tGetIsVideoPortAvailable _GetIsVideoPortAvailable;
   static tGetIsVideoQualityAvailable _GetIsVideoQualityAvailable;
   static tGetIsWDMVideoDriver _GetIsWDMVideoDriver;
   static tGetItemNameFromList _GetItemNameFromList;
   static tGetJPEGPerformance _GetJPEGPerformance;
   static tGetJPEGProgressiveDisplay _GetJPEGProgressiveDisplay;
   static tGetJPEGQuality _GetJPEGQuality;
   static tGetLast_BurstFrameCapture_FileName _GetLast_BurstFrameCapture_FileName;
   static tGetLast_CaptureFrameTo_FileName _GetLast_CaptureFrameTo_FileName;
   static tGetLast_Clip_Played _GetLast_Clip_Played;
   static tGetLast_Recording_FileName _GetLast_Recording_FileName;
   static tGetLastAverageStreamValue _GetLastAverageStreamValue;
   static tGetLastFrameAsHBITMAP _GetLastFrameAsHBITMAP;
   static tGetLastFrameBitmapBits _GetLastFrameBitmapBits;
   static tGetLastFrameBitmapBits2 _GetLastFrameBitmapBits2;
   static tGetLicenseString _GetLicenseString;
   static tGetLogoDisplayed _GetLogoDisplayed;
   static tGetLogoLayout _GetLogoLayout;
   static tGetLogString _GetLogString;
   static tGetMiscDeviceControl _GetMiscDeviceControl;
   static tGetMixAudioSamplesLevel _GetMixAudioSamplesLevel;
   static tGetMixer_MosaicColumns _GetMixer_MosaicColumns;
   static tGetMixer_MosaicLines _GetMixer_MosaicLines;
   static tGetMotionDetector_CompareBlue _GetMotionDetector_CompareBlue;
   static tGetMotionDetector_CompareGreen _GetMotionDetector_CompareGreen;
   static tGetMotionDetector_CompareRed _GetMotionDetector_CompareRed;
   static tGetMotionDetector_Enabled _GetMotionDetector_Enabled;
   static tGetMotionDetector_GlobalMotionRatio _GetMotionDetector_GlobalMotionRatio;
   static tGetMotionDetector_GreyScale _GetMotionDetector_GreyScale;
   static tGetMotionDetector_Grid _GetMotionDetector_Grid;
   static tGetMotionDetector_GridXCount _GetMotionDetector_GridXCount;
   static tGetMotionDetector_GridYCount _GetMotionDetector_GridYCount;
   static tGetMotionDetector_IsGridValid _GetMotionDetector_IsGridValid;
   static tGetMotionDetector_MaxDetectionsPerSecond _GetMotionDetector_MaxDetectionsPerSecond;
   static tGetMotionDetector_MotionResetMs _GetMotionDetector_MotionResetMs;
   static tGetMotionDetector_ReduceCPULoad _GetMotionDetector_ReduceCPULoad;
   static tGetMotionDetector_ReduceVideoNoise _GetMotionDetector_ReduceVideoNoise;
   static tGetMotionDetector_Triggered _GetMotionDetector_Triggered;
   static tGetMouseWheelControlsZoomAtCursor _GetMouseWheelControlsZoomAtCursor;
   static tGetMouseWheelEventEnabled _GetMouseWheelEventEnabled;
   static tGetMpegStreamType _GetMpegStreamType;
   static tGetMultiplexedInputEmulation _GetMultiplexedInputEmulation;
   static tGetMultiplexedRole _GetMultiplexedRole;
   static tGetMultiplexedStabilizationDelay _GetMultiplexedStabilizationDelay;
   static tGetMultiplexedSwitchDelay _GetMultiplexedSwitchDelay;
   static tGetMultiplexer _GetMultiplexer;
   static tGetMultiplexerName _GetMultiplexerName;
   static tGetMultiplexers _GetMultiplexers;
   static tGetMultiplexersCount _GetMultiplexersCount;
   static tGetMultipurposeEncoderSettings _GetMultipurposeEncoderSettings;
   static tGetMuteAudioRendering _GetMuteAudioRendering;
   static tGetName _GetName;
   static tGetNDIBandwidthType _GetNDIBandwidthType;
   static tGetNDIGroups _GetNDIGroups;
   static tGetNDIName _GetNDIName;
   static tGetNDIReceiveTimeoutMs _GetNDIReceiveTimeoutMs;
   static tGetNDISessions _GetNDISessions;
   static tGetNearestVideoHeight _GetNearestVideoHeight;
   static tGetNearestVideoSize _GetNearestVideoSize;
   static tGetNearestVideoWidth _GetNearestVideoWidth;
   static tGetNetworkStreaming _GetNetworkStreaming;
   static tGetNetworkStreamingType _GetNetworkStreamingType;
   static tGetNormalCursor _GetNormalCursor;
   static tGetNotificationMethod _GetNotificationMethod;
   static tGetNotificationPriority _GetNotificationPriority;
   static tGetNotificationSleepTime _GetNotificationSleepTime;
   static tGetOnFrameBitmapEventSynchrone _GetOnFrameBitmapEventSynchrone;
   static tGetOpenURLAsync _GetOpenURLAsync;
   static tGetOverlayAfterTransform _GetOverlayAfterTransform;
   static tGetPixelsDistance _GetPixelsDistance;
   static tGetPlayerAudioRendering _GetPlayerAudioRendering;
   static tGetPlayerDuration _GetPlayerDuration;
   static tGetPlayerDVSize _GetPlayerDVSize;
   static tGetPlayerFastSeekSpeedRatio _GetPlayerFastSeekSpeedRatio;
   static tGetPlayerFileName _GetPlayerFileName;
   static tGetPlayerForcedCodec _GetPlayerForcedCodec;
   static tGetPlayerFrameCount _GetPlayerFrameCount;
   static tGetPlayerFramePosition _GetPlayerFramePosition;
   static tGetPlayerFrameRate _GetPlayerFrameRate;
   static tGetPlayerHwAccel _GetPlayerHwAccel;
   static tGetPlayerOpenProgressPercent _GetPlayerOpenProgressPercent;
   static tGetPlayerRefreshPausedDisplay _GetPlayerRefreshPausedDisplay;
   static tGetPlayerRefreshPausedDisplayFrameRate _GetPlayerRefreshPausedDisplayFrameRate;
   static tGetPlayerSpeedRatio _GetPlayerSpeedRatio;
   static tGetPlayerSpeedRatioConstantAudioPitch _GetPlayerSpeedRatioConstantAudioPitch;
   static tGetPlayerState _GetPlayerState;
   static tGetPlayerTimePosition _GetPlayerTimePosition;
   static tGetPlayerTrackBarSynchrone _GetPlayerTrackBarSynchrone;
   static tGetPlaylist _GetPlaylist;
   static tGetPlaylistIndex _GetPlaylistIndex;
   static tGetPreallocCapFileCopiedAfterRecording _GetPreallocCapFileCopiedAfterRecording;
   static tGetPreallocCapFileEnabled _GetPreallocCapFileEnabled;
   static tGetPreallocCapFileName _GetPreallocCapFileName;
   static tGetPreallocCapFileSizeInMB _GetPreallocCapFileSizeInMB;
   static tGetPreviewZoomSize _GetPreviewZoomSize;
   static tGetQuickDeviceInitialization _GetQuickDeviceInitialization;
   static tGetRawAudioSampleCapture _GetRawAudioSampleCapture;
   static tGetRawCaptureAsyncEvent _GetRawCaptureAsyncEvent;
   static tGetRawSampleCaptureLocation _GetRawSampleCaptureLocation;
   static tGetRawVideoSampleCapture _GetRawVideoSampleCapture;
   static tGetRecordingAudioBitRate _GetRecordingAudioBitRate;
   static tGetRecordingBacktimedFramesCount _GetRecordingBacktimedFramesCount;
   static tGetRecordingCanPause _GetRecordingCanPause;
   static tGetRecordingDuration _GetRecordingDuration;
   static tGetRecordingFileName _GetRecordingFileName;
   static tGetRecordingFileSizeMaxInMB _GetRecordingFileSizeMaxInMB;
   static tGetRecordingFourCC _GetRecordingFourCC;
   static tGetRecordingHeight _GetRecordingHeight;
   static tGetRecordingInNativeFormat _GetRecordingInNativeFormat;
   static tGetRecordingMethod _GetRecordingMethod;
   static tGetRecordingOnMotion_Enabled _GetRecordingOnMotion_Enabled;
   static tGetRecordingOnMotion_MotionThreshold _GetRecordingOnMotion_MotionThreshold;
   static tGetRecordingOnMotion_NoMotionPauseDelayMs _GetRecordingOnMotion_NoMotionPauseDelayMs;
   static tGetRecordingPauseCreatesNewFile _GetRecordingPauseCreatesNewFile;
   static tGetRecordingSize _GetRecordingSize;
   static tGetRecordingTimer _GetRecordingTimer;
   static tGetRecordingTimerInterval _GetRecordingTimerInterval;
   static tGetRecordingVideoBitRate _GetRecordingVideoBitRate;
   static tGetRecordingWidth _GetRecordingWidth;
   static tGetReencodingIncludeAudioStream _GetReencodingIncludeAudioStream;
   static tGetReencodingIncludeVideoStream _GetReencodingIncludeVideoStream;
   static tGetReencodingMethod _GetReencodingMethod;
   static tGetReencodingNewVideoClip _GetReencodingNewVideoClip;
   static tGetReencodingSourceVideoClip _GetReencodingSourceVideoClip;
   static tGetReencodingStartFrame _GetReencodingStartFrame;
   static tGetReencodingStartTime _GetReencodingStartTime;
   static tGetReencodingStopFrame _GetReencodingStopFrame;
   static tGetReencodingStopTime _GetReencodingStopTime;
   static tGetReencodingUseAudioCompressor _GetReencodingUseAudioCompressor;
   static tGetReencodingUseFrameGrabber _GetReencodingUseFrameGrabber;
   static tGetReencodingUseVideoCompressor _GetReencodingUseVideoCompressor;
   static tGetReencodingWMVOutput _GetReencodingWMVOutput;
   static tGetRGBPixelAt _GetRGBPixelAt;
   static tGetScreenRecordingLayeredWindows _GetScreenRecordingLayeredWindows;
   static tGetScreenRecordingMonitor _GetScreenRecordingMonitor;
   static tGetScreenRecordingNonVisibleWindows _GetScreenRecordingNonVisibleWindows;
   static tGetScreenRecordingSizePercent _GetScreenRecordingSizePercent;
   static tGetScreenRecordingThroughClipboard _GetScreenRecordingThroughClipboard;
   static tGetScreenRecordingWithCursor _GetScreenRecordingWithCursor;
   static tGetSendToDV_DeviceIndex _GetSendToDV_DeviceIndex;
   static tGetSpeakerBalance _GetSpeakerBalance;
   static tGetSpeakerControl _GetSpeakerControl;
   static tGetSpeakerVolume _GetSpeakerVolume;
   static tGetStoragePath _GetStoragePath;
   static tGetStoragePathMode _GetStoragePathMode;
   static tGetStoreDeviceSettingsInRegistry _GetStoreDeviceSettingsInRegistry;
   static tGetStreamingURL _GetStreamingURL;
   static tGetStreamInterface_Format _GetStreamInterface_Format;
   static tGetStreamInterface_FrameRate _GetStreamInterface_FrameRate;
   static tGetStreamInterface_IsRealTime _GetStreamInterface_IsRealTime;
   static tGetSyncCommands _GetSyncCommands;
   static tGetSynchronizationRole _GetSynchronizationRole;
   static tGetSynchronized _GetSynchronized;
   static tGetSyncPreview _GetSyncPreview;
   static tGetSystemTempPath _GetSystemTempPath;
   static tGetTextOverlay_Align _GetTextOverlay_Align;
   static tGetTextOverlay_AlphaBlend _GetTextOverlay_AlphaBlend;
   static tGetTextOverlay_AlphaBlendValue _GetTextOverlay_AlphaBlendValue;
   static tGetTextOverlay_BkColor _GetTextOverlay_BkColor;
   static tGetTextOverlay_Enabled _GetTextOverlay_Enabled;
   static tGetTextOverlay_Font _GetTextOverlay_Font;
   static tGetTextOverlay_FontColor _GetTextOverlay_FontColor;
   static tGetTextOverlay_FontSize _GetTextOverlay_FontSize;
   static tGetTextOverlay_GradientColor _GetTextOverlay_GradientColor;
   static tGetTextOverlay_GradientMode _GetTextOverlay_GradientMode;
   static tGetTextOverlay_HighResFont _GetTextOverlay_HighResFont;
   static tGetTextOverlay_Left _GetTextOverlay_Left;
   static tGetTextOverlay_Orientation _GetTextOverlay_Orientation;
   static tGetTextOverlay_Right _GetTextOverlay_Right;
   static tGetTextOverlay_Scrolling _GetTextOverlay_Scrolling;
   static tGetTextOverlay_ScrollingSpeed _GetTextOverlay_ScrollingSpeed;
   static tGetTextOverlay_Shadow _GetTextOverlay_Shadow;
   static tGetTextOverlay_ShadowColor _GetTextOverlay_ShadowColor;
   static tGetTextOverlay_ShadowDirection _GetTextOverlay_ShadowDirection;
   static tGetTextOverlay_String _GetTextOverlay_String;
   static tGetTextOverlay_TargetDisplay _GetTextOverlay_TargetDisplay;
   static tGetTextOverlay_Top _GetTextOverlay_Top;
   static tGetTextOverlay_Transparent _GetTextOverlay_Transparent;
   static tGetTextOverlay_VideoAlignment _GetTextOverlay_VideoAlignment;
   static tGetTextOverlayAlign _GetTextOverlayAlign;
   static tGetTextOverlayAlphaBlend _GetTextOverlayAlphaBlend;
   static tGetTextOverlayAlphaBlendValue _GetTextOverlayAlphaBlendValue;
   static tGetTextOverlayBkColor _GetTextOverlayBkColor;
   static tGetTextOverlayEnabled _GetTextOverlayEnabled;
   static tGetTextOverlayFont _GetTextOverlayFont;
   static tGetTextOverlayFontColor _GetTextOverlayFontColor;
   static tGetTextOverlayFontSize _GetTextOverlayFontSize;
   static tGetTextOverlayGradientColor _GetTextOverlayGradientColor;
   static tGetTextOverlayGradientMode _GetTextOverlayGradientMode;
   static tGetTextOverlayHighResFont _GetTextOverlayHighResFont;
   static tGetTextOverlayLeft _GetTextOverlayLeft;
   static tGetTextOverlayOrientation _GetTextOverlayOrientation;
   static tGetTextOverlayRight _GetTextOverlayRight;
   static tGetTextOverlayScrolling _GetTextOverlayScrolling;
   static tGetTextOverlayScrollingSpeed _GetTextOverlayScrollingSpeed;
   static tGetTextOverlaySelector _GetTextOverlaySelector;
   static tGetTextOverlayShadow _GetTextOverlayShadow;
   static tGetTextOverlayShadowColor _GetTextOverlayShadowColor;
   static tGetTextOverlayShadowDirection _GetTextOverlayShadowDirection;
   static tGetTextOverlayString _GetTextOverlayString;
   static tGetTextOverlayTargetDisplay _GetTextOverlayTargetDisplay;
   static tGetTextOverlayTop _GetTextOverlayTop;
   static tGetTextOverlayTransparent _GetTextOverlayTransparent;
   static tGetTextOverlayVideoAlignment _GetTextOverlayVideoAlignment;
   static tGetThirdPartyDeinterlacer _GetThirdPartyDeinterlacer;
   static tGetTimeCodeReaderAvailable _GetTimeCodeReaderAvailable;
   static tGetTranslatedCoordinates _GetTranslatedCoordinates;
   static tGetTranslateMouseCoordinates _GetTranslateMouseCoordinates;
   static tGetTunerFrequency _GetTunerFrequency;
   static tGetTunerMode _GetTunerMode;
   static tGetTVChannel _GetTVChannel;
   static tGetTVChannelInfo _GetTVChannelInfo;
   static tGetTVCountryCode _GetTVCountryCode;
   static tGetTVTunerInputType _GetTVTunerInputType;
   static tGetTVUseFrequencyOverrides _GetTVUseFrequencyOverrides;
   static tGetUniqueID _GetUniqueID;
   static tGetUseClock _GetUseClock;
   static tGetv360_AspectRatio _Getv360_AspectRatio;
   static tGetv360_Enabled _Getv360_Enabled;
   static tGetv360_MasterAngle _Getv360_MasterAngle;
   static tGetv360_MouseAction _Getv360_MouseAction;
   static tGetv360_MouseActionPercent _Getv360_MouseActionPercent;
   static tGetVCRHorizontalLocking _GetVCRHorizontalLocking;
   static tGetVersion _GetVersion;
   static tGetVideoCodec _GetVideoCodec;
   static tGetVideoCompression_DataRate _GetVideoCompression_DataRate;
   static tGetVideoCompression_KeyFrameRate _GetVideoCompression_KeyFrameRate;
   static tGetVideoCompression_PFramesPerKeyFrame _GetVideoCompression_PFramesPerKeyFrame;
   static tGetVideoCompression_Quality _GetVideoCompression_Quality;
   static tGetVideoCompression_WindowSize _GetVideoCompression_WindowSize;
   static tGetVideoCompressionSettings _GetVideoCompressionSettings;
   static tGetVideoCompressor _GetVideoCompressor;
   static tGetVideoCompressorName _GetVideoCompressorName;
   static tGetVideoCompressors _GetVideoCompressors;
   static tGetVideoCompressorsCount _GetVideoCompressorsCount;
   static tGetVideoControlMode _GetVideoControlMode;
   static tGetVideoControlSettings _GetVideoControlSettings;
   static tGetVideoCursor _GetVideoCursor;
   static tGetVideoDelay _GetVideoDelay;
   static tGetVideoDevice _GetVideoDevice;
   static tGetVideoDeviceName _GetVideoDeviceName;
   static tGetVideoDevices _GetVideoDevices;
   static tGetVideoDevicesCount _GetVideoDevicesCount;
   static tGetVideoDevicesId _GetVideoDevicesId;
   static tGetVideoDoubleBuffered _GetVideoDoubleBuffered;
   static tGetVideoFormat _GetVideoFormat;
   static tGetVideoFormats _GetVideoFormats;
   static tGetVideoFormatsCount _GetVideoFormatsCount;
   static tGetVideoFromImages_BitmapsSortedBy _GetVideoFromImages_BitmapsSortedBy;
   static tGetVideoFromImages_RepeatIndefinitely _GetVideoFromImages_RepeatIndefinitely;
   static tGetVideoFromImages_SourceDirectory _GetVideoFromImages_SourceDirectory;
   static tGetVideoFromImages_TemporaryFile _GetVideoFromImages_TemporaryFile;
   static tGetVideoHeight _GetVideoHeight;
   static tGetVideoHeight_PreferredAspectRatio _GetVideoHeight_PreferredAspectRatio;
   static tGetVideoHeightFromIndex _GetVideoHeightFromIndex;
   static tGetVideoInput _GetVideoInput;
   static tGetVideoInputs _GetVideoInputs;
   static tGetVideoInputsCount _GetVideoInputsCount;
   static tGetVideoProcessingBrightness _GetVideoProcessingBrightness;
   static tGetVideoProcessingContrast _GetVideoProcessingContrast;
   static tGetVideoProcessingDeinterlacing _GetVideoProcessingDeinterlacing;
   static tGetVideoProcessingGrayScale _GetVideoProcessingGrayScale;
   static tGetVideoProcessingHue _GetVideoProcessingHue;
   static tGetVideoProcessingInvertColors _GetVideoProcessingInvertColors;
   static tGetVideoProcessingLeftRight _GetVideoProcessingLeftRight;
   static tGetVideoProcessingPixellization _GetVideoProcessingPixellization;
   static tGetVideoProcessingRotation _GetVideoProcessingRotation;
   static tGetVideoProcessingRotationCustomAngle _GetVideoProcessingRotationCustomAngle;
   static tGetVideoProcessingSaturation _GetVideoProcessingSaturation;
   static tGetVideoProcessingTopDown _GetVideoProcessingTopDown;
   static tGetVideoQualitySettings _GetVideoQualitySettings;
   static tGetVideoRenderer _GetVideoRenderer;
   static tGetVideoRendererExternal _GetVideoRendererExternal;
   static tGetVideoRendererExternalIndex _GetVideoRendererExternalIndex;
   static tGetVideoRendererPriority _GetVideoRendererPriority;
   static tGetVideoSize _GetVideoSize;
   static tGetVideoSizeFromIndex _GetVideoSizeFromIndex;
   static tGetVideoSizes _GetVideoSizes;
   static tGetVideoSizesCount _GetVideoSizesCount;
   static tGetVideoSource _GetVideoSource;
   static tGetVideoSource_FileOrURL _GetVideoSource_FileOrURL;
   static tGetVideoSource_FileOrURL_StartTime _GetVideoSource_FileOrURL_StartTime;
   static tGetVideoSource_FileOrURL_StopTime _GetVideoSource_FileOrURL_StopTime;
   static tGetVideoSources _GetVideoSources;
   static tGetVideoSourcesCount _GetVideoSourcesCount;
   static tGetVideoStreamNumber _GetVideoStreamNumber;
   static tGetVideoSubtype _GetVideoSubtype;
   static tGetVideoSubtypes _GetVideoSubtypes;
   static tGetVideoSubtypesCount _GetVideoSubtypesCount;
   static tGetVideoVisibleWhenStopped _GetVideoVisibleWhenStopped;
   static tGetVideoWidth _GetVideoWidth;
   static tGetVideoWidth_PreferredAspectRatio _GetVideoWidth_PreferredAspectRatio;
   static tGetVideoWidthFromIndex _GetVideoWidthFromIndex;
   static tGetVirtualAudioStreamControl _GetVirtualAudioStreamControl;
   static tGetVirtualVideoStreamControl _GetVirtualVideoStreamControl;
   static tGetVMR9ImageAdjustmentBounds _GetVMR9ImageAdjustmentBounds;
   static tGetVuMeter _GetVuMeter;
   static tGetVuMeter_Enabled _GetVuMeter_Enabled;
   static tGetVUMeterSetting _GetVUMeterSetting;
   static tGetWebcamStillCaptureButton _GetWebcamStillCaptureButton;
   static tGetZoomCoeff _GetZoomCoeff;
   static tGetZoomXCenter _GetZoomXCenter;
   static tGetZoomYCenter _GetZoomYCenter;
   static tGraphState _GraphState;
   static tInitSyncMgr _InitSyncMgr;
   static tIsAudioDeviceASoundCard _IsAudioDeviceASoundCard;
   static tIsAudioDeviceConnected _IsAudioDeviceConnected;
   static tIsAudioRendererConnected _IsAudioRendererConnected;
   static tIsCameraControlSettingAvailable _IsCameraControlSettingAvailable;
   static tIsDialogAvailable _IsDialogAvailable;
   static tIsDirectX8OrHigherInstalled _IsDirectX8OrHigherInstalled;
   static tIsDVDevice _IsDVDevice;
   static tIsPlaylistActive _IsPlaylistActive;
   static tIsPreviewStarted _IsPreviewStarted;
   static tIsServerResponding _IsServerResponding;
   static tIsURLResponding _IsURLResponding;
   static tIsURLVideoStreamAvailable _IsURLVideoStreamAvailable;
   static tIsVideoControlModeAvailable _IsVideoControlModeAvailable;
   static tIsVideoDeviceConnected _IsVideoDeviceConnected;
   static tIsVideoQualitySettingAvailable _IsVideoQualitySettingAvailable;
   static tIsVideoSignalDetected _IsVideoSignalDetected;
   static tIsVMR9ImageAdjustmentAvailable _IsVMR9ImageAdjustmentAvailable;
   static tLoadCompressorSettingsFromDataString _LoadCompressorSettingsFromDataString;
   static tLoadCompressorSettingsFromTextFile _LoadCompressorSettingsFromTextFile;
   static tMixAudioSamples _MixAudioSamples;
   static tMixer_Activation _Mixer_Activation;
   static tMixer_AddAudioToMixer _Mixer_AddAudioToMixer;
   static tMixer_AddToMixer _Mixer_AddToMixer;
   static tMixer_AudioActivation _Mixer_AudioActivation;
   static tMixer_RemoveAudioFromMixer _Mixer_RemoveAudioFromMixer;
   static tMixer_RemoveFromMixer _Mixer_RemoveFromMixer;
   static tMixer_SetOverlayAttributes _Mixer_SetOverlayAttributes;
   static tMixer_SetupPIPFromSource _Mixer_SetupPIPFromSource;
   static tMonitor_Primary_Index _Monitor_Primary_Index;
   static tMonitorBounds _MonitorBounds;
   static tMonitorsCount _MonitorsCount;
   static tMotionDetector_CellColorIntensity _MotionDetector_CellColorIntensity;
   static tMotionDetector_CellMotionRatio _MotionDetector_CellMotionRatio;
   static tMotionDetector_Get2DTextGrid _MotionDetector_Get2DTextGrid;
   static tMotionDetector_Get2DTextMotion _MotionDetector_Get2DTextMotion;
   static tMotionDetector_GetCellLocation _MotionDetector_GetCellLocation;
   static tMotionDetector_GetCellSensitivity _MotionDetector_GetCellSensitivity;
   static tMotionDetector_GetCellSize _MotionDetector_GetCellSize;
   static tMotionDetector_GlobalColorIntensity _MotionDetector_GlobalColorIntensity;
   static tMotionDetector_GloballyIncOrDecSensitivity _MotionDetector_GloballyIncOrDecSensitivity;
   static tMotionDetector_Reset _MotionDetector_Reset;
   static tMotionDetector_ResetGlobalSensitivity _MotionDetector_ResetGlobalSensitivity;
   static tMotionDetector_SetCellSensitivity _MotionDetector_SetCellSensitivity;
   static tMotionDetector_SetGridSize _MotionDetector_SetGridSize;
   static tMotionDetector_ShowGridDialog _MotionDetector_ShowGridDialog;
   static tMotionDetector_TriggerNow _MotionDetector_TriggerNow;
   static tMotionDetector_UseThisReferenceSample _MotionDetector_UseThisReferenceSample;
   static tMPEGProgramSetting _MPEGProgramSetting;
   static tMultiplexerIndex _MultiplexerIndex;
   static tMultipurposeEncoder_Convert100nsToHhMmSsZzz _MultipurposeEncoder_Convert100nsToHhMmSsZzz;
   static tMultipurposeEncoder_GetCurrentInfo _MultipurposeEncoder_GetCurrentInfo;
   static tMultipurposeEncoder_GetLastLog _MultipurposeEncoder_GetLastLog;
   static tMultipurposeEncoder_QuickConfigure_UDPStreaming_H264 _MultipurposeEncoder_QuickConfigure_UDPStreaming_H264;
   static tMultipurposeEncoder_ReindexClip _MultipurposeEncoder_ReindexClip;
   static tNotifyPlayerTrackbarAction _NotifyPlayerTrackbarAction;
   static tONVIF_GetBool _ONVIF_GetBool;
   static tONVIF_GetDouble _ONVIF_GetDouble;
   static tONVIF_GetInt _ONVIF_GetInt;
   static tONVIF_GetStr _ONVIF_GetStr;
   static tONVIF_SetBool _ONVIF_SetBool;
   static tONVIF_SetDouble _ONVIF_SetDouble;
   static tONVIF_SetInt _ONVIF_SetInt;
   static tONVIF_SetStr _ONVIF_SetStr;
   static tONVIFDeviceInfo _ONVIFDeviceInfo;
   static tONVIFPTZGetLimits _ONVIFPTZGetLimits;
   static tONVIFPTZGetPosition _ONVIFPTZGetPosition;
   static tONVIFPTZPreset _ONVIFPTZPreset;
   static tONVIFPTZSendAuxiliaryCommand _ONVIFPTZSendAuxiliaryCommand;
   static tONVIFPTZSetPosition _ONVIFPTZSetPosition;
   static tONVIFPTZStartMove _ONVIFPTZStartMove;
   static tONVIFPTZStopMove _ONVIFPTZStopMove;
   static tONVIFSnapShot _ONVIFSnapShot;
   static tOpenDVD _OpenDVD;
   static tOpenPlayer _OpenPlayer;
   static tOpenPlayerAtFramePositions _OpenPlayerAtFramePositions;
   static tOpenPlayerAtTimePositions _OpenPlayerAtTimePositions;
   static tPausePlayer _PausePlayer;
   static tPausePreview _PausePreview;
   static tPauseRecording _PauseRecording;
   static tPlayerFrameStep _PlayerFrameStep;
   static tPlaylist _Playlist;
   static tPointGreyConfig _PointGreyConfig;
   static tPutMiscDeviceControl _PutMiscDeviceControl;
   static tRecordingKBytesWrittenToDisk _RecordingKBytesWrittenToDisk;
   static tRecordToNewFileNow _RecordToNewFileNow;
   static tReencodeVideoClip _ReencodeVideoClip;
   static tRefreshDevicesAndCompressorsLists _RefreshDevicesAndCompressorsLists;
   static tRefreshPlayerOverlays _RefreshPlayerOverlays;
   static tResetPreview _ResetPreview;
   static tResetVideoDeviceSettings _ResetVideoDeviceSettings;
   static tResumePreview _ResumePreview;
   static tResumeRecording _ResumeRecording;
   static tRetrieveInitialXYAfterRotation _RetrieveInitialXYAfterRotation;
   static tRewindPlayer _RewindPlayer;
   static tRunPlayer _RunPlayer;
   static tRunPlayerBackwards _RunPlayerBackwards;
   static tSaveCompressorSettingsToDataString _SaveCompressorSettingsToDataString;
   static tSaveCompressorSettingsToTextFile _SaveCompressorSettingsToTextFile;
   static tScheduleNextActionAtAbsoluteDateTime _ScheduleNextActionAtAbsoluteDateTime;
   static tScheduleNextActionAtAbsoluteTime _ScheduleNextActionAtAbsoluteTime;
   static tScheduleNextActionFromNow _ScheduleNextActionFromNow;
   static tScreenRecordingUsingCoordinates _ScreenRecordingUsingCoordinates;
   static tSendCameraCommand _SendCameraCommand;
   static tSendDVCommand _SendDVCommand;
   static tSendImageToVideoFromBitmaps _SendImageToVideoFromBitmaps;
   static tSendImageToVideoFromBitmaps2 _SendImageToVideoFromBitmaps2;
   static tSendIPCameraCommand _SendIPCameraCommand;
   static tSet_OnDeviceArrivalOrRemoval _Set_OnDeviceArrivalOrRemoval;
   static tSetAdjustOverlayAspectRatio _SetAdjustOverlayAspectRatio;
   static tSetAdjustPixelAspectRatio _SetAdjustPixelAspectRatio;
   static tSetAero _SetAero;
   static tSetAnalogVideoStandard _SetAnalogVideoStandard;
   static tSetApplicationPriority _SetApplicationPriority;
   static tSetASFAudioBitRate _SetASFAudioBitRate;
   static tSetASFAudioChannels _SetASFAudioChannels;
   static tSetASFBufferWindow _SetASFBufferWindow;
   static tSetASFDeinterlaceMode _SetASFDeinterlaceMode;
   static tSetASFDirectStreamingKeepClientsConnected _SetASFDirectStreamingKeepClientsConnected;
   static tSetASFFixedFrameRate _SetASFFixedFrameRate;
   static tSetASFMediaServerPublishingPoint _SetASFMediaServerPublishingPoint;
   static tSetASFMediaServerRemovePublishingPointAfterDisconnect _SetASFMediaServerRemovePublishingPointAfterDisconnect;
   static tSetASFMediaServerTemplatePublishingPoint _SetASFMediaServerTemplatePublishingPoint;
   static tSetASFNetworkMaxUsers _SetASFNetworkMaxUsers;
   static tSetASFNetworkPort _SetASFNetworkPort;
   static tSetASFProfile _SetASFProfile;
   static tSetASFProfileFromCustomFile _SetASFProfileFromCustomFile;
   static tSetASFProfileVersion _SetASFProfileVersion;
   static tSetASFVideoBitRate _SetASFVideoBitRate;
   static tSetASFVideoFrameRate _SetASFVideoFrameRate;
   static tSetASFVideoHeight _SetASFVideoHeight;
   static tSetASFVideoMaxKeyFrameSpacing _SetASFVideoMaxKeyFrameSpacing;
   static tSetASFVideoQuality _SetASFVideoQuality;
   static tSetASFVideoWidth _SetASFVideoWidth;
   static tSetAspectRatioToUse _SetAspectRatioToUse;
   static tSetAssociateAudioAndVideoDevices _SetAssociateAudioAndVideoDevices;
   static tSetAudioBalance _SetAudioBalance;
   static tSetAudioChannelRenderMode _SetAudioChannelRenderMode;
   static tSetAudioCompressor _SetAudioCompressor;
   static tSetAudioDevice _SetAudioDevice;
   static tSetAudioDeviceRendering _SetAudioDeviceRendering;
   static tSetAudioFormat _SetAudioFormat;
   static tSetAudioInput _SetAudioInput;
   static tSetAudioInputBalance _SetAudioInputBalance;
   static tSetAudioInputLevel _SetAudioInputLevel;
   static tSetAudioInputMono _SetAudioInputMono;
   static tSetAudioPeakEvent _SetAudioPeakEvent;
   static tSetAudioRecording _SetAudioRecording;
   static tSetAudioRenderer _SetAudioRenderer;
   static tSetAudioRendererAdditional _SetAudioRendererAdditional;
   static tSetAudioSource _SetAudioSource;
   static tSetAudioStreamNumber _SetAudioStreamNumber;
   static tSetAudioSyncAdjustment _SetAudioSyncAdjustment;
   static tSetAudioSyncAdjustmentEnabled _SetAudioSyncAdjustmentEnabled;
   static tSetAudioVolume _SetAudioVolume;
   static tSetAuthentication _SetAuthentication;
   static tSetAutoConnectRelatedPins _SetAutoConnectRelatedPins;
   static tSetAutoFileName _SetAutoFileName;
   static tSetAutoFileNameDateTimeFormat _SetAutoFileNameDateTimeFormat;
   static tSetAutoFileNameMinDigits _SetAutoFileNameMinDigits;
   static tSetAutoFilePrefix _SetAutoFilePrefix;
   static tSetAutoFileSuffix _SetAutoFileSuffix;
   static tSetAutoRefreshPreview _SetAutoRefreshPreview;
   static tSetAutoStartPlayer _SetAutoStartPlayer;
   static tSetAVIDurationUpdated _SetAVIDurationUpdated;
   static tSetAVIFormatOpenDML _SetAVIFormatOpenDML;
   static tSetAVIFormatOpenDMLCompatibilityIndex _SetAVIFormatOpenDMLCompatibilityIndex;
   static tSetAVIMuxConfig _SetAVIMuxConfig;
   static tSetBackgroundColor _SetBackgroundColor;
   static tSetBufferCount _SetBufferCount;
   static tSetBurstCount _SetBurstCount;
   static tSetBurstInterval _SetBurstInterval;
   static tSetBurstMode _SetBurstMode;
   static tSetBurstType _SetBurstType;
   static tSetBusyCursor _SetBusyCursor;
   static tSetCallbackSender _SetCallbackSender;
   static tSetCameraControl _SetCameraControl;
   static tSetCameraControlSettings _SetCameraControlSettings;
   static tSetCameraExposure _SetCameraExposure;
   static tSetCaptureFileExt _SetCaptureFileExt;
   static tSetColorKey _SetColorKey;
   static tSetColorKeyEnabled _SetColorKeyEnabled;
   static tSetCompressionMode _SetCompressionMode;
   static tSetCompressionType _SetCompressionType;
   static tSetCropping_Enabled _SetCropping_Enabled;
   static tSetCropping_Height _SetCropping_Height;
   static tSetCropping_Outbounds _SetCropping_Outbounds;
   static tSetCropping_Width _SetCropping_Width;
   static tSetCropping_X _SetCropping_X;
   static tSetCropping_Y _SetCropping_Y;
   static tSetCropping_Zoom _SetCropping_Zoom;
   static tSetDisplayActive _SetDisplayActive;
   static tSetDisplayAlphaBlendEnabled _SetDisplayAlphaBlendEnabled;
   static tSetDisplayAlphaBlendValue _SetDisplayAlphaBlendValue;
   static tSetDisplayAspectRatio _SetDisplayAspectRatio;
   static tSetDisplayAssociatedRenderer _SetDisplayAssociatedRenderer;
   static tSetDisplayAutoSize _SetDisplayAutoSize;
   static tSetDisplayEmbedded _SetDisplayEmbedded;
   static tSetDisplayEmbedded_FitParent _SetDisplayEmbedded_FitParent;
   static tSetDisplayFullScreen _SetDisplayFullScreen;
   static tSetDisplayHeight _SetDisplayHeight;
   static tSetDisplayLeft _SetDisplayLeft;
   static tSetDisplayLocation _SetDisplayLocation;
   static tSetDisplayMonitor _SetDisplayMonitor;
   static tSetDisplayMouseMovesWindow _SetDisplayMouseMovesWindow;
   static tSetDisplayPanScanRatio _SetDisplayPanScanRatio;
   static tSetDisplayParent _SetDisplayParent;
   static tSetDisplayStayOnTop _SetDisplayStayOnTop;
   static tSetDisplayTop _SetDisplayTop;
   static tSetDisplayTransparentColorEnabled _SetDisplayTransparentColorEnabled;
   static tSetDisplayTransparentColorValue _SetDisplayTransparentColorValue;
   static tSetDisplayVideoPortEnabled _SetDisplayVideoPortEnabled;
   static tSetDisplayVisible _SetDisplayVisible;
   static tSetDisplayWidth _SetDisplayWidth;
   static tSetDroppedFramesPollingInterval _SetDroppedFramesPollingInterval;
   static tSetDVDateTimeEnabled _SetDVDateTimeEnabled;
   static tSetDVDiscontinuityMinimumInterval _SetDVDiscontinuityMinimumInterval;
   static tSetDVDTitle _SetDVDTitle;
   static tSetDVEncoder_VideoFormat _SetDVEncoder_VideoFormat;
   static tSetDVEncoder_VideoResolution _SetDVEncoder_VideoResolution;
   static tSetDVEncoder_VideoStandard _SetDVEncoder_VideoStandard;
   static tSetDVRecordingInNativeFormatSeparatesStreams _SetDVRecordingInNativeFormatSeparatesStreams;
   static tSetDVReduceFrameRate _SetDVReduceFrameRate;
   static tSetDVRgb219 _SetDVRgb219;
   static tSetDVTimeCodeEnabled _SetDVTimeCodeEnabled;
   static tSetEventNotificationSynchrone _SetEventNotificationSynchrone;
   static tSetExtraDLLPath _SetExtraDLLPath;
   static tSetFixFlickerOrBlackCapture _SetFixFlickerOrBlackCapture;
   static tSetFrameCaptureBounds _SetFrameCaptureBounds;
   static tSetFrameCaptureHeight _SetFrameCaptureHeight;
   static tSetFrameCaptureWidth _SetFrameCaptureWidth;
   static tSetFrameCaptureWithoutOverlay _SetFrameCaptureWithoutOverlay;
   static tSetFrameCaptureZoomSize _SetFrameCaptureZoomSize;
   static tSetFrameGrabber _SetFrameGrabber;
   static tSetFrameGrabberRGBFormat _SetFrameGrabberRGBFormat;
   static tSetFrameNumberStartsFromZero _SetFrameNumberStartsFromZero;
   static tSetFrameRate _SetFrameRate;
   static tSetFrameRateDivider _SetFrameRateDivider;
   static tSetFWCam1394 _SetFWCam1394;
   static tSetGetLastFrameWaitTimeoutMs _SetGetLastFrameWaitTimeoutMs;
   static tSetHeaderAttribute _SetHeaderAttribute;
   static tSetHoldRecording _SetHoldRecording;
   static tSetImageOverlay_AlphaBlend _SetImageOverlay_AlphaBlend;
   static tSetImageOverlay_AlphaBlendValue _SetImageOverlay_AlphaBlendValue;
   static tSetImageOverlay_Attributes _SetImageOverlay_Attributes;
   static tSetImageOverlay_Attributes2 _SetImageOverlay_Attributes2;
   static tSetImageOverlay_ChromaKey _SetImageOverlay_ChromaKey;
   static tSetImageOverlay_ChromaKeyLeewayPercent _SetImageOverlay_ChromaKeyLeewayPercent;
   static tSetImageOverlay_ChromaKeyRGBColor _SetImageOverlay_ChromaKeyRGBColor;
   static tSetImageOverlay_Enabled _SetImageOverlay_Enabled;
   static tSetImageOverlay_Height _SetImageOverlay_Height;
   static tSetImageOverlay_LeftLocation _SetImageOverlay_LeftLocation;
   static tSetImageOverlay_RotationAngle _SetImageOverlay_RotationAngle;
   static tSetImageOverlay_StretchToVideoSize _SetImageOverlay_StretchToVideoSize;
   static tSetImageOverlay_TargetDisplay _SetImageOverlay_TargetDisplay;
   static tSetImageOverlay_TopLocation _SetImageOverlay_TopLocation;
   static tSetImageOverlay_Transparent _SetImageOverlay_Transparent;
   static tSetImageOverlay_TransparentColorValue _SetImageOverlay_TransparentColorValue;
   static tSetImageOverlay_UseTransparentColor _SetImageOverlay_UseTransparentColor;
   static tSetImageOverlay_VideoAlignment _SetImageOverlay_VideoAlignment;
   static tSetImageOverlay_Width _SetImageOverlay_Width;
   static tSetImageOverlayAlphaBlend _SetImageOverlayAlphaBlend;
   static tSetImageOverlayAlphaBlendValue _SetImageOverlayAlphaBlendValue;
   static tSetImageOverlayChromaKey _SetImageOverlayChromaKey;
   static tSetImageOverlayChromaKeyLeewayPercent _SetImageOverlayChromaKeyLeewayPercent;
   static tSetImageOverlayChromaKeyRGBColor _SetImageOverlayChromaKeyRGBColor;
   static tSetImageOverlayEnabled _SetImageOverlayEnabled;
   static tSetImageOverlayFromBMPFile _SetImageOverlayFromBMPFile;
   static tSetImageOverlayFromBMPFile2 _SetImageOverlayFromBMPFile2;
   static tSetImageOverlayFromHBitmap _SetImageOverlayFromHBitmap;
   static tSetImageOverlayFromHBitmap2 _SetImageOverlayFromHBitmap2;
   static tSetImageOverlayFromHBitmap3 _SetImageOverlayFromHBitmap3;
   static tSetImageOverlayFromImageFile _SetImageOverlayFromImageFile;
   static tSetImageOverlayFromImageFile2 _SetImageOverlayFromImageFile2;
   static tSetImageOverlayFromJPEGFile _SetImageOverlayFromJPEGFile;
   static tSetImageOverlayFromJPEGFile2 _SetImageOverlayFromJPEGFile2;
   static tSetImageOverlayHeight _SetImageOverlayHeight;
   static tSetImageOverlayLeftLocation _SetImageOverlayLeftLocation;
   static tSetImageOverlayRotationAngle _SetImageOverlayRotationAngle;
   static tSetImageOverlaySelector _SetImageOverlaySelector;
   static tSetImageOverlayStretchToVideoSize _SetImageOverlayStretchToVideoSize;
   static tSetImageOverlayTargetDisplay _SetImageOverlayTargetDisplay;
   static tSetImageOverlayTopLocation _SetImageOverlayTopLocation;
   static tSetImageOverlayTransparent _SetImageOverlayTransparent;
   static tSetImageOverlayTransparentColorValue _SetImageOverlayTransparentColorValue;
   static tSetImageOverlayUseTransparentColor _SetImageOverlayUseTransparentColor;
   static tSetImageOverlayVideoAlignment _SetImageOverlayVideoAlignment;
   static tSetImageOverlayWidth _SetImageOverlayWidth;
   static tSetIPCameraSetting _SetIPCameraSetting;
   static tSetIPCameraURL _SetIPCameraURL;
   static tSetJPEGPerformance _SetJPEGPerformance;
   static tSetJPEGProgressiveDisplay _SetJPEGProgressiveDisplay;
   static tSetJPEGQuality _SetJPEGQuality;
   static tSetLicenseString _SetLicenseString;
   static tSetLocation _SetLocation;
   static tSetLogoDisplayed _SetLogoDisplayed;
   static tSetLogoFromBMPFile _SetLogoFromBMPFile;
   static tSetLogoFromHBitmap _SetLogoFromHBitmap;
   static tSetLogoFromJPEGFile _SetLogoFromJPEGFile;
   static tSetLogoLayout _SetLogoLayout;
   static tSetMixAudioSamplesLevel _SetMixAudioSamplesLevel;
   static tSetMixer_MosaicColumns _SetMixer_MosaicColumns;
   static tSetMixer_MosaicLines _SetMixer_MosaicLines;
   static tSetMotionDetector_CompareBlue _SetMotionDetector_CompareBlue;
   static tSetMotionDetector_CompareGreen _SetMotionDetector_CompareGreen;
   static tSetMotionDetector_CompareRed _SetMotionDetector_CompareRed;
   static tSetMotionDetector_Enabled _SetMotionDetector_Enabled;
   static tSetMotionDetector_GreyScale _SetMotionDetector_GreyScale;
   static tSetMotionDetector_Grid _SetMotionDetector_Grid;
   static tSetMotionDetector_MaxDetectionsPerSecond _SetMotionDetector_MaxDetectionsPerSecond;
   static tSetMotionDetector_MotionResetMs _SetMotionDetector_MotionResetMs;
   static tSetMotionDetector_ReduceCPULoad _SetMotionDetector_ReduceCPULoad;
   static tSetMotionDetector_ReduceVideoNoise _SetMotionDetector_ReduceVideoNoise;
   static tSetMotionDetector_Triggered _SetMotionDetector_Triggered;
   static tSetMouseWheelControlsZoomAtCursor _SetMouseWheelControlsZoomAtCursor;
   static tSetMouseWheelEventEnabled _SetMouseWheelEventEnabled;
   static tSetMpegStreamType _SetMpegStreamType;
   static tSetMultiplexedInputEmulation _SetMultiplexedInputEmulation;
   static tSetMultiplexedRole _SetMultiplexedRole;
   static tSetMultiplexedStabilizationDelay _SetMultiplexedStabilizationDelay;
   static tSetMultiplexedSwitchDelay _SetMultiplexedSwitchDelay;
   static tSetMultiplexer _SetMultiplexer;
   static tSetMultiplexerFilterByName _SetMultiplexerFilterByName;
   static tSetMultipurposeEncoderSettings _SetMultipurposeEncoderSettings;
   static tSetMuteAudioRendering _SetMuteAudioRendering;
   static tSetName _SetName;
   static tSetNDIBandwidthType _SetNDIBandwidthType;
   static tSetNDIGroups _SetNDIGroups;
   static tSetNDIName _SetNDIName;
   static tSetNDIReceiveTimeoutMs _SetNDIReceiveTimeoutMs;
   static tSetNetworkStreaming _SetNetworkStreaming;
   static tSetNetworkStreamingType _SetNetworkStreamingType;
   static tSetNormalCursor _SetNormalCursor;
   static tSetNotificationMethod _SetNotificationMethod;
   static tSetNotificationPriority _SetNotificationPriority;
   static tSetNotificationSleepTime _SetNotificationSleepTime;
   static tSetOnAudioBufferNegotiation _SetOnAudioBufferNegotiation;
   static tSetOnAudioDeviceSelected _SetOnAudioDeviceSelected;
   static tSetOnAudioPeak _SetOnAudioPeak;
   static tSetOnAuthenticationNeeded _SetOnAuthenticationNeeded;
   static tSetOnAVIDurationUpdated _SetOnAVIDurationUpdated;
   static tSetOnBacktimedFramesCountReached _SetOnBacktimedFramesCountReached;
   static tSetOnBitmapsLoadingProgress _SetOnBitmapsLoadingProgress;
   static tSetOnClick _SetOnClick;
   static tSetOnClientConnection _SetOnClientConnection;
   static tSetOnColorKeyChange _SetOnColorKeyChange;
   static tSetOnCopyPreallocDataCompleted _SetOnCopyPreallocDataCompleted;
   static tSetOnCopyPreallocDataProgress _SetOnCopyPreallocDataProgress;
   static tSetOnCopyPreallocDataStarted _SetOnCopyPreallocDataStarted;
   static tSetOnCreatePreallocFileCompleted _SetOnCreatePreallocFileCompleted;
   static tSetOnCreatePreallocFileProgress _SetOnCreatePreallocFileProgress;
   static tSetOnCreatePreallocFileStarted _SetOnCreatePreallocFileStarted;
   static tSetOnDblClick _SetOnDblClick;
   static tSetOnDeviceArrivalOrRemoval _SetOnDeviceArrivalOrRemoval;
   static tSetOnDeviceLost _SetOnDeviceLost;
   static tSetOnDeviceReconnected _SetOnDeviceReconnected;
   static tSetOnDeviceReconnecting _SetOnDeviceReconnecting;
   static tSetOnDirectNetworkStreamingHostUrl _SetOnDirectNetworkStreamingHostUrl;
   static tSetOnDiskFull _SetOnDiskFull;
   static tSetOnDoEvents _SetOnDoEvents;
   static tSetOnDragDrop _SetOnDragDrop;
   static tSetOnDragDropFiles _SetOnDragDropFiles;
   static tSetOnDragOver _SetOnDragOver;
   static tSetOnDVCommandCompleted _SetOnDVCommandCompleted;
   static tSetOnDVDiscontinuity _SetOnDVDiscontinuity;
   static tSetOnEnumerateWindows _SetOnEnumerateWindows;
   static tSetOnFilterSelected _SetOnFilterSelected;
   static tSetOnFirstFrameReceived _SetOnFirstFrameReceived;
   static tSetOnFrameBitmap _SetOnFrameBitmap;
   static tSetOnFrameBitmapEventSynchrone _SetOnFrameBitmapEventSynchrone;
   static tSetOnFrameCaptureCompleted _SetOnFrameCaptureCompleted;
   static tSetOnFrameOverlayUsingDC _SetOnFrameOverlayUsingDC;
   static tSetOnFrameOverlayUsingDIB _SetOnFrameOverlayUsingDIB;
   static tSetOnFrameProgress _SetOnFrameProgress;
   static tSetOnFrameProgress2 _SetOnFrameProgress2;
   static tSetOnGraphBuilt _SetOnGraphBuilt;
   static tSetOnInactive _SetOnInactive;
   static tSetOnKeyPress _SetOnKeyPress;
   static tSetOnLastCommandCompleted _SetOnLastCommandCompleted;
   static tSetOnLeavingFullScreen _SetOnLeavingFullScreen;
   static tSetOnLog _SetOnLog;
   static tSetOnMotionDetected _SetOnMotionDetected;
   static tSetOnMotionNotDetected _SetOnMotionNotDetected;
   static tSetOnMouseDown _SetOnMouseDown;
   static tSetOnMouseDown_Video _SetOnMouseDown_Video;
   static tSetOnMouseDown_Window _SetOnMouseDown_Window;
   static tSetOnMouseEnter _SetOnMouseEnter;
   static tSetOnMouseLeave _SetOnMouseLeave;
   static tSetOnMouseMove _SetOnMouseMove;
   static tSetOnMouseMove_Video _SetOnMouseMove_Video;
   static tSetOnMouseMove_Window _SetOnMouseMove_Window;
   static tSetOnMouseUp _SetOnMouseUp;
   static tSetOnMouseUp_Video _SetOnMouseUp_Video;
   static tSetOnMouseUp_Window _SetOnMouseUp_Window;
   static tSetOnMouseWheel _SetOnMouseWheel;
   static tSetOnMultipurposeEncoderCompleted _SetOnMultipurposeEncoderCompleted;
   static tSetOnMultipurposeEncoderError _SetOnMultipurposeEncoderError;
   static tSetOnMultipurposeEncoderProgress _SetOnMultipurposeEncoderProgress;
   static tSetOnNoVideoDevices _SetOnNoVideoDevices;
   static tSetOnNTPTimeStamp _SetOnNTPTimeStamp;
   static tSetOnPlayerBufferingData _SetOnPlayerBufferingData;
   static tSetOnPlayerDurationUpdated _SetOnPlayerDurationUpdated;
   static tSetOnPlayerEndOfPlaylist _SetOnPlayerEndOfPlaylist;
   static tSetOnPlayerEndOfStream _SetOnPlayerEndOfStream;
   static tSetOnPlayerOpened _SetOnPlayerOpened;
   static tSetOnPlayerStateChanged _SetOnPlayerStateChanged;
   static tSetOnPlayerUpdateTrackbarPosition _SetOnPlayerUpdateTrackbarPosition;
   static tSetOnPreviewStarted _SetOnPreviewStarted;
   static tSetOnRawAudioSample _SetOnRawAudioSample;
   static tSetOnRawVideoSample _SetOnRawVideoSample;
   static tSetOnRecordingCompleted _SetOnRecordingCompleted;
   static tSetOnRecordingPaused _SetOnRecordingPaused;
   static tSetOnRecordingReadyToStart _SetOnRecordingReadyToStart;
   static tSetOnRecordingStarted _SetOnRecordingStarted;
   static tSetOnReencodingCompleted _SetOnReencodingCompleted;
   static tSetOnReencodingProgress _SetOnReencodingProgress;
   static tSetOnReencodingStarted _SetOnReencodingStarted;
   static tSetOnReinitializing _SetOnReinitializing;
   static tSetOnResizeVideo _SetOnResizeVideo;
   static tSetOnStoppingGraph _SetOnStoppingGraph;
   static tSetOnStoppingGraphCompleted _SetOnStoppingGraphCompleted;
   static tSetOnTextOverlayScrollingCompleted _SetOnTextOverlayScrollingCompleted;
   static tSetOnThirdPartyFilterAdded _SetOnThirdPartyFilterAdded;
   static tSetOnThirdPartyFilterConnected _SetOnThirdPartyFilterConnected;
   static tSetOnThirdPartyFilterConnected2 _SetOnThirdPartyFilterConnected2;
   static tSetOnThreadSync _SetOnThreadSync;
   static tSetOnTVChannelScanCompleted _SetOnTVChannelScanCompleted;
   static tSetOnTVChannelScanStarted _SetOnTVChannelScanStarted;
   static tSetOnTVChannelSelected _SetOnTVChannelSelected;
   static tSetOnVideoCompressionSettings _SetOnVideoCompressionSettings;
   static tSetOnVideoDeviceSelected _SetOnVideoDeviceSelected;
   static tSetOnVideoFromBitmapsNextFrameNeeded _SetOnVideoFromBitmapsNextFrameNeeded;
   static tSetOpenURLAsync _SetOpenURLAsync;
   static tSetOverlayAfterTransform _SetOverlayAfterTransform;
   static tSetParentWindow _SetParentWindow;
   static tSetPlayerAudioRendering _SetPlayerAudioRendering;
   static tSetPlayerDuration _SetPlayerDuration;
   static tSetPlayerDVSize _SetPlayerDVSize;
   static tSetPlayerFastSeekSpeedRatio _SetPlayerFastSeekSpeedRatio;
   static tSetPlayerFileName _SetPlayerFileName;
   static tSetPlayerForcedCodec _SetPlayerForcedCodec;
   static tSetPlayerFramePosition _SetPlayerFramePosition;
   static tSetPlayerHwAccel _SetPlayerHwAccel;
   static tSetPlayerRefreshPausedDisplay _SetPlayerRefreshPausedDisplay;
   static tSetPlayerRefreshPausedDisplayFrameRate _SetPlayerRefreshPausedDisplayFrameRate;
   static tSetPlayerSpeedRatio _SetPlayerSpeedRatio;
   static tSetPlayerSpeedRatioConstantAudioPitch _SetPlayerSpeedRatioConstantAudioPitch;
   static tSetPlayerTimePosition _SetPlayerTimePosition;
   static tSetPlayerTrackBarSynchrone _SetPlayerTrackBarSynchrone;
   static tSetPlaylistIndex _SetPlaylistIndex;
   static tSetPreallocCapFileCopiedAfterRecording _SetPreallocCapFileCopiedAfterRecording;
   static tSetPreallocCapFileEnabled _SetPreallocCapFileEnabled;
   static tSetPreallocCapFileName _SetPreallocCapFileName;
   static tSetPreallocCapFileSizeInMB _SetPreallocCapFileSizeInMB;
   static tSetPreviewZoomSize _SetPreviewZoomSize;
   static tSetQuickDeviceInitialization _SetQuickDeviceInitialization;
   static tSetRawAudioSampleCapture _SetRawAudioSampleCapture;
   static tSetRawCaptureAsyncEvent _SetRawCaptureAsyncEvent;
   static tSetRawSampleCaptureLocation _SetRawSampleCaptureLocation;
   static tSetRawVideoSampleCapture _SetRawVideoSampleCapture;
   static tSetRecordingAudioBitRate _SetRecordingAudioBitRate;
   static tSetRecordingBacktimedFramesCount _SetRecordingBacktimedFramesCount;
   static tSetRecordingCanPause _SetRecordingCanPause;
   static tSetRecordingFileName _SetRecordingFileName;
   static tSetRecordingFileSizeMaxInMB _SetRecordingFileSizeMaxInMB;
   static tSetRecordingInNativeFormat _SetRecordingInNativeFormat;
   static tSetRecordingMethod _SetRecordingMethod;
   static tSetRecordingOnMotion_Enabled _SetRecordingOnMotion_Enabled;
   static tSetRecordingOnMotion_MotionThreshold _SetRecordingOnMotion_MotionThreshold;
   static tSetRecordingOnMotion_NoMotionPauseDelayMs _SetRecordingOnMotion_NoMotionPauseDelayMs;
   static tSetRecordingPauseCreatesNewFile _SetRecordingPauseCreatesNewFile;
   static tSetRecordingSize _SetRecordingSize;
   static tSetRecordingTimer _SetRecordingTimer;
   static tSetRecordingTimerInterval _SetRecordingTimerInterval;
   static tSetRecordingVideoBitRate _SetRecordingVideoBitRate;
   static tSetReencodingIncludeAudioStream _SetReencodingIncludeAudioStream;
   static tSetReencodingIncludeVideoStream _SetReencodingIncludeVideoStream;
   static tSetReencodingMethod _SetReencodingMethod;
   static tSetReencodingNewVideoClip _SetReencodingNewVideoClip;
   static tSetReencodingSourceVideoClip _SetReencodingSourceVideoClip;
   static tSetReencodingStartFrame _SetReencodingStartFrame;
   static tSetReencodingStartTime _SetReencodingStartTime;
   static tSetReencodingStopFrame _SetReencodingStopFrame;
   static tSetReencodingStopTime _SetReencodingStopTime;
   static tSetReencodingUseAudioCompressor _SetReencodingUseAudioCompressor;
   static tSetReencodingUseFrameGrabber _SetReencodingUseFrameGrabber;
   static tSetReencodingUseVideoCompressor _SetReencodingUseVideoCompressor;
   static tSetReencodingWMVOutput _SetReencodingWMVOutput;
   static tSetScreenRecordingLayeredWindows _SetScreenRecordingLayeredWindows;
   static tSetScreenRecordingMonitor _SetScreenRecordingMonitor;
   static tSetScreenRecordingNonVisibleWindows _SetScreenRecordingNonVisibleWindows;
   static tSetScreenRecordingSizePercent _SetScreenRecordingSizePercent;
   static tSetScreenRecordingThroughClipboard _SetScreenRecordingThroughClipboard;
   static tSetScreenRecordingWithCursor _SetScreenRecordingWithCursor;
   static tSetSendToDV_DeviceIndex _SetSendToDV_DeviceIndex;
   static tSetSpeakerBalance _SetSpeakerBalance;
   static tSetSpeakerControl _SetSpeakerControl;
   static tSetSpeakerVolume _SetSpeakerVolume;
   static tSetStoragePath _SetStoragePath;
   static tSetStoragePathMode _SetStoragePathMode;
   static tSetStoreDeviceSettingsInRegistry _SetStoreDeviceSettingsInRegistry;
   static tSetStreamInterface_Format _SetStreamInterface_Format;
   static tSetStreamInterface_FrameRate _SetStreamInterface_FrameRate;
   static tSetStreamInterface_IsRealTime _SetStreamInterface_IsRealTime;
   static tSetSyncCommands _SetSyncCommands;
   static tSetSynchronizationRole _SetSynchronizationRole;
   static tSetSynchronized _SetSynchronized;
   static tSetSyncPreview _SetSyncPreview;
   static tSetTextOverlay_Align _SetTextOverlay_Align;
   static tSetTextOverlay_AlphaBlend _SetTextOverlay_AlphaBlend;
   static tSetTextOverlay_AlphaBlendValue _SetTextOverlay_AlphaBlendValue;
   static tSetTextOverlay_BkColor _SetTextOverlay_BkColor;
   static tSetTextOverlay_CustomVar _SetTextOverlay_CustomVar;
   static tSetTextOverlay_Enabled _SetTextOverlay_Enabled;
   static tSetTextOverlay_Font _SetTextOverlay_Font;
   static tSetTextOverlay_FontColor _SetTextOverlay_FontColor;
   static tSetTextOverlay_FontSize _SetTextOverlay_FontSize;
   static tSetTextOverlay_GradientColor _SetTextOverlay_GradientColor;
   static tSetTextOverlay_GradientMode _SetTextOverlay_GradientMode;
   static tSetTextOverlay_HighResFont _SetTextOverlay_HighResFont;
   static tSetTextOverlay_Left _SetTextOverlay_Left;
   static tSetTextOverlay_Orientation _SetTextOverlay_Orientation;
   static tSetTextOverlay_Right _SetTextOverlay_Right;
   static tSetTextOverlay_Scrolling _SetTextOverlay_Scrolling;
   static tSetTextOverlay_ScrollingSpeed _SetTextOverlay_ScrollingSpeed;
   static tSetTextOverlay_Shadow _SetTextOverlay_Shadow;
   static tSetTextOverlay_ShadowColor _SetTextOverlay_ShadowColor;
   static tSetTextOverlay_ShadowDirection _SetTextOverlay_ShadowDirection;
   static tSetTextOverlay_String _SetTextOverlay_String;
   static tSetTextOverlay_TargetDisplay _SetTextOverlay_TargetDisplay;
   static tSetTextOverlay_Top _SetTextOverlay_Top;
   static tSetTextOverlay_Transparent _SetTextOverlay_Transparent;
   static tSetTextOverlay_VideoAlignment _SetTextOverlay_VideoAlignment;
   static tSetTextOverlayAlign _SetTextOverlayAlign;
   static tSetTextOverlayAlphaBlend _SetTextOverlayAlphaBlend;
   static tSetTextOverlayAlphaBlendValue _SetTextOverlayAlphaBlendValue;
   static tSetTextOverlayBkColor _SetTextOverlayBkColor;
   static tSetTextOverlayEnabled _SetTextOverlayEnabled;
   static tSetTextOverlayFont _SetTextOverlayFont;
   static tSetTextOverlayFontColor _SetTextOverlayFontColor;
   static tSetTextOverlayFontSize _SetTextOverlayFontSize;
   static tSetTextOverlayGradientColor _SetTextOverlayGradientColor;
   static tSetTextOverlayGradientMode _SetTextOverlayGradientMode;
   static tSetTextOverlayHighResFont _SetTextOverlayHighResFont;
   static tSetTextOverlayLeft _SetTextOverlayLeft;
   static tSetTextOverlayOrientation _SetTextOverlayOrientation;
   static tSetTextOverlayRight _SetTextOverlayRight;
   static tSetTextOverlayScrolling _SetTextOverlayScrolling;
   static tSetTextOverlayScrollingSpeed _SetTextOverlayScrollingSpeed;
   static tSetTextOverlaySelector _SetTextOverlaySelector;
   static tSetTextOverlayShadow _SetTextOverlayShadow;
   static tSetTextOverlayShadowColor _SetTextOverlayShadowColor;
   static tSetTextOverlayShadowDirection _SetTextOverlayShadowDirection;
   static tSetTextOverlayString _SetTextOverlayString;
   static tSetTextOverlayTargetDisplay _SetTextOverlayTargetDisplay;
   static tSetTextOverlayTop _SetTextOverlayTop;
   static tSetTextOverlayTransparent _SetTextOverlayTransparent;
   static tSetTextOverlayVideoAlignment _SetTextOverlayVideoAlignment;
   static tSetThirdPartyDeinterlacer _SetThirdPartyDeinterlacer;
   static tSetTranslateMouseCoordinates _SetTranslateMouseCoordinates;
   static tSetTunerFrequency _SetTunerFrequency;
   static tSetTunerMode _SetTunerMode;
   static tSetTVChannel _SetTVChannel;
   static tSetTVCountryCode _SetTVCountryCode;
   static tSetTVTunerInputType _SetTVTunerInputType;
   static tSetTVUseFrequencyOverrides _SetTVUseFrequencyOverrides;
   static tSetUseClock _SetUseClock;
   static tSetv360_AspectRatio _Setv360_AspectRatio;
   static tSetv360_Enabled _Setv360_Enabled;
   static tSetv360_MasterAngle _Setv360_MasterAngle;
   static tSetv360_MouseAction _Setv360_MouseAction;
   static tSetv360_MouseActionPercent _Setv360_MouseActionPercent;
   static tSetVCRHorizontalLocking _SetVCRHorizontalLocking;
   static tSetVersion _SetVersion;
   static tSetVideoCompression_DataRate _SetVideoCompression_DataRate;
   static tSetVideoCompression_KeyFrameRate _SetVideoCompression_KeyFrameRate;
   static tSetVideoCompression_PFramesPerKeyFrame _SetVideoCompression_PFramesPerKeyFrame;
   static tSetVideoCompression_Quality _SetVideoCompression_Quality;
   static tSetVideoCompression_WindowSize _SetVideoCompression_WindowSize;
   static tSetVideoCompressionDefaults _SetVideoCompressionDefaults;
   static tSetVideoCompressionSettings _SetVideoCompressionSettings;
   static tSetVideoCompressor _SetVideoCompressor;
   static tSetVideoControlMode _SetVideoControlMode;
   static tSetVideoControlMode2 _SetVideoControlMode2;
   static tSetVideoControlSettings _SetVideoControlSettings;
   static tSetVideoCursor _SetVideoCursor;
   static tSetVideoDelay _SetVideoDelay;
   static tSetVideoDevice _SetVideoDevice;
   static tSetVideoDoubleBuffered _SetVideoDoubleBuffered;
   static tSetVideoFormat _SetVideoFormat;
   static tSetVideoFromImages_BitmapsSortedBy _SetVideoFromImages_BitmapsSortedBy;
   static tSetVideoFromImages_RepeatIndefinitely _SetVideoFromImages_RepeatIndefinitely;
   static tSetVideoFromImages_SourceDirectory _SetVideoFromImages_SourceDirectory;
   static tSetVideoFromImages_TemporaryFile _SetVideoFromImages_TemporaryFile;
   static tSetVideoInput _SetVideoInput;
   static tSetVideoProcessingBrightness _SetVideoProcessingBrightness;
   static tSetVideoProcessingContrast _SetVideoProcessingContrast;
   static tSetVideoProcessingDeinterlacing _SetVideoProcessingDeinterlacing;
   static tSetVideoProcessingGrayScale _SetVideoProcessingGrayScale;
   static tSetVideoProcessingHue _SetVideoProcessingHue;
   static tSetVideoProcessingInvertColors _SetVideoProcessingInvertColors;
   static tSetVideoProcessingLeftRight _SetVideoProcessingLeftRight;
   static tSetVideoProcessingPixellization _SetVideoProcessingPixellization;
   static tSetVideoProcessingRotation _SetVideoProcessingRotation;
   static tSetVideoProcessingRotationCustomAngle _SetVideoProcessingRotationCustomAngle;
   static tSetVideoProcessingSaturation _SetVideoProcessingSaturation;
   static tSetVideoProcessingTopDown _SetVideoProcessingTopDown;
   static tSetVideoQuality _SetVideoQuality;
   static tSetVideoQualitySettings _SetVideoQualitySettings;
   static tSetVideoRenderer _SetVideoRenderer;
   static tSetVideoRendererExternal _SetVideoRendererExternal;
   static tSetVideoRendererExternalIndex _SetVideoRendererExternalIndex;
   static tSetVideoRendererPriority _SetVideoRendererPriority;
   static tSetVideoSize _SetVideoSize;
   static tSetVideoSource _SetVideoSource;
   static tSetVideoSource_FileOrURL _SetVideoSource_FileOrURL;
   static tSetVideoSource_FileOrURL_StartTime _SetVideoSource_FileOrURL_StartTime;
   static tSetVideoSource_FileOrURL_StopTime _SetVideoSource_FileOrURL_StopTime;
   static tSetVideoStreamNumber _SetVideoStreamNumber;
   static tSetVideoSubtype _SetVideoSubtype;
   static tSetVideoVisibleWhenStopped _SetVideoVisibleWhenStopped;
   static tSetVirtualAudioStreamControl _SetVirtualAudioStreamControl;
   static tSetVirtualVideoStreamControl _SetVirtualVideoStreamControl;
   static tSetVMR9ImageAdjustmentValue _SetVMR9ImageAdjustmentValue;
   static tSetVuMeter _SetVuMeter;
   static tSetVuMeter_Enabled _SetVuMeter_Enabled;
   static tSetVUMeterSetting _SetVUMeterSetting;
   static tSetWebcamStillCaptureButton _SetWebcamStillCaptureButton;
   static tSetWindowRecordingByHandle _SetWindowRecordingByHandle;
   static tSetWindowRecordingByName _SetWindowRecordingByName;
   static tSetWindowTransparency _SetWindowTransparency;
   static tSetZoomCoeff _SetZoomCoeff;
   static tSetZoomXCenter _SetZoomXCenter;
   static tSetZoomYCenter _SetZoomYCenter;
   static tShowDebugWindow _ShowDebugWindow;
   static tShowDialog _ShowDialog;
   static tStartAudioRecording _StartAudioRecording;
   static tStartAudioRendering _StartAudioRendering;
   static tStartPreview _StartPreview;
   static tStartRecording _StartRecording;
   static tStartReencoding _StartReencoding;
   static tStartSynchronized _StartSynchronized;
   static tStop _Stop;
   static tStopPlayer _StopPlayer;
   static tStopPreview _StopPreview;
   static tStopRecording _StopRecording;
   static tStopReencoding _StopReencoding;
   static tStreamInterface_PushData _StreamInterface_PushData;
   static tTextOverlay_CreateCustomFont _TextOverlay_CreateCustomFont;
   static tThirdPartyFilter_AddToList _ThirdPartyFilter_AddToList;
   static tThirdPartyFilter_ClearList _ThirdPartyFilter_ClearList;
   static tThirdPartyFilter_Enable _ThirdPartyFilter_Enable;
   static tThirdPartyFilter_RemoveFromList _ThirdPartyFilter_RemoveFromList;
   static tThirdPartyFilter_ShowDialog _ThirdPartyFilter_ShowDialog;
   static tTVClearFrequencyOverrides _TVClearFrequencyOverrides;
   static tTVGetMinMaxChannels _TVGetMinMaxChannels;
   static tTVSetChannelFrequencyOverride _TVSetChannelFrequencyOverride;
   static tTVStartAutoScan _TVStartAutoScan;
   static tTVStartAutoScanChannels _TVStartAutoScanChannels;
   static tTVStopAutoScan _TVStopAutoScan;
   static tUpdateTrackbarBounds _UpdateTrackbarBounds;
   static tUseNearestVideoSize _UseNearestVideoSize;
   static tv360_AddYawPitchRoll _v360_AddYawPitchRoll;
   static tv360_GetAngle _v360_GetAngle;
   static tv360_GetYawPitchRoll _v360_GetYawPitchRoll;
   static tv360_ResetAnglesToDefault _v360_ResetAnglesToDefault;
   static tv360_SetAngle _v360_SetAngle;
   static tv360_SetInterpolation _v360_SetInterpolation;
   static tv360_SetProjection _v360_SetProjection;
   static tv360_SetStereoFormat _v360_SetStereoFormat;
   static tv360_SetTranspose _v360_SetTranspose;
   static tv360_SetYawPitchRoll _v360_SetYawPitchRoll;
   static tVDECGetHorizontalLocked _VDECGetHorizontalLocked;
   static tVDECGetNumberOfLines _VDECGetNumberOfLines;
   static tVDECGetOutputEnable _VDECGetOutputEnable;
   static tVDECGetVCRHorizontalLocking _VDECGetVCRHorizontalLocking;
   static tVDECPutOutputEnable _VDECPutOutputEnable;
   static tVDECPutTVFormat _VDECPutTVFormat;
   static tVDECPutVCRHorizontalLocking _VDECPutVCRHorizontalLocking;
   static tVideoCompressorIndex _VideoCompressorIndex;
   static tVideoDeviceIndex _VideoDeviceIndex;
   static tVideoDeviceIndexFromId _VideoDeviceIndexFromId;
   static tVideoFormatIndex _VideoFormatIndex;
   static tVideoFromImages_CreateSetOfBitmaps _VideoFromImages_CreateSetOfBitmaps;
   static tVideoInputIndex _VideoInputIndex;
   static tVideoQualityAuto _VideoQualityAuto;
   static tVideoQualityDefault _VideoQualityDefault;
   static tVideoQualityMax _VideoQualityMax;
   static tVideoQualityMin _VideoQualityMin;
   static tVideoQualityStep _VideoQualityStep;
   static tVideoQualityValue _VideoQualityValue;
   static tVideoSizeIndex _VideoSizeIndex;
   static tVideoSubtypeIndex _VideoSubtypeIndex;
   static tWaitForLastFrameBitmapBits _WaitForLastFrameBitmapBits;
   static tWriteScriptCommand _WriteScriptCommand;
   static tzReservedInternal1 _zReservedInternal1;
   static tzReservedInternal2 _zReservedInternal2;
   static tzReservedInternal3 _zReservedInternal3;
//#endregion DeclareFunctionPointersCPP

static HMODULE m_VideoGrabberLib = NULL;

class CMutex
{
public:
    CMutex();
    virtual ~CMutex();
    void Lock();
    void Unlock();
private:
    HANDLE hMutex;
};

CMutex::CMutex()
{
    hMutex = CreateMutex(0, false, NULL);
}

void CMutex::Lock()
{
    WaitForSingleObject(hMutex, INFINITE);
}

void CMutex::Unlock()
{
    ReleaseMutex(hMutex);
}

CMutex::~CMutex()
{
    CloseHandle(hMutex);
    if (m_VideoGrabberLib != NULL) {
        FreeLibrary(m_VideoGrabberLib);
        m_VideoGrabberLib = NULL;
    }
}

static CMutex m_VideoGrabberLibLock;

template<typename T>
T TGetProcAddress(HMODULE h, const char* procName) {
    FARPROC ptr = GetProcAddress(h, procName);
    if (!ptr) { throw "the version of this TVideoGrabber dll does not match!"; };
    return (T) ptr;
}

bool InitVideoGrabberLib()
{
    m_VideoGrabberLibLock.Lock();
    if (! m_VideoGrabberLib) {
        m_VideoGrabberLib = LoadLibraryA(TVIDEOGRABBERDLLNAME);
        if (!m_VideoGrabberLib) {
            throw ".dll not found!";
        }
        else {
            HMODULE h = m_VideoGrabberLib;
            //#region InitLoadLibraryCPP
               
               _About = TGetProcAddress<tAbout>(h, "_About");
               _AnalogVideoStandardIndex = TGetProcAddress<tAnalogVideoStandardIndex>(h, "_AnalogVideoStandardIndex");
               _ASFStreaming_GetAuthorizationList = TGetProcAddress<tASFStreaming_GetAuthorizationList>(h, "_ASFStreaming_GetAuthorizationList");
               _ASFStreaming_GetConnectedClients = TGetProcAddress<tASFStreaming_GetConnectedClients>(h, "_ASFStreaming_GetConnectedClients");
               _ASFStreaming_GetConnectedClientsCount = TGetProcAddress<tASFStreaming_GetConnectedClientsCount>(h, "_ASFStreaming_GetConnectedClientsCount");
               _ASFStreaming_ResetAuthorizations = TGetProcAddress<tASFStreaming_ResetAuthorizations>(h, "_ASFStreaming_ResetAuthorizations");
               _ASFStreaming_SetAuthorization = TGetProcAddress<tASFStreaming_SetAuthorization>(h, "_ASFStreaming_SetAuthorization");
               _AssociateMultiplexedSlave = TGetProcAddress<tAssociateMultiplexedSlave>(h, "_AssociateMultiplexedSlave");
               _AudioCompressorIndex = TGetProcAddress<tAudioCompressorIndex>(h, "_AudioCompressorIndex");
               _AudioDeviceIndex = TGetProcAddress<tAudioDeviceIndex>(h, "_AudioDeviceIndex");
               _AudioInputIndex = TGetProcAddress<tAudioInputIndex>(h, "_AudioInputIndex");
               _AudioRendererIndex = TGetProcAddress<tAudioRendererIndex>(h, "_AudioRendererIndex");
               _AVIDuration = TGetProcAddress<tAVIDuration>(h, "_AVIDuration");
               _AVIHeaderInfo = TGetProcAddress<tAVIHeaderInfo>(h, "_AVIHeaderInfo");
               _AVIInfo = TGetProcAddress<tAVIInfo>(h, "_AVIInfo");
               _AVIInfo2 = TGetProcAddress<tAVIInfo2>(h, "_AVIInfo2");
               _CameraControlAuto = TGetProcAddress<tCameraControlAuto>(h, "_CameraControlAuto");
               _CameraControlDefault = TGetProcAddress<tCameraControlDefault>(h, "_CameraControlDefault");
               _CameraControlMax = TGetProcAddress<tCameraControlMax>(h, "_CameraControlMax");
               _CameraControlMin = TGetProcAddress<tCameraControlMin>(h, "_CameraControlMin");
               _CameraControlStep = TGetProcAddress<tCameraControlStep>(h, "_CameraControlStep");
               _CameraControlValue = TGetProcAddress<tCameraControlValue>(h, "_CameraControlValue");
               _Cancel = TGetProcAddress<tCancel>(h, "_Cancel");
               _CanProcessMessages = TGetProcAddress<tCanProcessMessages>(h, "_CanProcessMessages");
               _CaptureFrameRenderedTo = TGetProcAddress<tCaptureFrameRenderedTo>(h, "_CaptureFrameRenderedTo");
               _CaptureFrameSyncTo = TGetProcAddress<tCaptureFrameSyncTo>(h, "_CaptureFrameSyncTo");
               _CaptureFrameTo = TGetProcAddress<tCaptureFrameTo>(h, "_CaptureFrameTo");
               _ClearHeaderAttributes = TGetProcAddress<tClearHeaderAttributes>(h, "_ClearHeaderAttributes");
               _ClosePlayer = TGetProcAddress<tClosePlayer>(h, "_ClosePlayer");
               _ContinueProcessing = TGetProcAddress<tContinueProcessing>(h, "_ContinueProcessing");
               _CreatePreallocCapFile = TGetProcAddress<tCreatePreallocCapFile>(h, "_CreatePreallocCapFile");
               _CreateVideoGrabber = TGetProcAddress<tCreateVideoGrabber>(h, "_CreateVideoGrabber");
               _DestroyVideoGrabber = TGetProcAddress<tDestroyVideoGrabber>(h, "_DestroyVideoGrabber");
               _Display_SetLocation = TGetProcAddress<tDisplay_SetLocation>(h, "_Display_SetLocation");
               _DrawBitmapOverFrame = TGetProcAddress<tDrawBitmapOverFrame>(h, "_DrawBitmapOverFrame");
               _DualDisplay_SetLocation = TGetProcAddress<tDualDisplay_SetLocation>(h, "_DualDisplay_SetLocation");
               _DVDInfo = TGetProcAddress<tDVDInfo>(h, "_DVDInfo");
               _EnableMultiplexedInput = TGetProcAddress<tEnableMultiplexedInput>(h, "_EnableMultiplexedInput");
               _EnableMultipurposeEncoder = TGetProcAddress<tEnableMultipurposeEncoder>(h, "_EnableMultipurposeEncoder");
               _EnableThreadMode = TGetProcAddress<tEnableThreadMode>(h, "_EnableThreadMode");
               _Encoder_CloseOutputFile = TGetProcAddress<tEncoder_CloseOutputFile>(h, "_Encoder_CloseOutputFile");
               _Encoder_GetInt = TGetProcAddress<tEncoder_GetInt>(h, "_Encoder_GetInt");
               _Encoder_NewOutputFile = TGetProcAddress<tEncoder_NewOutputFile>(h, "_Encoder_NewOutputFile");
               _Encoder_Pause = TGetProcAddress<tEncoder_Pause>(h, "_Encoder_Pause");
               _Encoder_Resume = TGetProcAddress<tEncoder_Resume>(h, "_Encoder_Resume");
               _Encoder_SetInt = TGetProcAddress<tEncoder_SetInt>(h, "_Encoder_SetInt");
               _Encoder_SetStr = TGetProcAddress<tEncoder_SetStr>(h, "_Encoder_SetStr");
               _Encoders_CreateInstanceForRecording = TGetProcAddress<tEncoders_CreateInstanceForRecording>(h, "_Encoders_CreateInstanceForRecording");
               _Encoders_CreateInstanceForStreaming = TGetProcAddress<tEncoders_CreateInstanceForStreaming>(h, "_Encoders_CreateInstanceForStreaming");
               _Encoders_RemoveAllInstances = TGetProcAddress<tEncoders_RemoveAllInstances>(h, "_Encoders_RemoveAllInstances");
               _Encoders_RemoveInstance = TGetProcAddress<tEncoders_RemoveInstance>(h, "_Encoders_RemoveInstance");
               _EnumerateWindows = TGetProcAddress<tEnumerateWindows>(h, "_EnumerateWindows");
               _FastForwardPlayer = TGetProcAddress<tFastForwardPlayer>(h, "_FastForwardPlayer");
               _FindIndexInListByName = TGetProcAddress<tFindIndexInListByName>(h, "_FindIndexInListByName");
               _GetAdjustOverlayAspectRatio = TGetProcAddress<tGetAdjustOverlayAspectRatio>(h, "_GetAdjustOverlayAspectRatio");
               _GetAdjustPixelAspectRatio = TGetProcAddress<tGetAdjustPixelAspectRatio>(h, "_GetAdjustPixelAspectRatio");
               _GetAero = TGetProcAddress<tGetAero>(h, "_GetAero");
               _GetAnalogVideoStandard = TGetProcAddress<tGetAnalogVideoStandard>(h, "_GetAnalogVideoStandard");
               _GetAnalogVideoStandards = TGetProcAddress<tGetAnalogVideoStandards>(h, "_GetAnalogVideoStandards");
               _GetAnalogVideoStandardsCount = TGetProcAddress<tGetAnalogVideoStandardsCount>(h, "_GetAnalogVideoStandardsCount");
               _GetApplicationPriority = TGetProcAddress<tGetApplicationPriority>(h, "_GetApplicationPriority");
               _GetASFAudioBitRate = TGetProcAddress<tGetASFAudioBitRate>(h, "_GetASFAudioBitRate");
               _GetASFAudioChannels = TGetProcAddress<tGetASFAudioChannels>(h, "_GetASFAudioChannels");
               _GetASFBufferWindow = TGetProcAddress<tGetASFBufferWindow>(h, "_GetASFBufferWindow");
               _GetASFDeinterlaceMode = TGetProcAddress<tGetASFDeinterlaceMode>(h, "_GetASFDeinterlaceMode");
               _GetASFDirectStreamingKeepClientsConnected = TGetProcAddress<tGetASFDirectStreamingKeepClientsConnected>(h, "_GetASFDirectStreamingKeepClientsConnected");
               _GetASFFixedFrameRate = TGetProcAddress<tGetASFFixedFrameRate>(h, "_GetASFFixedFrameRate");
               _GetASFMediaServerPublishingPoint = TGetProcAddress<tGetASFMediaServerPublishingPoint>(h, "_GetASFMediaServerPublishingPoint");
               _GetASFMediaServerRemovePublishingPointAfterDisconnect = TGetProcAddress<tGetASFMediaServerRemovePublishingPointAfterDisconnect>(h, "_GetASFMediaServerRemovePublishingPointAfterDisconnect");
               _GetASFMediaServerTemplatePublishingPoint = TGetProcAddress<tGetASFMediaServerTemplatePublishingPoint>(h, "_GetASFMediaServerTemplatePublishingPoint");
               _GetASFNetworkMaxUsers = TGetProcAddress<tGetASFNetworkMaxUsers>(h, "_GetASFNetworkMaxUsers");
               _GetASFNetworkPort = TGetProcAddress<tGetASFNetworkPort>(h, "_GetASFNetworkPort");
               _GetASFProfile = TGetProcAddress<tGetASFProfile>(h, "_GetASFProfile");
               _GetASFProfileFromCustomFile = TGetProcAddress<tGetASFProfileFromCustomFile>(h, "_GetASFProfileFromCustomFile");
               _GetASFProfiles = TGetProcAddress<tGetASFProfiles>(h, "_GetASFProfiles");
               _GetASFProfilesCount = TGetProcAddress<tGetASFProfilesCount>(h, "_GetASFProfilesCount");
               _GetASFProfileVersion = TGetProcAddress<tGetASFProfileVersion>(h, "_GetASFProfileVersion");
               _GetASFVideoBitRate = TGetProcAddress<tGetASFVideoBitRate>(h, "_GetASFVideoBitRate");
               _GetASFVideoFrameRate = TGetProcAddress<tGetASFVideoFrameRate>(h, "_GetASFVideoFrameRate");
               _GetASFVideoHeight = TGetProcAddress<tGetASFVideoHeight>(h, "_GetASFVideoHeight");
               _GetASFVideoMaxKeyFrameSpacing = TGetProcAddress<tGetASFVideoMaxKeyFrameSpacing>(h, "_GetASFVideoMaxKeyFrameSpacing");
               _GetASFVideoQuality = TGetProcAddress<tGetASFVideoQuality>(h, "_GetASFVideoQuality");
               _GetASFVideoWidth = TGetProcAddress<tGetASFVideoWidth>(h, "_GetASFVideoWidth");
               _GetAspectRatioToUse = TGetProcAddress<tGetAspectRatioToUse>(h, "_GetAspectRatioToUse");
               _GetAssociateAudioAndVideoDevices = TGetProcAddress<tGetAssociateAudioAndVideoDevices>(h, "_GetAssociateAudioAndVideoDevices");
               _GetAudioBalance = TGetProcAddress<tGetAudioBalance>(h, "_GetAudioBalance");
               _GetAudioChannelRenderMode = TGetProcAddress<tGetAudioChannelRenderMode>(h, "_GetAudioChannelRenderMode");
               _GetAudioCodec = TGetProcAddress<tGetAudioCodec>(h, "_GetAudioCodec");
               _GetAudioCompressor = TGetProcAddress<tGetAudioCompressor>(h, "_GetAudioCompressor");
               _GetAudioCompressorName = TGetProcAddress<tGetAudioCompressorName>(h, "_GetAudioCompressorName");
               _GetAudioCompressors = TGetProcAddress<tGetAudioCompressors>(h, "_GetAudioCompressors");
               _GetAudioCompressorsCount = TGetProcAddress<tGetAudioCompressorsCount>(h, "_GetAudioCompressorsCount");
               _GetAudioDevice = TGetProcAddress<tGetAudioDevice>(h, "_GetAudioDevice");
               _GetAudioDeviceName = TGetProcAddress<tGetAudioDeviceName>(h, "_GetAudioDeviceName");
               _GetAudioDeviceRendering = TGetProcAddress<tGetAudioDeviceRendering>(h, "_GetAudioDeviceRendering");
               _GetAudioDevices = TGetProcAddress<tGetAudioDevices>(h, "_GetAudioDevices");
               _GetAudioDevicesCount = TGetProcAddress<tGetAudioDevicesCount>(h, "_GetAudioDevicesCount");
               _GetAudioFormat = TGetProcAddress<tGetAudioFormat>(h, "_GetAudioFormat");
               _GetAudioFormats = TGetProcAddress<tGetAudioFormats>(h, "_GetAudioFormats");
               _GetAudioInput = TGetProcAddress<tGetAudioInput>(h, "_GetAudioInput");
               _GetAudioInputBalance = TGetProcAddress<tGetAudioInputBalance>(h, "_GetAudioInputBalance");
               _GetAudioInputLevel = TGetProcAddress<tGetAudioInputLevel>(h, "_GetAudioInputLevel");
               _GetAudioInputMono = TGetProcAddress<tGetAudioInputMono>(h, "_GetAudioInputMono");
               _GetAudioInputs = TGetProcAddress<tGetAudioInputs>(h, "_GetAudioInputs");
               _GetAudioInputsCount = TGetProcAddress<tGetAudioInputsCount>(h, "_GetAudioInputsCount");
               _GetAudioPeakEvent = TGetProcAddress<tGetAudioPeakEvent>(h, "_GetAudioPeakEvent");
               _GetAudioRecording = TGetProcAddress<tGetAudioRecording>(h, "_GetAudioRecording");
               _GetAudioRenderer = TGetProcAddress<tGetAudioRenderer>(h, "_GetAudioRenderer");
               _GetAudioRendererName = TGetProcAddress<tGetAudioRendererName>(h, "_GetAudioRendererName");
               _GetAudioRenderers = TGetProcAddress<tGetAudioRenderers>(h, "_GetAudioRenderers");
               _GetAudioRenderersCount = TGetProcAddress<tGetAudioRenderersCount>(h, "_GetAudioRenderersCount");
               _GetAudioSource = TGetProcAddress<tGetAudioSource>(h, "_GetAudioSource");
               _GetAudioStreamNumber = TGetProcAddress<tGetAudioStreamNumber>(h, "_GetAudioStreamNumber");
               _GetAudioSyncAdjustment = TGetProcAddress<tGetAudioSyncAdjustment>(h, "_GetAudioSyncAdjustment");
               _GetAudioSyncAdjustmentEnabled = TGetProcAddress<tGetAudioSyncAdjustmentEnabled>(h, "_GetAudioSyncAdjustmentEnabled");
               _GetAudioVolume = TGetProcAddress<tGetAudioVolume>(h, "_GetAudioVolume");
               _GetAutoConnectRelatedPins = TGetProcAddress<tGetAutoConnectRelatedPins>(h, "_GetAutoConnectRelatedPins");
               _GetAutoFileName = TGetProcAddress<tGetAutoFileName>(h, "_GetAutoFileName");
               _GetAutoFileNameDateTimeFormat = TGetProcAddress<tGetAutoFileNameDateTimeFormat>(h, "_GetAutoFileNameDateTimeFormat");
               _GetAutoFileNameMinDigits = TGetProcAddress<tGetAutoFileNameMinDigits>(h, "_GetAutoFileNameMinDigits");
               _GetAutoFilePrefix = TGetProcAddress<tGetAutoFilePrefix>(h, "_GetAutoFilePrefix");
               _GetAutoFileSuffix = TGetProcAddress<tGetAutoFileSuffix>(h, "_GetAutoFileSuffix");
               _GetAutoRefreshPreview = TGetProcAddress<tGetAutoRefreshPreview>(h, "_GetAutoRefreshPreview");
               _GetAutoStartPlayer = TGetProcAddress<tGetAutoStartPlayer>(h, "_GetAutoStartPlayer");
               _GetAVIDurationUpdated = TGetProcAddress<tGetAVIDurationUpdated>(h, "_GetAVIDurationUpdated");
               _GetAVIFormatOpenDML = TGetProcAddress<tGetAVIFormatOpenDML>(h, "_GetAVIFormatOpenDML");
               _GetAVIFormatOpenDMLCompatibilityIndex = TGetProcAddress<tGetAVIFormatOpenDMLCompatibilityIndex>(h, "_GetAVIFormatOpenDMLCompatibilityIndex");
               _GetBackgroundColor = TGetProcAddress<tGetBackgroundColor>(h, "_GetBackgroundColor");
               _GetBufferCount = TGetProcAddress<tGetBufferCount>(h, "_GetBufferCount");
               _GetBurstCount = TGetProcAddress<tGetBurstCount>(h, "_GetBurstCount");
               _GetBurstInterval = TGetProcAddress<tGetBurstInterval>(h, "_GetBurstInterval");
               _GetBurstMode = TGetProcAddress<tGetBurstMode>(h, "_GetBurstMode");
               _GetBurstType = TGetProcAddress<tGetBurstType>(h, "_GetBurstType");
               _GetBusy = TGetProcAddress<tGetBusy>(h, "_GetBusy");
               _GetBusyCursor = TGetProcAddress<tGetBusyCursor>(h, "_GetBusyCursor");
               _GetCameraControlSettings = TGetProcAddress<tGetCameraControlSettings>(h, "_GetCameraControlSettings");
               _GetCameraExposure = TGetProcAddress<tGetCameraExposure>(h, "_GetCameraExposure");
               _GetCameraExposureAsString = TGetProcAddress<tGetCameraExposureAsString>(h, "_GetCameraExposureAsString");
               _GetCaptureFileExt = TGetProcAddress<tGetCaptureFileExt>(h, "_GetCaptureFileExt");
               _GetColorKey = TGetProcAddress<tGetColorKey>(h, "_GetColorKey");
               _GetColorKeyEnabled = TGetProcAddress<tGetColorKeyEnabled>(h, "_GetColorKeyEnabled");
               _GetCompressionMode = TGetProcAddress<tGetCompressionMode>(h, "_GetCompressionMode");
               _GetCompressionType = TGetProcAddress<tGetCompressionType>(h, "_GetCompressionType");
               _GetCropping_Enabled = TGetProcAddress<tGetCropping_Enabled>(h, "_GetCropping_Enabled");
               _GetCropping_Height = TGetProcAddress<tGetCropping_Height>(h, "_GetCropping_Height");
               _GetCropping_Outbounds = TGetProcAddress<tGetCropping_Outbounds>(h, "_GetCropping_Outbounds");
               _GetCropping_Width = TGetProcAddress<tGetCropping_Width>(h, "_GetCropping_Width");
               _GetCropping_X = TGetProcAddress<tGetCropping_X>(h, "_GetCropping_X");
               _GetCropping_XMax = TGetProcAddress<tGetCropping_XMax>(h, "_GetCropping_XMax");
               _GetCropping_Y = TGetProcAddress<tGetCropping_Y>(h, "_GetCropping_Y");
               _GetCropping_YMax = TGetProcAddress<tGetCropping_YMax>(h, "_GetCropping_YMax");
               _GetCropping_Zoom = TGetProcAddress<tGetCropping_Zoom>(h, "_GetCropping_Zoom");
               _GetCurrentFrameRate = TGetProcAddress<tGetCurrentFrameRate>(h, "_GetCurrentFrameRate");
               _GetCurrentState = TGetProcAddress<tGetCurrentState>(h, "_GetCurrentState");
               _GetDeliveredFrames = TGetProcAddress<tGetDeliveredFrames>(h, "_GetDeliveredFrames");
               _GetDirectShowFilters = TGetProcAddress<tGetDirectShowFilters>(h, "_GetDirectShowFilters");
               _GetDirectShowFiltersCount = TGetProcAddress<tGetDirectShowFiltersCount>(h, "_GetDirectShowFiltersCount");
               _GetDisplayActive = TGetProcAddress<tGetDisplayActive>(h, "_GetDisplayActive");
               _GetDisplayAlphaBlendEnabled = TGetProcAddress<tGetDisplayAlphaBlendEnabled>(h, "_GetDisplayAlphaBlendEnabled");
               _GetDisplayAlphaBlendValue = TGetProcAddress<tGetDisplayAlphaBlendValue>(h, "_GetDisplayAlphaBlendValue");
               _GetDisplayAspectRatio = TGetProcAddress<tGetDisplayAspectRatio>(h, "_GetDisplayAspectRatio");
               _GetDisplayAutoSize = TGetProcAddress<tGetDisplayAutoSize>(h, "_GetDisplayAutoSize");
               _GetDisplayEmbedded = TGetProcAddress<tGetDisplayEmbedded>(h, "_GetDisplayEmbedded");
               _GetDisplayEmbedded_FitParent = TGetProcAddress<tGetDisplayEmbedded_FitParent>(h, "_GetDisplayEmbedded_FitParent");
               _GetDisplayFullScreen = TGetProcAddress<tGetDisplayFullScreen>(h, "_GetDisplayFullScreen");
               _GetDisplayHeight = TGetProcAddress<tGetDisplayHeight>(h, "_GetDisplayHeight");
               _GetDisplayLeft = TGetProcAddress<tGetDisplayLeft>(h, "_GetDisplayLeft");
               _GetDisplayMonitor = TGetProcAddress<tGetDisplayMonitor>(h, "_GetDisplayMonitor");
               _GetDisplayMouseMovesWindow = TGetProcAddress<tGetDisplayMouseMovesWindow>(h, "_GetDisplayMouseMovesWindow");
               _GetDisplayPanScanRatio = TGetProcAddress<tGetDisplayPanScanRatio>(h, "_GetDisplayPanScanRatio");
               _GetDisplayStayOnTop = TGetProcAddress<tGetDisplayStayOnTop>(h, "_GetDisplayStayOnTop");
               _GetDisplayTop = TGetProcAddress<tGetDisplayTop>(h, "_GetDisplayTop");
               _GetDisplayTransparentColorEnabled = TGetProcAddress<tGetDisplayTransparentColorEnabled>(h, "_GetDisplayTransparentColorEnabled");
               _GetDisplayTransparentColorValue = TGetProcAddress<tGetDisplayTransparentColorValue>(h, "_GetDisplayTransparentColorValue");
               _GetDisplayVideoHeight = TGetProcAddress<tGetDisplayVideoHeight>(h, "_GetDisplayVideoHeight");
               _GetDisplayVideoPortEnabled = TGetProcAddress<tGetDisplayVideoPortEnabled>(h, "_GetDisplayVideoPortEnabled");
               _GetDisplayVideoWidth = TGetProcAddress<tGetDisplayVideoWidth>(h, "_GetDisplayVideoWidth");
               _GetDisplayVideoWindowHandle = TGetProcAddress<tGetDisplayVideoWindowHandle>(h, "_GetDisplayVideoWindowHandle");
               _GetDisplayVisible = TGetProcAddress<tGetDisplayVisible>(h, "_GetDisplayVisible");
               _GetDisplayWidth = TGetProcAddress<tGetDisplayWidth>(h, "_GetDisplayWidth");
               _GetDroppedFrameCount = TGetProcAddress<tGetDroppedFrameCount>(h, "_GetDroppedFrameCount");
               _GetDroppedFramesPollingInterval = TGetProcAddress<tGetDroppedFramesPollingInterval>(h, "_GetDroppedFramesPollingInterval");
               _GetDVDateTimeEnabled = TGetProcAddress<tGetDVDateTimeEnabled>(h, "_GetDVDateTimeEnabled");
               _GetDVDiscontinuityMinimumInterval = TGetProcAddress<tGetDVDiscontinuityMinimumInterval>(h, "_GetDVDiscontinuityMinimumInterval");
               _GetDVDTitle = TGetProcAddress<tGetDVDTitle>(h, "_GetDVDTitle");
               _GetDVEncoder_VideoFormat = TGetProcAddress<tGetDVEncoder_VideoFormat>(h, "_GetDVEncoder_VideoFormat");
               _GetDVEncoder_VideoResolution = TGetProcAddress<tGetDVEncoder_VideoResolution>(h, "_GetDVEncoder_VideoResolution");
               _GetDVEncoder_VideoStandard = TGetProcAddress<tGetDVEncoder_VideoStandard>(h, "_GetDVEncoder_VideoStandard");
               _GetDVRecordingInNativeFormatSeparatesStreams = TGetProcAddress<tGetDVRecordingInNativeFormatSeparatesStreams>(h, "_GetDVRecordingInNativeFormatSeparatesStreams");
               _GetDVReduceFrameRate = TGetProcAddress<tGetDVReduceFrameRate>(h, "_GetDVReduceFrameRate");
               _GetDVRgb219 = TGetProcAddress<tGetDVRgb219>(h, "_GetDVRgb219");
               _GetDVTimeCodeEnabled = TGetProcAddress<tGetDVTimeCodeEnabled>(h, "_GetDVTimeCodeEnabled");
               _GetEventNotificationSynchrone = TGetProcAddress<tGetEventNotificationSynchrone>(h, "_GetEventNotificationSynchrone");
               _GetExtraDLLPath = TGetProcAddress<tGetExtraDLLPath>(h, "_GetExtraDLLPath");
               _GetFilterInterfaceByName = TGetProcAddress<tGetFilterInterfaceByName>(h, "_GetFilterInterfaceByName");
               _GetFixFlickerOrBlackCapture = TGetProcAddress<tGetFixFlickerOrBlackCapture>(h, "_GetFixFlickerOrBlackCapture");
               _GetFrameBitmapInfo = TGetProcAddress<tGetFrameBitmapInfo>(h, "_GetFrameBitmapInfo");
               _GetFrameCaptureHeight = TGetProcAddress<tGetFrameCaptureHeight>(h, "_GetFrameCaptureHeight");
               _GetFrameCaptureWidth = TGetProcAddress<tGetFrameCaptureWidth>(h, "_GetFrameCaptureWidth");
               _GetFrameCaptureWithoutOverlay = TGetProcAddress<tGetFrameCaptureWithoutOverlay>(h, "_GetFrameCaptureWithoutOverlay");
               _GetFrameCaptureZoomSize = TGetProcAddress<tGetFrameCaptureZoomSize>(h, "_GetFrameCaptureZoomSize");
               _GetFrameGrabber = TGetProcAddress<tGetFrameGrabber>(h, "_GetFrameGrabber");
               _GetFrameGrabberCurrentRGBFormat = TGetProcAddress<tGetFrameGrabberCurrentRGBFormat>(h, "_GetFrameGrabberCurrentRGBFormat");
               _GetFrameGrabberRGBFormat = TGetProcAddress<tGetFrameGrabberRGBFormat>(h, "_GetFrameGrabberRGBFormat");
               _GetFrameInfo = TGetProcAddress<tGetFrameInfo>(h, "_GetFrameInfo");
               _GetFrameInfoString = TGetProcAddress<tGetFrameInfoString>(h, "_GetFrameInfoString");
               _GetFrameNumberStartsFromZero = TGetProcAddress<tGetFrameNumberStartsFromZero>(h, "_GetFrameNumberStartsFromZero");
               _GetFrameRate = TGetProcAddress<tGetFrameRate>(h, "_GetFrameRate");
               _GetFrameRateDivider = TGetProcAddress<tGetFrameRateDivider>(h, "_GetFrameRateDivider");
               _GetFWCam1394 = TGetProcAddress<tGetFWCam1394>(h, "_GetFWCam1394");
               _GetFWCam1394List = TGetProcAddress<tGetFWCam1394List>(h, "_GetFWCam1394List");
               _GetGetLastFrameWaitTimeoutMs = TGetProcAddress<tGetGetLastFrameWaitTimeoutMs>(h, "_GetGetLastFrameWaitTimeoutMs");
               _GetHoldRecording = TGetProcAddress<tGetHoldRecording>(h, "_GetHoldRecording");
               _GetImageOverlay_AlphaBlend = TGetProcAddress<tGetImageOverlay_AlphaBlend>(h, "_GetImageOverlay_AlphaBlend");
               _GetImageOverlay_AlphaBlendValue = TGetProcAddress<tGetImageOverlay_AlphaBlendValue>(h, "_GetImageOverlay_AlphaBlendValue");
               _GetImageOverlay_ChromaKey = TGetProcAddress<tGetImageOverlay_ChromaKey>(h, "_GetImageOverlay_ChromaKey");
               _GetImageOverlay_ChromaKeyLeewayPercent = TGetProcAddress<tGetImageOverlay_ChromaKeyLeewayPercent>(h, "_GetImageOverlay_ChromaKeyLeewayPercent");
               _GetImageOverlay_ChromaKeyRGBColor = TGetProcAddress<tGetImageOverlay_ChromaKeyRGBColor>(h, "_GetImageOverlay_ChromaKeyRGBColor");
               _GetImageOverlay_Enabled = TGetProcAddress<tGetImageOverlay_Enabled>(h, "_GetImageOverlay_Enabled");
               _GetImageOverlay_Height = TGetProcAddress<tGetImageOverlay_Height>(h, "_GetImageOverlay_Height");
               _GetImageOverlay_LeftLocation = TGetProcAddress<tGetImageOverlay_LeftLocation>(h, "_GetImageOverlay_LeftLocation");
               _GetImageOverlay_RotationAngle = TGetProcAddress<tGetImageOverlay_RotationAngle>(h, "_GetImageOverlay_RotationAngle");
               _GetImageOverlay_StretchToVideoSize = TGetProcAddress<tGetImageOverlay_StretchToVideoSize>(h, "_GetImageOverlay_StretchToVideoSize");
               _GetImageOverlay_TargetDisplay = TGetProcAddress<tGetImageOverlay_TargetDisplay>(h, "_GetImageOverlay_TargetDisplay");
               _GetImageOverlay_TopLocation = TGetProcAddress<tGetImageOverlay_TopLocation>(h, "_GetImageOverlay_TopLocation");
               _GetImageOverlay_Transparent = TGetProcAddress<tGetImageOverlay_Transparent>(h, "_GetImageOverlay_Transparent");
               _GetImageOverlay_TransparentColorValue = TGetProcAddress<tGetImageOverlay_TransparentColorValue>(h, "_GetImageOverlay_TransparentColorValue");
               _GetImageOverlay_UseTransparentColor = TGetProcAddress<tGetImageOverlay_UseTransparentColor>(h, "_GetImageOverlay_UseTransparentColor");
               _GetImageOverlay_VideoAlignment = TGetProcAddress<tGetImageOverlay_VideoAlignment>(h, "_GetImageOverlay_VideoAlignment");
               _GetImageOverlay_Width = TGetProcAddress<tGetImageOverlay_Width>(h, "_GetImageOverlay_Width");
               _GetImageOverlayAlphaBlend = TGetProcAddress<tGetImageOverlayAlphaBlend>(h, "_GetImageOverlayAlphaBlend");
               _GetImageOverlayAlphaBlendValue = TGetProcAddress<tGetImageOverlayAlphaBlendValue>(h, "_GetImageOverlayAlphaBlendValue");
               _GetImageOverlayChromaKey = TGetProcAddress<tGetImageOverlayChromaKey>(h, "_GetImageOverlayChromaKey");
               _GetImageOverlayChromaKeyLeewayPercent = TGetProcAddress<tGetImageOverlayChromaKeyLeewayPercent>(h, "_GetImageOverlayChromaKeyLeewayPercent");
               _GetImageOverlayChromaKeyRGBColor = TGetProcAddress<tGetImageOverlayChromaKeyRGBColor>(h, "_GetImageOverlayChromaKeyRGBColor");
               _GetImageOverlayEnabled = TGetProcAddress<tGetImageOverlayEnabled>(h, "_GetImageOverlayEnabled");
               _GetImageOverlayHeight = TGetProcAddress<tGetImageOverlayHeight>(h, "_GetImageOverlayHeight");
               _GetImageOverlayLeftLocation = TGetProcAddress<tGetImageOverlayLeftLocation>(h, "_GetImageOverlayLeftLocation");
               _GetImageOverlayRotationAngle = TGetProcAddress<tGetImageOverlayRotationAngle>(h, "_GetImageOverlayRotationAngle");
               _GetImageOverlaySelector = TGetProcAddress<tGetImageOverlaySelector>(h, "_GetImageOverlaySelector");
               _GetImageOverlayStretchToVideoSize = TGetProcAddress<tGetImageOverlayStretchToVideoSize>(h, "_GetImageOverlayStretchToVideoSize");
               _GetImageOverlayTargetDisplay = TGetProcAddress<tGetImageOverlayTargetDisplay>(h, "_GetImageOverlayTargetDisplay");
               _GetImageOverlayTopLocation = TGetProcAddress<tGetImageOverlayTopLocation>(h, "_GetImageOverlayTopLocation");
               _GetImageOverlayTransparent = TGetProcAddress<tGetImageOverlayTransparent>(h, "_GetImageOverlayTransparent");
               _GetImageOverlayTransparentColorValue = TGetProcAddress<tGetImageOverlayTransparentColorValue>(h, "_GetImageOverlayTransparentColorValue");
               _GetImageOverlayUseTransparentColor = TGetProcAddress<tGetImageOverlayUseTransparentColor>(h, "_GetImageOverlayUseTransparentColor");
               _GetImageOverlayVideoAlignment = TGetProcAddress<tGetImageOverlayVideoAlignment>(h, "_GetImageOverlayVideoAlignment");
               _GetImageOverlayWidth = TGetProcAddress<tGetImageOverlayWidth>(h, "_GetImageOverlayWidth");
               _GetImageRatio = TGetProcAddress<tGetImageRatio>(h, "_GetImageRatio");
               _GetInFrameProgressEvent = TGetProcAddress<tGetInFrameProgressEvent>(h, "_GetInFrameProgressEvent");
               _GetIPCameraURL = TGetProcAddress<tGetIPCameraURL>(h, "_GetIPCameraURL");
               _GetIsAnalogVideoDecoderAvailable = TGetProcAddress<tGetIsAnalogVideoDecoderAvailable>(h, "_GetIsAnalogVideoDecoderAvailable");
               _GetIsAudioCrossbarAvailable = TGetProcAddress<tGetIsAudioCrossbarAvailable>(h, "_GetIsAudioCrossbarAvailable");
               _GetIsAudioInputBalanceAvailable = TGetProcAddress<tGetIsAudioInputBalanceAvailable>(h, "_GetIsAudioInputBalanceAvailable");
               _GetIsCameraControlAvailable = TGetProcAddress<tGetIsCameraControlAvailable>(h, "_GetIsCameraControlAvailable");
               _GetIsDigitalVideoIn = TGetProcAddress<tGetIsDigitalVideoIn>(h, "_GetIsDigitalVideoIn");
               _GetIsDVCommandAvailable = TGetProcAddress<tGetIsDVCommandAvailable>(h, "_GetIsDVCommandAvailable");
               _GetIsHorizontalSyncLocked = TGetProcAddress<tGetIsHorizontalSyncLocked>(h, "_GetIsHorizontalSyncLocked");
               _GetIsMpegStream = TGetProcAddress<tGetIsMpegStream>(h, "_GetIsMpegStream");
               _GetIsPlayerAudioStreamAvailable = TGetProcAddress<tGetIsPlayerAudioStreamAvailable>(h, "_GetIsPlayerAudioStreamAvailable");
               _GetIsPlayerVideoStreamAvailable = TGetProcAddress<tGetIsPlayerVideoStreamAvailable>(h, "_GetIsPlayerVideoStreamAvailable");
               _GetIsRecordingPaused = TGetProcAddress<tGetIsRecordingPaused>(h, "_GetIsRecordingPaused");
               _GetIsTVAudioAvailable = TGetProcAddress<tGetIsTVAudioAvailable>(h, "_GetIsTVAudioAvailable");
               _GetIsTVAutoTuneRunning = TGetProcAddress<tGetIsTVAutoTuneRunning>(h, "_GetIsTVAutoTuneRunning");
               _GetIsTVTunerAvailable = TGetProcAddress<tGetIsTVTunerAvailable>(h, "_GetIsTVTunerAvailable");
               _GetIsVideoControlAvailable = TGetProcAddress<tGetIsVideoControlAvailable>(h, "_GetIsVideoControlAvailable");
               _GetIsVideoCrossbarAvailable = TGetProcAddress<tGetIsVideoCrossbarAvailable>(h, "_GetIsVideoCrossbarAvailable");
               _GetIsVideoInterlaced = TGetProcAddress<tGetIsVideoInterlaced>(h, "_GetIsVideoInterlaced");
               _GetIsVideoPortAvailable = TGetProcAddress<tGetIsVideoPortAvailable>(h, "_GetIsVideoPortAvailable");
               _GetIsVideoQualityAvailable = TGetProcAddress<tGetIsVideoQualityAvailable>(h, "_GetIsVideoQualityAvailable");
               _GetIsWDMVideoDriver = TGetProcAddress<tGetIsWDMVideoDriver>(h, "_GetIsWDMVideoDriver");
               _GetItemNameFromList = TGetProcAddress<tGetItemNameFromList>(h, "_GetItemNameFromList");
               _GetJPEGPerformance = TGetProcAddress<tGetJPEGPerformance>(h, "_GetJPEGPerformance");
               _GetJPEGProgressiveDisplay = TGetProcAddress<tGetJPEGProgressiveDisplay>(h, "_GetJPEGProgressiveDisplay");
               _GetJPEGQuality = TGetProcAddress<tGetJPEGQuality>(h, "_GetJPEGQuality");
               _GetLast_BurstFrameCapture_FileName = TGetProcAddress<tGetLast_BurstFrameCapture_FileName>(h, "_GetLast_BurstFrameCapture_FileName");
               _GetLast_CaptureFrameTo_FileName = TGetProcAddress<tGetLast_CaptureFrameTo_FileName>(h, "_GetLast_CaptureFrameTo_FileName");
               _GetLast_Clip_Played = TGetProcAddress<tGetLast_Clip_Played>(h, "_GetLast_Clip_Played");
               _GetLast_Recording_FileName = TGetProcAddress<tGetLast_Recording_FileName>(h, "_GetLast_Recording_FileName");
               _GetLastAverageStreamValue = TGetProcAddress<tGetLastAverageStreamValue>(h, "_GetLastAverageStreamValue");
               _GetLastFrameAsHBITMAP = TGetProcAddress<tGetLastFrameAsHBITMAP>(h, "_GetLastFrameAsHBITMAP");
               _GetLastFrameBitmapBits = TGetProcAddress<tGetLastFrameBitmapBits>(h, "_GetLastFrameBitmapBits");
               _GetLastFrameBitmapBits2 = TGetProcAddress<tGetLastFrameBitmapBits2>(h, "_GetLastFrameBitmapBits2");
               _GetLicenseString = TGetProcAddress<tGetLicenseString>(h, "_GetLicenseString");
               _GetLogoDisplayed = TGetProcAddress<tGetLogoDisplayed>(h, "_GetLogoDisplayed");
               _GetLogoLayout = TGetProcAddress<tGetLogoLayout>(h, "_GetLogoLayout");
               _GetLogString = TGetProcAddress<tGetLogString>(h, "_GetLogString");
               _GetMiscDeviceControl = TGetProcAddress<tGetMiscDeviceControl>(h, "_GetMiscDeviceControl");
               _GetMixAudioSamplesLevel = TGetProcAddress<tGetMixAudioSamplesLevel>(h, "_GetMixAudioSamplesLevel");
               _GetMixer_MosaicColumns = TGetProcAddress<tGetMixer_MosaicColumns>(h, "_GetMixer_MosaicColumns");
               _GetMixer_MosaicLines = TGetProcAddress<tGetMixer_MosaicLines>(h, "_GetMixer_MosaicLines");
               _GetMotionDetector_CompareBlue = TGetProcAddress<tGetMotionDetector_CompareBlue>(h, "_GetMotionDetector_CompareBlue");
               _GetMotionDetector_CompareGreen = TGetProcAddress<tGetMotionDetector_CompareGreen>(h, "_GetMotionDetector_CompareGreen");
               _GetMotionDetector_CompareRed = TGetProcAddress<tGetMotionDetector_CompareRed>(h, "_GetMotionDetector_CompareRed");
               _GetMotionDetector_Enabled = TGetProcAddress<tGetMotionDetector_Enabled>(h, "_GetMotionDetector_Enabled");
               _GetMotionDetector_GlobalMotionRatio = TGetProcAddress<tGetMotionDetector_GlobalMotionRatio>(h, "_GetMotionDetector_GlobalMotionRatio");
               _GetMotionDetector_GreyScale = TGetProcAddress<tGetMotionDetector_GreyScale>(h, "_GetMotionDetector_GreyScale");
               _GetMotionDetector_Grid = TGetProcAddress<tGetMotionDetector_Grid>(h, "_GetMotionDetector_Grid");
               _GetMotionDetector_GridXCount = TGetProcAddress<tGetMotionDetector_GridXCount>(h, "_GetMotionDetector_GridXCount");
               _GetMotionDetector_GridYCount = TGetProcAddress<tGetMotionDetector_GridYCount>(h, "_GetMotionDetector_GridYCount");
               _GetMotionDetector_IsGridValid = TGetProcAddress<tGetMotionDetector_IsGridValid>(h, "_GetMotionDetector_IsGridValid");
               _GetMotionDetector_MaxDetectionsPerSecond = TGetProcAddress<tGetMotionDetector_MaxDetectionsPerSecond>(h, "_GetMotionDetector_MaxDetectionsPerSecond");
               _GetMotionDetector_MotionResetMs = TGetProcAddress<tGetMotionDetector_MotionResetMs>(h, "_GetMotionDetector_MotionResetMs");
               _GetMotionDetector_ReduceCPULoad = TGetProcAddress<tGetMotionDetector_ReduceCPULoad>(h, "_GetMotionDetector_ReduceCPULoad");
               _GetMotionDetector_ReduceVideoNoise = TGetProcAddress<tGetMotionDetector_ReduceVideoNoise>(h, "_GetMotionDetector_ReduceVideoNoise");
               _GetMotionDetector_Triggered = TGetProcAddress<tGetMotionDetector_Triggered>(h, "_GetMotionDetector_Triggered");
               _GetMouseWheelControlsZoomAtCursor = TGetProcAddress<tGetMouseWheelControlsZoomAtCursor>(h, "_GetMouseWheelControlsZoomAtCursor");
               _GetMouseWheelEventEnabled = TGetProcAddress<tGetMouseWheelEventEnabled>(h, "_GetMouseWheelEventEnabled");
               _GetMpegStreamType = TGetProcAddress<tGetMpegStreamType>(h, "_GetMpegStreamType");
               _GetMultiplexedInputEmulation = TGetProcAddress<tGetMultiplexedInputEmulation>(h, "_GetMultiplexedInputEmulation");
               _GetMultiplexedRole = TGetProcAddress<tGetMultiplexedRole>(h, "_GetMultiplexedRole");
               _GetMultiplexedStabilizationDelay = TGetProcAddress<tGetMultiplexedStabilizationDelay>(h, "_GetMultiplexedStabilizationDelay");
               _GetMultiplexedSwitchDelay = TGetProcAddress<tGetMultiplexedSwitchDelay>(h, "_GetMultiplexedSwitchDelay");
               _GetMultiplexer = TGetProcAddress<tGetMultiplexer>(h, "_GetMultiplexer");
               _GetMultiplexerName = TGetProcAddress<tGetMultiplexerName>(h, "_GetMultiplexerName");
               _GetMultiplexers = TGetProcAddress<tGetMultiplexers>(h, "_GetMultiplexers");
               _GetMultiplexersCount = TGetProcAddress<tGetMultiplexersCount>(h, "_GetMultiplexersCount");
               _GetMultipurposeEncoderSettings = TGetProcAddress<tGetMultipurposeEncoderSettings>(h, "_GetMultipurposeEncoderSettings");
               _GetMuteAudioRendering = TGetProcAddress<tGetMuteAudioRendering>(h, "_GetMuteAudioRendering");
               _GetName = TGetProcAddress<tGetName>(h, "_GetName");
               _GetNDIBandwidthType = TGetProcAddress<tGetNDIBandwidthType>(h, "_GetNDIBandwidthType");
               _GetNDIGroups = TGetProcAddress<tGetNDIGroups>(h, "_GetNDIGroups");
               _GetNDIName = TGetProcAddress<tGetNDIName>(h, "_GetNDIName");
               _GetNDIReceiveTimeoutMs = TGetProcAddress<tGetNDIReceiveTimeoutMs>(h, "_GetNDIReceiveTimeoutMs");
               _GetNDISessions = TGetProcAddress<tGetNDISessions>(h, "_GetNDISessions");
               _GetNearestVideoHeight = TGetProcAddress<tGetNearestVideoHeight>(h, "_GetNearestVideoHeight");
               _GetNearestVideoSize = TGetProcAddress<tGetNearestVideoSize>(h, "_GetNearestVideoSize");
               _GetNearestVideoWidth = TGetProcAddress<tGetNearestVideoWidth>(h, "_GetNearestVideoWidth");
               _GetNetworkStreaming = TGetProcAddress<tGetNetworkStreaming>(h, "_GetNetworkStreaming");
               _GetNetworkStreamingType = TGetProcAddress<tGetNetworkStreamingType>(h, "_GetNetworkStreamingType");
               _GetNormalCursor = TGetProcAddress<tGetNormalCursor>(h, "_GetNormalCursor");
               _GetNotificationMethod = TGetProcAddress<tGetNotificationMethod>(h, "_GetNotificationMethod");
               _GetNotificationPriority = TGetProcAddress<tGetNotificationPriority>(h, "_GetNotificationPriority");
               _GetNotificationSleepTime = TGetProcAddress<tGetNotificationSleepTime>(h, "_GetNotificationSleepTime");
               _GetOnFrameBitmapEventSynchrone = TGetProcAddress<tGetOnFrameBitmapEventSynchrone>(h, "_GetOnFrameBitmapEventSynchrone");
               _GetOpenURLAsync = TGetProcAddress<tGetOpenURLAsync>(h, "_GetOpenURLAsync");
               _GetOverlayAfterTransform = TGetProcAddress<tGetOverlayAfterTransform>(h, "_GetOverlayAfterTransform");
               _GetPixelsDistance = TGetProcAddress<tGetPixelsDistance>(h, "_GetPixelsDistance");
               _GetPlayerAudioRendering = TGetProcAddress<tGetPlayerAudioRendering>(h, "_GetPlayerAudioRendering");
               _GetPlayerDuration = TGetProcAddress<tGetPlayerDuration>(h, "_GetPlayerDuration");
               _GetPlayerDVSize = TGetProcAddress<tGetPlayerDVSize>(h, "_GetPlayerDVSize");
               _GetPlayerFastSeekSpeedRatio = TGetProcAddress<tGetPlayerFastSeekSpeedRatio>(h, "_GetPlayerFastSeekSpeedRatio");
               _GetPlayerFileName = TGetProcAddress<tGetPlayerFileName>(h, "_GetPlayerFileName");
               _GetPlayerForcedCodec = TGetProcAddress<tGetPlayerForcedCodec>(h, "_GetPlayerForcedCodec");
               _GetPlayerFrameCount = TGetProcAddress<tGetPlayerFrameCount>(h, "_GetPlayerFrameCount");
               _GetPlayerFramePosition = TGetProcAddress<tGetPlayerFramePosition>(h, "_GetPlayerFramePosition");
               _GetPlayerFrameRate = TGetProcAddress<tGetPlayerFrameRate>(h, "_GetPlayerFrameRate");
               _GetPlayerHwAccel = TGetProcAddress<tGetPlayerHwAccel>(h, "_GetPlayerHwAccel");
               _GetPlayerOpenProgressPercent = TGetProcAddress<tGetPlayerOpenProgressPercent>(h, "_GetPlayerOpenProgressPercent");
               _GetPlayerRefreshPausedDisplay = TGetProcAddress<tGetPlayerRefreshPausedDisplay>(h, "_GetPlayerRefreshPausedDisplay");
               _GetPlayerRefreshPausedDisplayFrameRate = TGetProcAddress<tGetPlayerRefreshPausedDisplayFrameRate>(h, "_GetPlayerRefreshPausedDisplayFrameRate");
               _GetPlayerSpeedRatio = TGetProcAddress<tGetPlayerSpeedRatio>(h, "_GetPlayerSpeedRatio");
               _GetPlayerSpeedRatioConstantAudioPitch = TGetProcAddress<tGetPlayerSpeedRatioConstantAudioPitch>(h, "_GetPlayerSpeedRatioConstantAudioPitch");
               _GetPlayerState = TGetProcAddress<tGetPlayerState>(h, "_GetPlayerState");
               _GetPlayerTimePosition = TGetProcAddress<tGetPlayerTimePosition>(h, "_GetPlayerTimePosition");
               _GetPlayerTrackBarSynchrone = TGetProcAddress<tGetPlayerTrackBarSynchrone>(h, "_GetPlayerTrackBarSynchrone");
               _GetPlaylist = TGetProcAddress<tGetPlaylist>(h, "_GetPlaylist");
               _GetPlaylistIndex = TGetProcAddress<tGetPlaylistIndex>(h, "_GetPlaylistIndex");
               _GetPreallocCapFileCopiedAfterRecording = TGetProcAddress<tGetPreallocCapFileCopiedAfterRecording>(h, "_GetPreallocCapFileCopiedAfterRecording");
               _GetPreallocCapFileEnabled = TGetProcAddress<tGetPreallocCapFileEnabled>(h, "_GetPreallocCapFileEnabled");
               _GetPreallocCapFileName = TGetProcAddress<tGetPreallocCapFileName>(h, "_GetPreallocCapFileName");
               _GetPreallocCapFileSizeInMB = TGetProcAddress<tGetPreallocCapFileSizeInMB>(h, "_GetPreallocCapFileSizeInMB");
               _GetPreviewZoomSize = TGetProcAddress<tGetPreviewZoomSize>(h, "_GetPreviewZoomSize");
               _GetQuickDeviceInitialization = TGetProcAddress<tGetQuickDeviceInitialization>(h, "_GetQuickDeviceInitialization");
               _GetRawAudioSampleCapture = TGetProcAddress<tGetRawAudioSampleCapture>(h, "_GetRawAudioSampleCapture");
               _GetRawCaptureAsyncEvent = TGetProcAddress<tGetRawCaptureAsyncEvent>(h, "_GetRawCaptureAsyncEvent");
               _GetRawSampleCaptureLocation = TGetProcAddress<tGetRawSampleCaptureLocation>(h, "_GetRawSampleCaptureLocation");
               _GetRawVideoSampleCapture = TGetProcAddress<tGetRawVideoSampleCapture>(h, "_GetRawVideoSampleCapture");
               _GetRecordingAudioBitRate = TGetProcAddress<tGetRecordingAudioBitRate>(h, "_GetRecordingAudioBitRate");
               _GetRecordingBacktimedFramesCount = TGetProcAddress<tGetRecordingBacktimedFramesCount>(h, "_GetRecordingBacktimedFramesCount");
               _GetRecordingCanPause = TGetProcAddress<tGetRecordingCanPause>(h, "_GetRecordingCanPause");
               _GetRecordingDuration = TGetProcAddress<tGetRecordingDuration>(h, "_GetRecordingDuration");
               _GetRecordingFileName = TGetProcAddress<tGetRecordingFileName>(h, "_GetRecordingFileName");
               _GetRecordingFileSizeMaxInMB = TGetProcAddress<tGetRecordingFileSizeMaxInMB>(h, "_GetRecordingFileSizeMaxInMB");
               _GetRecordingFourCC = TGetProcAddress<tGetRecordingFourCC>(h, "_GetRecordingFourCC");
               _GetRecordingHeight = TGetProcAddress<tGetRecordingHeight>(h, "_GetRecordingHeight");
               _GetRecordingInNativeFormat = TGetProcAddress<tGetRecordingInNativeFormat>(h, "_GetRecordingInNativeFormat");
               _GetRecordingMethod = TGetProcAddress<tGetRecordingMethod>(h, "_GetRecordingMethod");
               _GetRecordingOnMotion_Enabled = TGetProcAddress<tGetRecordingOnMotion_Enabled>(h, "_GetRecordingOnMotion_Enabled");
               _GetRecordingOnMotion_MotionThreshold = TGetProcAddress<tGetRecordingOnMotion_MotionThreshold>(h, "_GetRecordingOnMotion_MotionThreshold");
               _GetRecordingOnMotion_NoMotionPauseDelayMs = TGetProcAddress<tGetRecordingOnMotion_NoMotionPauseDelayMs>(h, "_GetRecordingOnMotion_NoMotionPauseDelayMs");
               _GetRecordingPauseCreatesNewFile = TGetProcAddress<tGetRecordingPauseCreatesNewFile>(h, "_GetRecordingPauseCreatesNewFile");
               _GetRecordingSize = TGetProcAddress<tGetRecordingSize>(h, "_GetRecordingSize");
               _GetRecordingTimer = TGetProcAddress<tGetRecordingTimer>(h, "_GetRecordingTimer");
               _GetRecordingTimerInterval = TGetProcAddress<tGetRecordingTimerInterval>(h, "_GetRecordingTimerInterval");
               _GetRecordingVideoBitRate = TGetProcAddress<tGetRecordingVideoBitRate>(h, "_GetRecordingVideoBitRate");
               _GetRecordingWidth = TGetProcAddress<tGetRecordingWidth>(h, "_GetRecordingWidth");
               _GetReencodingIncludeAudioStream = TGetProcAddress<tGetReencodingIncludeAudioStream>(h, "_GetReencodingIncludeAudioStream");
               _GetReencodingIncludeVideoStream = TGetProcAddress<tGetReencodingIncludeVideoStream>(h, "_GetReencodingIncludeVideoStream");
               _GetReencodingMethod = TGetProcAddress<tGetReencodingMethod>(h, "_GetReencodingMethod");
               _GetReencodingNewVideoClip = TGetProcAddress<tGetReencodingNewVideoClip>(h, "_GetReencodingNewVideoClip");
               _GetReencodingSourceVideoClip = TGetProcAddress<tGetReencodingSourceVideoClip>(h, "_GetReencodingSourceVideoClip");
               _GetReencodingStartFrame = TGetProcAddress<tGetReencodingStartFrame>(h, "_GetReencodingStartFrame");
               _GetReencodingStartTime = TGetProcAddress<tGetReencodingStartTime>(h, "_GetReencodingStartTime");
               _GetReencodingStopFrame = TGetProcAddress<tGetReencodingStopFrame>(h, "_GetReencodingStopFrame");
               _GetReencodingStopTime = TGetProcAddress<tGetReencodingStopTime>(h, "_GetReencodingStopTime");
               _GetReencodingUseAudioCompressor = TGetProcAddress<tGetReencodingUseAudioCompressor>(h, "_GetReencodingUseAudioCompressor");
               _GetReencodingUseFrameGrabber = TGetProcAddress<tGetReencodingUseFrameGrabber>(h, "_GetReencodingUseFrameGrabber");
               _GetReencodingUseVideoCompressor = TGetProcAddress<tGetReencodingUseVideoCompressor>(h, "_GetReencodingUseVideoCompressor");
               _GetReencodingWMVOutput = TGetProcAddress<tGetReencodingWMVOutput>(h, "_GetReencodingWMVOutput");
               _GetRGBPixelAt = TGetProcAddress<tGetRGBPixelAt>(h, "_GetRGBPixelAt");
               _GetScreenRecordingLayeredWindows = TGetProcAddress<tGetScreenRecordingLayeredWindows>(h, "_GetScreenRecordingLayeredWindows");
               _GetScreenRecordingMonitor = TGetProcAddress<tGetScreenRecordingMonitor>(h, "_GetScreenRecordingMonitor");
               _GetScreenRecordingNonVisibleWindows = TGetProcAddress<tGetScreenRecordingNonVisibleWindows>(h, "_GetScreenRecordingNonVisibleWindows");
               _GetScreenRecordingSizePercent = TGetProcAddress<tGetScreenRecordingSizePercent>(h, "_GetScreenRecordingSizePercent");
               _GetScreenRecordingThroughClipboard = TGetProcAddress<tGetScreenRecordingThroughClipboard>(h, "_GetScreenRecordingThroughClipboard");
               _GetScreenRecordingWithCursor = TGetProcAddress<tGetScreenRecordingWithCursor>(h, "_GetScreenRecordingWithCursor");
               _GetSendToDV_DeviceIndex = TGetProcAddress<tGetSendToDV_DeviceIndex>(h, "_GetSendToDV_DeviceIndex");
               _GetSpeakerBalance = TGetProcAddress<tGetSpeakerBalance>(h, "_GetSpeakerBalance");
               _GetSpeakerControl = TGetProcAddress<tGetSpeakerControl>(h, "_GetSpeakerControl");
               _GetSpeakerVolume = TGetProcAddress<tGetSpeakerVolume>(h, "_GetSpeakerVolume");
               _GetStoragePath = TGetProcAddress<tGetStoragePath>(h, "_GetStoragePath");
               _GetStoragePathMode = TGetProcAddress<tGetStoragePathMode>(h, "_GetStoragePathMode");
               _GetStoreDeviceSettingsInRegistry = TGetProcAddress<tGetStoreDeviceSettingsInRegistry>(h, "_GetStoreDeviceSettingsInRegistry");
               _GetStreamingURL = TGetProcAddress<tGetStreamingURL>(h, "_GetStreamingURL");
               _GetStreamInterface_Format = TGetProcAddress<tGetStreamInterface_Format>(h, "_GetStreamInterface_Format");
               _GetStreamInterface_FrameRate = TGetProcAddress<tGetStreamInterface_FrameRate>(h, "_GetStreamInterface_FrameRate");
               _GetStreamInterface_IsRealTime = TGetProcAddress<tGetStreamInterface_IsRealTime>(h, "_GetStreamInterface_IsRealTime");
               _GetSyncCommands = TGetProcAddress<tGetSyncCommands>(h, "_GetSyncCommands");
               _GetSynchronizationRole = TGetProcAddress<tGetSynchronizationRole>(h, "_GetSynchronizationRole");
               _GetSynchronized = TGetProcAddress<tGetSynchronized>(h, "_GetSynchronized");
               _GetSyncPreview = TGetProcAddress<tGetSyncPreview>(h, "_GetSyncPreview");
               _GetSystemTempPath = TGetProcAddress<tGetSystemTempPath>(h, "_GetSystemTempPath");
               _GetTextOverlay_Align = TGetProcAddress<tGetTextOverlay_Align>(h, "_GetTextOverlay_Align");
               _GetTextOverlay_AlphaBlend = TGetProcAddress<tGetTextOverlay_AlphaBlend>(h, "_GetTextOverlay_AlphaBlend");
               _GetTextOverlay_AlphaBlendValue = TGetProcAddress<tGetTextOverlay_AlphaBlendValue>(h, "_GetTextOverlay_AlphaBlendValue");
               _GetTextOverlay_BkColor = TGetProcAddress<tGetTextOverlay_BkColor>(h, "_GetTextOverlay_BkColor");
               _GetTextOverlay_Enabled = TGetProcAddress<tGetTextOverlay_Enabled>(h, "_GetTextOverlay_Enabled");
               _GetTextOverlay_Font = TGetProcAddress<tGetTextOverlay_Font>(h, "_GetTextOverlay_Font");
               _GetTextOverlay_FontColor = TGetProcAddress<tGetTextOverlay_FontColor>(h, "_GetTextOverlay_FontColor");
               _GetTextOverlay_FontSize = TGetProcAddress<tGetTextOverlay_FontSize>(h, "_GetTextOverlay_FontSize");
               _GetTextOverlay_GradientColor = TGetProcAddress<tGetTextOverlay_GradientColor>(h, "_GetTextOverlay_GradientColor");
               _GetTextOverlay_GradientMode = TGetProcAddress<tGetTextOverlay_GradientMode>(h, "_GetTextOverlay_GradientMode");
               _GetTextOverlay_HighResFont = TGetProcAddress<tGetTextOverlay_HighResFont>(h, "_GetTextOverlay_HighResFont");
               _GetTextOverlay_Left = TGetProcAddress<tGetTextOverlay_Left>(h, "_GetTextOverlay_Left");
               _GetTextOverlay_Orientation = TGetProcAddress<tGetTextOverlay_Orientation>(h, "_GetTextOverlay_Orientation");
               _GetTextOverlay_Right = TGetProcAddress<tGetTextOverlay_Right>(h, "_GetTextOverlay_Right");
               _GetTextOverlay_Scrolling = TGetProcAddress<tGetTextOverlay_Scrolling>(h, "_GetTextOverlay_Scrolling");
               _GetTextOverlay_ScrollingSpeed = TGetProcAddress<tGetTextOverlay_ScrollingSpeed>(h, "_GetTextOverlay_ScrollingSpeed");
               _GetTextOverlay_Shadow = TGetProcAddress<tGetTextOverlay_Shadow>(h, "_GetTextOverlay_Shadow");
               _GetTextOverlay_ShadowColor = TGetProcAddress<tGetTextOverlay_ShadowColor>(h, "_GetTextOverlay_ShadowColor");
               _GetTextOverlay_ShadowDirection = TGetProcAddress<tGetTextOverlay_ShadowDirection>(h, "_GetTextOverlay_ShadowDirection");
               _GetTextOverlay_String = TGetProcAddress<tGetTextOverlay_String>(h, "_GetTextOverlay_String");
               _GetTextOverlay_TargetDisplay = TGetProcAddress<tGetTextOverlay_TargetDisplay>(h, "_GetTextOverlay_TargetDisplay");
               _GetTextOverlay_Top = TGetProcAddress<tGetTextOverlay_Top>(h, "_GetTextOverlay_Top");
               _GetTextOverlay_Transparent = TGetProcAddress<tGetTextOverlay_Transparent>(h, "_GetTextOverlay_Transparent");
               _GetTextOverlay_VideoAlignment = TGetProcAddress<tGetTextOverlay_VideoAlignment>(h, "_GetTextOverlay_VideoAlignment");
               _GetTextOverlayAlign = TGetProcAddress<tGetTextOverlayAlign>(h, "_GetTextOverlayAlign");
               _GetTextOverlayAlphaBlend = TGetProcAddress<tGetTextOverlayAlphaBlend>(h, "_GetTextOverlayAlphaBlend");
               _GetTextOverlayAlphaBlendValue = TGetProcAddress<tGetTextOverlayAlphaBlendValue>(h, "_GetTextOverlayAlphaBlendValue");
               _GetTextOverlayBkColor = TGetProcAddress<tGetTextOverlayBkColor>(h, "_GetTextOverlayBkColor");
               _GetTextOverlayEnabled = TGetProcAddress<tGetTextOverlayEnabled>(h, "_GetTextOverlayEnabled");
               _GetTextOverlayFont = TGetProcAddress<tGetTextOverlayFont>(h, "_GetTextOverlayFont");
               _GetTextOverlayFontColor = TGetProcAddress<tGetTextOverlayFontColor>(h, "_GetTextOverlayFontColor");
               _GetTextOverlayFontSize = TGetProcAddress<tGetTextOverlayFontSize>(h, "_GetTextOverlayFontSize");
               _GetTextOverlayGradientColor = TGetProcAddress<tGetTextOverlayGradientColor>(h, "_GetTextOverlayGradientColor");
               _GetTextOverlayGradientMode = TGetProcAddress<tGetTextOverlayGradientMode>(h, "_GetTextOverlayGradientMode");
               _GetTextOverlayHighResFont = TGetProcAddress<tGetTextOverlayHighResFont>(h, "_GetTextOverlayHighResFont");
               _GetTextOverlayLeft = TGetProcAddress<tGetTextOverlayLeft>(h, "_GetTextOverlayLeft");
               _GetTextOverlayOrientation = TGetProcAddress<tGetTextOverlayOrientation>(h, "_GetTextOverlayOrientation");
               _GetTextOverlayRight = TGetProcAddress<tGetTextOverlayRight>(h, "_GetTextOverlayRight");
               _GetTextOverlayScrolling = TGetProcAddress<tGetTextOverlayScrolling>(h, "_GetTextOverlayScrolling");
               _GetTextOverlayScrollingSpeed = TGetProcAddress<tGetTextOverlayScrollingSpeed>(h, "_GetTextOverlayScrollingSpeed");
               _GetTextOverlaySelector = TGetProcAddress<tGetTextOverlaySelector>(h, "_GetTextOverlaySelector");
               _GetTextOverlayShadow = TGetProcAddress<tGetTextOverlayShadow>(h, "_GetTextOverlayShadow");
               _GetTextOverlayShadowColor = TGetProcAddress<tGetTextOverlayShadowColor>(h, "_GetTextOverlayShadowColor");
               _GetTextOverlayShadowDirection = TGetProcAddress<tGetTextOverlayShadowDirection>(h, "_GetTextOverlayShadowDirection");
               _GetTextOverlayString = TGetProcAddress<tGetTextOverlayString>(h, "_GetTextOverlayString");
               _GetTextOverlayTargetDisplay = TGetProcAddress<tGetTextOverlayTargetDisplay>(h, "_GetTextOverlayTargetDisplay");
               _GetTextOverlayTop = TGetProcAddress<tGetTextOverlayTop>(h, "_GetTextOverlayTop");
               _GetTextOverlayTransparent = TGetProcAddress<tGetTextOverlayTransparent>(h, "_GetTextOverlayTransparent");
               _GetTextOverlayVideoAlignment = TGetProcAddress<tGetTextOverlayVideoAlignment>(h, "_GetTextOverlayVideoAlignment");
               _GetThirdPartyDeinterlacer = TGetProcAddress<tGetThirdPartyDeinterlacer>(h, "_GetThirdPartyDeinterlacer");
               _GetTimeCodeReaderAvailable = TGetProcAddress<tGetTimeCodeReaderAvailable>(h, "_GetTimeCodeReaderAvailable");
               _GetTranslatedCoordinates = TGetProcAddress<tGetTranslatedCoordinates>(h, "_GetTranslatedCoordinates");
               _GetTranslateMouseCoordinates = TGetProcAddress<tGetTranslateMouseCoordinates>(h, "_GetTranslateMouseCoordinates");
               _GetTunerFrequency = TGetProcAddress<tGetTunerFrequency>(h, "_GetTunerFrequency");
               _GetTunerMode = TGetProcAddress<tGetTunerMode>(h, "_GetTunerMode");
               _GetTVChannel = TGetProcAddress<tGetTVChannel>(h, "_GetTVChannel");
               _GetTVChannelInfo = TGetProcAddress<tGetTVChannelInfo>(h, "_GetTVChannelInfo");
               _GetTVCountryCode = TGetProcAddress<tGetTVCountryCode>(h, "_GetTVCountryCode");
               _GetTVTunerInputType = TGetProcAddress<tGetTVTunerInputType>(h, "_GetTVTunerInputType");
               _GetTVUseFrequencyOverrides = TGetProcAddress<tGetTVUseFrequencyOverrides>(h, "_GetTVUseFrequencyOverrides");
               _GetUniqueID = TGetProcAddress<tGetUniqueID>(h, "_GetUniqueID");
               _GetUseClock = TGetProcAddress<tGetUseClock>(h, "_GetUseClock");
               _Getv360_AspectRatio = TGetProcAddress<tGetv360_AspectRatio>(h, "_Getv360_AspectRatio");
               _Getv360_Enabled = TGetProcAddress<tGetv360_Enabled>(h, "_Getv360_Enabled");
               _Getv360_MasterAngle = TGetProcAddress<tGetv360_MasterAngle>(h, "_Getv360_MasterAngle");
               _Getv360_MouseAction = TGetProcAddress<tGetv360_MouseAction>(h, "_Getv360_MouseAction");
               _Getv360_MouseActionPercent = TGetProcAddress<tGetv360_MouseActionPercent>(h, "_Getv360_MouseActionPercent");
               _GetVCRHorizontalLocking = TGetProcAddress<tGetVCRHorizontalLocking>(h, "_GetVCRHorizontalLocking");
               _GetVersion = TGetProcAddress<tGetVersion>(h, "_GetVersion");
               _GetVideoCodec = TGetProcAddress<tGetVideoCodec>(h, "_GetVideoCodec");
               _GetVideoCompression_DataRate = TGetProcAddress<tGetVideoCompression_DataRate>(h, "_GetVideoCompression_DataRate");
               _GetVideoCompression_KeyFrameRate = TGetProcAddress<tGetVideoCompression_KeyFrameRate>(h, "_GetVideoCompression_KeyFrameRate");
               _GetVideoCompression_PFramesPerKeyFrame = TGetProcAddress<tGetVideoCompression_PFramesPerKeyFrame>(h, "_GetVideoCompression_PFramesPerKeyFrame");
               _GetVideoCompression_Quality = TGetProcAddress<tGetVideoCompression_Quality>(h, "_GetVideoCompression_Quality");
               _GetVideoCompression_WindowSize = TGetProcAddress<tGetVideoCompression_WindowSize>(h, "_GetVideoCompression_WindowSize");
               _GetVideoCompressionSettings = TGetProcAddress<tGetVideoCompressionSettings>(h, "_GetVideoCompressionSettings");
               _GetVideoCompressor = TGetProcAddress<tGetVideoCompressor>(h, "_GetVideoCompressor");
               _GetVideoCompressorName = TGetProcAddress<tGetVideoCompressorName>(h, "_GetVideoCompressorName");
               _GetVideoCompressors = TGetProcAddress<tGetVideoCompressors>(h, "_GetVideoCompressors");
               _GetVideoCompressorsCount = TGetProcAddress<tGetVideoCompressorsCount>(h, "_GetVideoCompressorsCount");
               _GetVideoControlMode = TGetProcAddress<tGetVideoControlMode>(h, "_GetVideoControlMode");
               _GetVideoControlSettings = TGetProcAddress<tGetVideoControlSettings>(h, "_GetVideoControlSettings");
               _GetVideoCursor = TGetProcAddress<tGetVideoCursor>(h, "_GetVideoCursor");
               _GetVideoDelay = TGetProcAddress<tGetVideoDelay>(h, "_GetVideoDelay");
               _GetVideoDevice = TGetProcAddress<tGetVideoDevice>(h, "_GetVideoDevice");
               _GetVideoDeviceName = TGetProcAddress<tGetVideoDeviceName>(h, "_GetVideoDeviceName");
               _GetVideoDevices = TGetProcAddress<tGetVideoDevices>(h, "_GetVideoDevices");
               _GetVideoDevicesCount = TGetProcAddress<tGetVideoDevicesCount>(h, "_GetVideoDevicesCount");
               _GetVideoDevicesId = TGetProcAddress<tGetVideoDevicesId>(h, "_GetVideoDevicesId");
               _GetVideoDoubleBuffered = TGetProcAddress<tGetVideoDoubleBuffered>(h, "_GetVideoDoubleBuffered");
               _GetVideoFormat = TGetProcAddress<tGetVideoFormat>(h, "_GetVideoFormat");
               _GetVideoFormats = TGetProcAddress<tGetVideoFormats>(h, "_GetVideoFormats");
               _GetVideoFormatsCount = TGetProcAddress<tGetVideoFormatsCount>(h, "_GetVideoFormatsCount");
               _GetVideoFromImages_BitmapsSortedBy = TGetProcAddress<tGetVideoFromImages_BitmapsSortedBy>(h, "_GetVideoFromImages_BitmapsSortedBy");
               _GetVideoFromImages_RepeatIndefinitely = TGetProcAddress<tGetVideoFromImages_RepeatIndefinitely>(h, "_GetVideoFromImages_RepeatIndefinitely");
               _GetVideoFromImages_SourceDirectory = TGetProcAddress<tGetVideoFromImages_SourceDirectory>(h, "_GetVideoFromImages_SourceDirectory");
               _GetVideoFromImages_TemporaryFile = TGetProcAddress<tGetVideoFromImages_TemporaryFile>(h, "_GetVideoFromImages_TemporaryFile");
               _GetVideoHeight = TGetProcAddress<tGetVideoHeight>(h, "_GetVideoHeight");
               _GetVideoHeight_PreferredAspectRatio = TGetProcAddress<tGetVideoHeight_PreferredAspectRatio>(h, "_GetVideoHeight_PreferredAspectRatio");
               _GetVideoHeightFromIndex = TGetProcAddress<tGetVideoHeightFromIndex>(h, "_GetVideoHeightFromIndex");
               _GetVideoInput = TGetProcAddress<tGetVideoInput>(h, "_GetVideoInput");
               _GetVideoInputs = TGetProcAddress<tGetVideoInputs>(h, "_GetVideoInputs");
               _GetVideoInputsCount = TGetProcAddress<tGetVideoInputsCount>(h, "_GetVideoInputsCount");
               _GetVideoProcessingBrightness = TGetProcAddress<tGetVideoProcessingBrightness>(h, "_GetVideoProcessingBrightness");
               _GetVideoProcessingContrast = TGetProcAddress<tGetVideoProcessingContrast>(h, "_GetVideoProcessingContrast");
               _GetVideoProcessingDeinterlacing = TGetProcAddress<tGetVideoProcessingDeinterlacing>(h, "_GetVideoProcessingDeinterlacing");
               _GetVideoProcessingGrayScale = TGetProcAddress<tGetVideoProcessingGrayScale>(h, "_GetVideoProcessingGrayScale");
               _GetVideoProcessingHue = TGetProcAddress<tGetVideoProcessingHue>(h, "_GetVideoProcessingHue");
               _GetVideoProcessingInvertColors = TGetProcAddress<tGetVideoProcessingInvertColors>(h, "_GetVideoProcessingInvertColors");
               _GetVideoProcessingLeftRight = TGetProcAddress<tGetVideoProcessingLeftRight>(h, "_GetVideoProcessingLeftRight");
               _GetVideoProcessingPixellization = TGetProcAddress<tGetVideoProcessingPixellization>(h, "_GetVideoProcessingPixellization");
               _GetVideoProcessingRotation = TGetProcAddress<tGetVideoProcessingRotation>(h, "_GetVideoProcessingRotation");
               _GetVideoProcessingRotationCustomAngle = TGetProcAddress<tGetVideoProcessingRotationCustomAngle>(h, "_GetVideoProcessingRotationCustomAngle");
               _GetVideoProcessingSaturation = TGetProcAddress<tGetVideoProcessingSaturation>(h, "_GetVideoProcessingSaturation");
               _GetVideoProcessingTopDown = TGetProcAddress<tGetVideoProcessingTopDown>(h, "_GetVideoProcessingTopDown");
               _GetVideoQualitySettings = TGetProcAddress<tGetVideoQualitySettings>(h, "_GetVideoQualitySettings");
               _GetVideoRenderer = TGetProcAddress<tGetVideoRenderer>(h, "_GetVideoRenderer");
               _GetVideoRendererExternal = TGetProcAddress<tGetVideoRendererExternal>(h, "_GetVideoRendererExternal");
               _GetVideoRendererExternalIndex = TGetProcAddress<tGetVideoRendererExternalIndex>(h, "_GetVideoRendererExternalIndex");
               _GetVideoRendererPriority = TGetProcAddress<tGetVideoRendererPriority>(h, "_GetVideoRendererPriority");
               _GetVideoSize = TGetProcAddress<tGetVideoSize>(h, "_GetVideoSize");
               _GetVideoSizeFromIndex = TGetProcAddress<tGetVideoSizeFromIndex>(h, "_GetVideoSizeFromIndex");
               _GetVideoSizes = TGetProcAddress<tGetVideoSizes>(h, "_GetVideoSizes");
               _GetVideoSizesCount = TGetProcAddress<tGetVideoSizesCount>(h, "_GetVideoSizesCount");
               _GetVideoSource = TGetProcAddress<tGetVideoSource>(h, "_GetVideoSource");
               _GetVideoSource_FileOrURL = TGetProcAddress<tGetVideoSource_FileOrURL>(h, "_GetVideoSource_FileOrURL");
               _GetVideoSource_FileOrURL_StartTime = TGetProcAddress<tGetVideoSource_FileOrURL_StartTime>(h, "_GetVideoSource_FileOrURL_StartTime");
               _GetVideoSource_FileOrURL_StopTime = TGetProcAddress<tGetVideoSource_FileOrURL_StopTime>(h, "_GetVideoSource_FileOrURL_StopTime");
               _GetVideoSources = TGetProcAddress<tGetVideoSources>(h, "_GetVideoSources");
               _GetVideoSourcesCount = TGetProcAddress<tGetVideoSourcesCount>(h, "_GetVideoSourcesCount");
               _GetVideoStreamNumber = TGetProcAddress<tGetVideoStreamNumber>(h, "_GetVideoStreamNumber");
               _GetVideoSubtype = TGetProcAddress<tGetVideoSubtype>(h, "_GetVideoSubtype");
               _GetVideoSubtypes = TGetProcAddress<tGetVideoSubtypes>(h, "_GetVideoSubtypes");
               _GetVideoSubtypesCount = TGetProcAddress<tGetVideoSubtypesCount>(h, "_GetVideoSubtypesCount");
               _GetVideoVisibleWhenStopped = TGetProcAddress<tGetVideoVisibleWhenStopped>(h, "_GetVideoVisibleWhenStopped");
               _GetVideoWidth = TGetProcAddress<tGetVideoWidth>(h, "_GetVideoWidth");
               _GetVideoWidth_PreferredAspectRatio = TGetProcAddress<tGetVideoWidth_PreferredAspectRatio>(h, "_GetVideoWidth_PreferredAspectRatio");
               _GetVideoWidthFromIndex = TGetProcAddress<tGetVideoWidthFromIndex>(h, "_GetVideoWidthFromIndex");
               _GetVirtualAudioStreamControl = TGetProcAddress<tGetVirtualAudioStreamControl>(h, "_GetVirtualAudioStreamControl");
               _GetVirtualVideoStreamControl = TGetProcAddress<tGetVirtualVideoStreamControl>(h, "_GetVirtualVideoStreamControl");
               _GetVMR9ImageAdjustmentBounds = TGetProcAddress<tGetVMR9ImageAdjustmentBounds>(h, "_GetVMR9ImageAdjustmentBounds");
               _GetVuMeter = TGetProcAddress<tGetVuMeter>(h, "_GetVuMeter");
               _GetVuMeter_Enabled = TGetProcAddress<tGetVuMeter_Enabled>(h, "_GetVuMeter_Enabled");
               _GetVUMeterSetting = TGetProcAddress<tGetVUMeterSetting>(h, "_GetVUMeterSetting");
               _GetWebcamStillCaptureButton = TGetProcAddress<tGetWebcamStillCaptureButton>(h, "_GetWebcamStillCaptureButton");
               _GetZoomCoeff = TGetProcAddress<tGetZoomCoeff>(h, "_GetZoomCoeff");
               _GetZoomXCenter = TGetProcAddress<tGetZoomXCenter>(h, "_GetZoomXCenter");
               _GetZoomYCenter = TGetProcAddress<tGetZoomYCenter>(h, "_GetZoomYCenter");
               _GraphState = TGetProcAddress<tGraphState>(h, "_GraphState");
               _InitSyncMgr = TGetProcAddress<tInitSyncMgr>(h, "_InitSyncMgr");
               _IsAudioDeviceASoundCard = TGetProcAddress<tIsAudioDeviceASoundCard>(h, "_IsAudioDeviceASoundCard");
               _IsAudioDeviceConnected = TGetProcAddress<tIsAudioDeviceConnected>(h, "_IsAudioDeviceConnected");
               _IsAudioRendererConnected = TGetProcAddress<tIsAudioRendererConnected>(h, "_IsAudioRendererConnected");
               _IsCameraControlSettingAvailable = TGetProcAddress<tIsCameraControlSettingAvailable>(h, "_IsCameraControlSettingAvailable");
               _IsDialogAvailable = TGetProcAddress<tIsDialogAvailable>(h, "_IsDialogAvailable");
               _IsDirectX8OrHigherInstalled = TGetProcAddress<tIsDirectX8OrHigherInstalled>(h, "_IsDirectX8OrHigherInstalled");
               _IsDVDevice = TGetProcAddress<tIsDVDevice>(h, "_IsDVDevice");
               _IsPlaylistActive = TGetProcAddress<tIsPlaylistActive>(h, "_IsPlaylistActive");
               _IsPreviewStarted = TGetProcAddress<tIsPreviewStarted>(h, "_IsPreviewStarted");
               _IsServerResponding = TGetProcAddress<tIsServerResponding>(h, "_IsServerResponding");
               _IsURLResponding = TGetProcAddress<tIsURLResponding>(h, "_IsURLResponding");
               _IsURLVideoStreamAvailable = TGetProcAddress<tIsURLVideoStreamAvailable>(h, "_IsURLVideoStreamAvailable");
               _IsVideoControlModeAvailable = TGetProcAddress<tIsVideoControlModeAvailable>(h, "_IsVideoControlModeAvailable");
               _IsVideoDeviceConnected = TGetProcAddress<tIsVideoDeviceConnected>(h, "_IsVideoDeviceConnected");
               _IsVideoQualitySettingAvailable = TGetProcAddress<tIsVideoQualitySettingAvailable>(h, "_IsVideoQualitySettingAvailable");
               _IsVideoSignalDetected = TGetProcAddress<tIsVideoSignalDetected>(h, "_IsVideoSignalDetected");
               _IsVMR9ImageAdjustmentAvailable = TGetProcAddress<tIsVMR9ImageAdjustmentAvailable>(h, "_IsVMR9ImageAdjustmentAvailable");
               _LoadCompressorSettingsFromDataString = TGetProcAddress<tLoadCompressorSettingsFromDataString>(h, "_LoadCompressorSettingsFromDataString");
               _LoadCompressorSettingsFromTextFile = TGetProcAddress<tLoadCompressorSettingsFromTextFile>(h, "_LoadCompressorSettingsFromTextFile");
               _MixAudioSamples = TGetProcAddress<tMixAudioSamples>(h, "_MixAudioSamples");
               _Mixer_Activation = TGetProcAddress<tMixer_Activation>(h, "_Mixer_Activation");
               _Mixer_AddAudioToMixer = TGetProcAddress<tMixer_AddAudioToMixer>(h, "_Mixer_AddAudioToMixer");
               _Mixer_AddToMixer = TGetProcAddress<tMixer_AddToMixer>(h, "_Mixer_AddToMixer");
               _Mixer_AudioActivation = TGetProcAddress<tMixer_AudioActivation>(h, "_Mixer_AudioActivation");
               _Mixer_RemoveAudioFromMixer = TGetProcAddress<tMixer_RemoveAudioFromMixer>(h, "_Mixer_RemoveAudioFromMixer");
               _Mixer_RemoveFromMixer = TGetProcAddress<tMixer_RemoveFromMixer>(h, "_Mixer_RemoveFromMixer");
               _Mixer_SetOverlayAttributes = TGetProcAddress<tMixer_SetOverlayAttributes>(h, "_Mixer_SetOverlayAttributes");
               _Mixer_SetupPIPFromSource = TGetProcAddress<tMixer_SetupPIPFromSource>(h, "_Mixer_SetupPIPFromSource");
               _Monitor_Primary_Index = TGetProcAddress<tMonitor_Primary_Index>(h, "_Monitor_Primary_Index");
               _MonitorBounds = TGetProcAddress<tMonitorBounds>(h, "_MonitorBounds");
               _MonitorsCount = TGetProcAddress<tMonitorsCount>(h, "_MonitorsCount");
               _MotionDetector_CellColorIntensity = TGetProcAddress<tMotionDetector_CellColorIntensity>(h, "_MotionDetector_CellColorIntensity");
               _MotionDetector_CellMotionRatio = TGetProcAddress<tMotionDetector_CellMotionRatio>(h, "_MotionDetector_CellMotionRatio");
               _MotionDetector_Get2DTextGrid = TGetProcAddress<tMotionDetector_Get2DTextGrid>(h, "_MotionDetector_Get2DTextGrid");
               _MotionDetector_Get2DTextMotion = TGetProcAddress<tMotionDetector_Get2DTextMotion>(h, "_MotionDetector_Get2DTextMotion");
               _MotionDetector_GetCellLocation = TGetProcAddress<tMotionDetector_GetCellLocation>(h, "_MotionDetector_GetCellLocation");
               _MotionDetector_GetCellSensitivity = TGetProcAddress<tMotionDetector_GetCellSensitivity>(h, "_MotionDetector_GetCellSensitivity");
               _MotionDetector_GetCellSize = TGetProcAddress<tMotionDetector_GetCellSize>(h, "_MotionDetector_GetCellSize");
               _MotionDetector_GlobalColorIntensity = TGetProcAddress<tMotionDetector_GlobalColorIntensity>(h, "_MotionDetector_GlobalColorIntensity");
               _MotionDetector_GloballyIncOrDecSensitivity = TGetProcAddress<tMotionDetector_GloballyIncOrDecSensitivity>(h, "_MotionDetector_GloballyIncOrDecSensitivity");
               _MotionDetector_Reset = TGetProcAddress<tMotionDetector_Reset>(h, "_MotionDetector_Reset");
               _MotionDetector_ResetGlobalSensitivity = TGetProcAddress<tMotionDetector_ResetGlobalSensitivity>(h, "_MotionDetector_ResetGlobalSensitivity");
               _MotionDetector_SetCellSensitivity = TGetProcAddress<tMotionDetector_SetCellSensitivity>(h, "_MotionDetector_SetCellSensitivity");
               _MotionDetector_SetGridSize = TGetProcAddress<tMotionDetector_SetGridSize>(h, "_MotionDetector_SetGridSize");
               _MotionDetector_ShowGridDialog = TGetProcAddress<tMotionDetector_ShowGridDialog>(h, "_MotionDetector_ShowGridDialog");
               _MotionDetector_TriggerNow = TGetProcAddress<tMotionDetector_TriggerNow>(h, "_MotionDetector_TriggerNow");
               _MotionDetector_UseThisReferenceSample = TGetProcAddress<tMotionDetector_UseThisReferenceSample>(h, "_MotionDetector_UseThisReferenceSample");
               _MPEGProgramSetting = TGetProcAddress<tMPEGProgramSetting>(h, "_MPEGProgramSetting");
               _MultiplexerIndex = TGetProcAddress<tMultiplexerIndex>(h, "_MultiplexerIndex");
               _MultipurposeEncoder_Convert100nsToHhMmSsZzz = TGetProcAddress<tMultipurposeEncoder_Convert100nsToHhMmSsZzz>(h, "_MultipurposeEncoder_Convert100nsToHhMmSsZzz");
               _MultipurposeEncoder_GetCurrentInfo = TGetProcAddress<tMultipurposeEncoder_GetCurrentInfo>(h, "_MultipurposeEncoder_GetCurrentInfo");
               _MultipurposeEncoder_GetLastLog = TGetProcAddress<tMultipurposeEncoder_GetLastLog>(h, "_MultipurposeEncoder_GetLastLog");
               _MultipurposeEncoder_QuickConfigure_UDPStreaming_H264 = TGetProcAddress<tMultipurposeEncoder_QuickConfigure_UDPStreaming_H264>(h, "_MultipurposeEncoder_QuickConfigure_UDPStreaming_H264");
               _MultipurposeEncoder_ReindexClip = TGetProcAddress<tMultipurposeEncoder_ReindexClip>(h, "_MultipurposeEncoder_ReindexClip");
               _NotifyPlayerTrackbarAction = TGetProcAddress<tNotifyPlayerTrackbarAction>(h, "_NotifyPlayerTrackbarAction");
               _ONVIF_GetBool = TGetProcAddress<tONVIF_GetBool>(h, "_ONVIF_GetBool");
               _ONVIF_GetDouble = TGetProcAddress<tONVIF_GetDouble>(h, "_ONVIF_GetDouble");
               _ONVIF_GetInt = TGetProcAddress<tONVIF_GetInt>(h, "_ONVIF_GetInt");
               _ONVIF_GetStr = TGetProcAddress<tONVIF_GetStr>(h, "_ONVIF_GetStr");
               _ONVIF_SetBool = TGetProcAddress<tONVIF_SetBool>(h, "_ONVIF_SetBool");
               _ONVIF_SetDouble = TGetProcAddress<tONVIF_SetDouble>(h, "_ONVIF_SetDouble");
               _ONVIF_SetInt = TGetProcAddress<tONVIF_SetInt>(h, "_ONVIF_SetInt");
               _ONVIF_SetStr = TGetProcAddress<tONVIF_SetStr>(h, "_ONVIF_SetStr");
               _ONVIFDeviceInfo = TGetProcAddress<tONVIFDeviceInfo>(h, "_ONVIFDeviceInfo");
               _ONVIFPTZGetLimits = TGetProcAddress<tONVIFPTZGetLimits>(h, "_ONVIFPTZGetLimits");
               _ONVIFPTZGetPosition = TGetProcAddress<tONVIFPTZGetPosition>(h, "_ONVIFPTZGetPosition");
               _ONVIFPTZPreset = TGetProcAddress<tONVIFPTZPreset>(h, "_ONVIFPTZPreset");
               _ONVIFPTZSendAuxiliaryCommand = TGetProcAddress<tONVIFPTZSendAuxiliaryCommand>(h, "_ONVIFPTZSendAuxiliaryCommand");
               _ONVIFPTZSetPosition = TGetProcAddress<tONVIFPTZSetPosition>(h, "_ONVIFPTZSetPosition");
               _ONVIFPTZStartMove = TGetProcAddress<tONVIFPTZStartMove>(h, "_ONVIFPTZStartMove");
               _ONVIFPTZStopMove = TGetProcAddress<tONVIFPTZStopMove>(h, "_ONVIFPTZStopMove");
               _ONVIFSnapShot = TGetProcAddress<tONVIFSnapShot>(h, "_ONVIFSnapShot");
               _OpenDVD = TGetProcAddress<tOpenDVD>(h, "_OpenDVD");
               _OpenPlayer = TGetProcAddress<tOpenPlayer>(h, "_OpenPlayer");
               _OpenPlayerAtFramePositions = TGetProcAddress<tOpenPlayerAtFramePositions>(h, "_OpenPlayerAtFramePositions");
               _OpenPlayerAtTimePositions = TGetProcAddress<tOpenPlayerAtTimePositions>(h, "_OpenPlayerAtTimePositions");
               _PausePlayer = TGetProcAddress<tPausePlayer>(h, "_PausePlayer");
               _PausePreview = TGetProcAddress<tPausePreview>(h, "_PausePreview");
               _PauseRecording = TGetProcAddress<tPauseRecording>(h, "_PauseRecording");
               _PlayerFrameStep = TGetProcAddress<tPlayerFrameStep>(h, "_PlayerFrameStep");
               _Playlist = TGetProcAddress<tPlaylist>(h, "_Playlist");
               _PointGreyConfig = TGetProcAddress<tPointGreyConfig>(h, "_PointGreyConfig");
               _PutMiscDeviceControl = TGetProcAddress<tPutMiscDeviceControl>(h, "_PutMiscDeviceControl");
               _RecordingKBytesWrittenToDisk = TGetProcAddress<tRecordingKBytesWrittenToDisk>(h, "_RecordingKBytesWrittenToDisk");
               _RecordToNewFileNow = TGetProcAddress<tRecordToNewFileNow>(h, "_RecordToNewFileNow");
               _ReencodeVideoClip = TGetProcAddress<tReencodeVideoClip>(h, "_ReencodeVideoClip");
               _RefreshDevicesAndCompressorsLists = TGetProcAddress<tRefreshDevicesAndCompressorsLists>(h, "_RefreshDevicesAndCompressorsLists");
               _RefreshPlayerOverlays = TGetProcAddress<tRefreshPlayerOverlays>(h, "_RefreshPlayerOverlays");
               _ResetPreview = TGetProcAddress<tResetPreview>(h, "_ResetPreview");
               _ResetVideoDeviceSettings = TGetProcAddress<tResetVideoDeviceSettings>(h, "_ResetVideoDeviceSettings");
               _ResumePreview = TGetProcAddress<tResumePreview>(h, "_ResumePreview");
               _ResumeRecording = TGetProcAddress<tResumeRecording>(h, "_ResumeRecording");
               _RetrieveInitialXYAfterRotation = TGetProcAddress<tRetrieveInitialXYAfterRotation>(h, "_RetrieveInitialXYAfterRotation");
               _RewindPlayer = TGetProcAddress<tRewindPlayer>(h, "_RewindPlayer");
               _RunPlayer = TGetProcAddress<tRunPlayer>(h, "_RunPlayer");
               _RunPlayerBackwards = TGetProcAddress<tRunPlayerBackwards>(h, "_RunPlayerBackwards");
               _SaveCompressorSettingsToDataString = TGetProcAddress<tSaveCompressorSettingsToDataString>(h, "_SaveCompressorSettingsToDataString");
               _SaveCompressorSettingsToTextFile = TGetProcAddress<tSaveCompressorSettingsToTextFile>(h, "_SaveCompressorSettingsToTextFile");
               _ScheduleNextActionAtAbsoluteDateTime = TGetProcAddress<tScheduleNextActionAtAbsoluteDateTime>(h, "_ScheduleNextActionAtAbsoluteDateTime");
               _ScheduleNextActionAtAbsoluteTime = TGetProcAddress<tScheduleNextActionAtAbsoluteTime>(h, "_ScheduleNextActionAtAbsoluteTime");
               _ScheduleNextActionFromNow = TGetProcAddress<tScheduleNextActionFromNow>(h, "_ScheduleNextActionFromNow");
               _ScreenRecordingUsingCoordinates = TGetProcAddress<tScreenRecordingUsingCoordinates>(h, "_ScreenRecordingUsingCoordinates");
               _SendCameraCommand = TGetProcAddress<tSendCameraCommand>(h, "_SendCameraCommand");
               _SendDVCommand = TGetProcAddress<tSendDVCommand>(h, "_SendDVCommand");
               _SendImageToVideoFromBitmaps = TGetProcAddress<tSendImageToVideoFromBitmaps>(h, "_SendImageToVideoFromBitmaps");
               _SendImageToVideoFromBitmaps2 = TGetProcAddress<tSendImageToVideoFromBitmaps2>(h, "_SendImageToVideoFromBitmaps2");
               _SendIPCameraCommand = TGetProcAddress<tSendIPCameraCommand>(h, "_SendIPCameraCommand");
               _Set_OnDeviceArrivalOrRemoval = TGetProcAddress<tSet_OnDeviceArrivalOrRemoval>(h, "_Set_OnDeviceArrivalOrRemoval");
               _SetAdjustOverlayAspectRatio = TGetProcAddress<tSetAdjustOverlayAspectRatio>(h, "_SetAdjustOverlayAspectRatio");
               _SetAdjustPixelAspectRatio = TGetProcAddress<tSetAdjustPixelAspectRatio>(h, "_SetAdjustPixelAspectRatio");
               _SetAero = TGetProcAddress<tSetAero>(h, "_SetAero");
               _SetAnalogVideoStandard = TGetProcAddress<tSetAnalogVideoStandard>(h, "_SetAnalogVideoStandard");
               _SetApplicationPriority = TGetProcAddress<tSetApplicationPriority>(h, "_SetApplicationPriority");
               _SetASFAudioBitRate = TGetProcAddress<tSetASFAudioBitRate>(h, "_SetASFAudioBitRate");
               _SetASFAudioChannels = TGetProcAddress<tSetASFAudioChannels>(h, "_SetASFAudioChannels");
               _SetASFBufferWindow = TGetProcAddress<tSetASFBufferWindow>(h, "_SetASFBufferWindow");
               _SetASFDeinterlaceMode = TGetProcAddress<tSetASFDeinterlaceMode>(h, "_SetASFDeinterlaceMode");
               _SetASFDirectStreamingKeepClientsConnected = TGetProcAddress<tSetASFDirectStreamingKeepClientsConnected>(h, "_SetASFDirectStreamingKeepClientsConnected");
               _SetASFFixedFrameRate = TGetProcAddress<tSetASFFixedFrameRate>(h, "_SetASFFixedFrameRate");
               _SetASFMediaServerPublishingPoint = TGetProcAddress<tSetASFMediaServerPublishingPoint>(h, "_SetASFMediaServerPublishingPoint");
               _SetASFMediaServerRemovePublishingPointAfterDisconnect = TGetProcAddress<tSetASFMediaServerRemovePublishingPointAfterDisconnect>(h, "_SetASFMediaServerRemovePublishingPointAfterDisconnect");
               _SetASFMediaServerTemplatePublishingPoint = TGetProcAddress<tSetASFMediaServerTemplatePublishingPoint>(h, "_SetASFMediaServerTemplatePublishingPoint");
               _SetASFNetworkMaxUsers = TGetProcAddress<tSetASFNetworkMaxUsers>(h, "_SetASFNetworkMaxUsers");
               _SetASFNetworkPort = TGetProcAddress<tSetASFNetworkPort>(h, "_SetASFNetworkPort");
               _SetASFProfile = TGetProcAddress<tSetASFProfile>(h, "_SetASFProfile");
               _SetASFProfileFromCustomFile = TGetProcAddress<tSetASFProfileFromCustomFile>(h, "_SetASFProfileFromCustomFile");
               _SetASFProfileVersion = TGetProcAddress<tSetASFProfileVersion>(h, "_SetASFProfileVersion");
               _SetASFVideoBitRate = TGetProcAddress<tSetASFVideoBitRate>(h, "_SetASFVideoBitRate");
               _SetASFVideoFrameRate = TGetProcAddress<tSetASFVideoFrameRate>(h, "_SetASFVideoFrameRate");
               _SetASFVideoHeight = TGetProcAddress<tSetASFVideoHeight>(h, "_SetASFVideoHeight");
               _SetASFVideoMaxKeyFrameSpacing = TGetProcAddress<tSetASFVideoMaxKeyFrameSpacing>(h, "_SetASFVideoMaxKeyFrameSpacing");
               _SetASFVideoQuality = TGetProcAddress<tSetASFVideoQuality>(h, "_SetASFVideoQuality");
               _SetASFVideoWidth = TGetProcAddress<tSetASFVideoWidth>(h, "_SetASFVideoWidth");
               _SetAspectRatioToUse = TGetProcAddress<tSetAspectRatioToUse>(h, "_SetAspectRatioToUse");
               _SetAssociateAudioAndVideoDevices = TGetProcAddress<tSetAssociateAudioAndVideoDevices>(h, "_SetAssociateAudioAndVideoDevices");
               _SetAudioBalance = TGetProcAddress<tSetAudioBalance>(h, "_SetAudioBalance");
               _SetAudioChannelRenderMode = TGetProcAddress<tSetAudioChannelRenderMode>(h, "_SetAudioChannelRenderMode");
               _SetAudioCompressor = TGetProcAddress<tSetAudioCompressor>(h, "_SetAudioCompressor");
               _SetAudioDevice = TGetProcAddress<tSetAudioDevice>(h, "_SetAudioDevice");
               _SetAudioDeviceRendering = TGetProcAddress<tSetAudioDeviceRendering>(h, "_SetAudioDeviceRendering");
               _SetAudioFormat = TGetProcAddress<tSetAudioFormat>(h, "_SetAudioFormat");
               _SetAudioInput = TGetProcAddress<tSetAudioInput>(h, "_SetAudioInput");
               _SetAudioInputBalance = TGetProcAddress<tSetAudioInputBalance>(h, "_SetAudioInputBalance");
               _SetAudioInputLevel = TGetProcAddress<tSetAudioInputLevel>(h, "_SetAudioInputLevel");
               _SetAudioInputMono = TGetProcAddress<tSetAudioInputMono>(h, "_SetAudioInputMono");
               _SetAudioPeakEvent = TGetProcAddress<tSetAudioPeakEvent>(h, "_SetAudioPeakEvent");
               _SetAudioRecording = TGetProcAddress<tSetAudioRecording>(h, "_SetAudioRecording");
               _SetAudioRenderer = TGetProcAddress<tSetAudioRenderer>(h, "_SetAudioRenderer");
               _SetAudioRendererAdditional = TGetProcAddress<tSetAudioRendererAdditional>(h, "_SetAudioRendererAdditional");
               _SetAudioSource = TGetProcAddress<tSetAudioSource>(h, "_SetAudioSource");
               _SetAudioStreamNumber = TGetProcAddress<tSetAudioStreamNumber>(h, "_SetAudioStreamNumber");
               _SetAudioSyncAdjustment = TGetProcAddress<tSetAudioSyncAdjustment>(h, "_SetAudioSyncAdjustment");
               _SetAudioSyncAdjustmentEnabled = TGetProcAddress<tSetAudioSyncAdjustmentEnabled>(h, "_SetAudioSyncAdjustmentEnabled");
               _SetAudioVolume = TGetProcAddress<tSetAudioVolume>(h, "_SetAudioVolume");
               _SetAuthentication = TGetProcAddress<tSetAuthentication>(h, "_SetAuthentication");
               _SetAutoConnectRelatedPins = TGetProcAddress<tSetAutoConnectRelatedPins>(h, "_SetAutoConnectRelatedPins");
               _SetAutoFileName = TGetProcAddress<tSetAutoFileName>(h, "_SetAutoFileName");
               _SetAutoFileNameDateTimeFormat = TGetProcAddress<tSetAutoFileNameDateTimeFormat>(h, "_SetAutoFileNameDateTimeFormat");
               _SetAutoFileNameMinDigits = TGetProcAddress<tSetAutoFileNameMinDigits>(h, "_SetAutoFileNameMinDigits");
               _SetAutoFilePrefix = TGetProcAddress<tSetAutoFilePrefix>(h, "_SetAutoFilePrefix");
               _SetAutoFileSuffix = TGetProcAddress<tSetAutoFileSuffix>(h, "_SetAutoFileSuffix");
               _SetAutoRefreshPreview = TGetProcAddress<tSetAutoRefreshPreview>(h, "_SetAutoRefreshPreview");
               _SetAutoStartPlayer = TGetProcAddress<tSetAutoStartPlayer>(h, "_SetAutoStartPlayer");
               _SetAVIDurationUpdated = TGetProcAddress<tSetAVIDurationUpdated>(h, "_SetAVIDurationUpdated");
               _SetAVIFormatOpenDML = TGetProcAddress<tSetAVIFormatOpenDML>(h, "_SetAVIFormatOpenDML");
               _SetAVIFormatOpenDMLCompatibilityIndex = TGetProcAddress<tSetAVIFormatOpenDMLCompatibilityIndex>(h, "_SetAVIFormatOpenDMLCompatibilityIndex");
               _SetAVIMuxConfig = TGetProcAddress<tSetAVIMuxConfig>(h, "_SetAVIMuxConfig");
               _SetBackgroundColor = TGetProcAddress<tSetBackgroundColor>(h, "_SetBackgroundColor");
               _SetBufferCount = TGetProcAddress<tSetBufferCount>(h, "_SetBufferCount");
               _SetBurstCount = TGetProcAddress<tSetBurstCount>(h, "_SetBurstCount");
               _SetBurstInterval = TGetProcAddress<tSetBurstInterval>(h, "_SetBurstInterval");
               _SetBurstMode = TGetProcAddress<tSetBurstMode>(h, "_SetBurstMode");
               _SetBurstType = TGetProcAddress<tSetBurstType>(h, "_SetBurstType");
               _SetBusyCursor = TGetProcAddress<tSetBusyCursor>(h, "_SetBusyCursor");
               _SetCallbackSender = TGetProcAddress<tSetCallbackSender>(h, "_SetCallbackSender");
               _SetCameraControl = TGetProcAddress<tSetCameraControl>(h, "_SetCameraControl");
               _SetCameraControlSettings = TGetProcAddress<tSetCameraControlSettings>(h, "_SetCameraControlSettings");
               _SetCameraExposure = TGetProcAddress<tSetCameraExposure>(h, "_SetCameraExposure");
               _SetCaptureFileExt = TGetProcAddress<tSetCaptureFileExt>(h, "_SetCaptureFileExt");
               _SetColorKey = TGetProcAddress<tSetColorKey>(h, "_SetColorKey");
               _SetColorKeyEnabled = TGetProcAddress<tSetColorKeyEnabled>(h, "_SetColorKeyEnabled");
               _SetCompressionMode = TGetProcAddress<tSetCompressionMode>(h, "_SetCompressionMode");
               _SetCompressionType = TGetProcAddress<tSetCompressionType>(h, "_SetCompressionType");
               _SetCropping_Enabled = TGetProcAddress<tSetCropping_Enabled>(h, "_SetCropping_Enabled");
               _SetCropping_Height = TGetProcAddress<tSetCropping_Height>(h, "_SetCropping_Height");
               _SetCropping_Outbounds = TGetProcAddress<tSetCropping_Outbounds>(h, "_SetCropping_Outbounds");
               _SetCropping_Width = TGetProcAddress<tSetCropping_Width>(h, "_SetCropping_Width");
               _SetCropping_X = TGetProcAddress<tSetCropping_X>(h, "_SetCropping_X");
               _SetCropping_Y = TGetProcAddress<tSetCropping_Y>(h, "_SetCropping_Y");
               _SetCropping_Zoom = TGetProcAddress<tSetCropping_Zoom>(h, "_SetCropping_Zoom");
               _SetDisplayActive = TGetProcAddress<tSetDisplayActive>(h, "_SetDisplayActive");
               _SetDisplayAlphaBlendEnabled = TGetProcAddress<tSetDisplayAlphaBlendEnabled>(h, "_SetDisplayAlphaBlendEnabled");
               _SetDisplayAlphaBlendValue = TGetProcAddress<tSetDisplayAlphaBlendValue>(h, "_SetDisplayAlphaBlendValue");
               _SetDisplayAspectRatio = TGetProcAddress<tSetDisplayAspectRatio>(h, "_SetDisplayAspectRatio");
               _SetDisplayAssociatedRenderer = TGetProcAddress<tSetDisplayAssociatedRenderer>(h, "_SetDisplayAssociatedRenderer");
               _SetDisplayAutoSize = TGetProcAddress<tSetDisplayAutoSize>(h, "_SetDisplayAutoSize");
               _SetDisplayEmbedded = TGetProcAddress<tSetDisplayEmbedded>(h, "_SetDisplayEmbedded");
               _SetDisplayEmbedded_FitParent = TGetProcAddress<tSetDisplayEmbedded_FitParent>(h, "_SetDisplayEmbedded_FitParent");
               _SetDisplayFullScreen = TGetProcAddress<tSetDisplayFullScreen>(h, "_SetDisplayFullScreen");
               _SetDisplayHeight = TGetProcAddress<tSetDisplayHeight>(h, "_SetDisplayHeight");
               _SetDisplayLeft = TGetProcAddress<tSetDisplayLeft>(h, "_SetDisplayLeft");
               _SetDisplayLocation = TGetProcAddress<tSetDisplayLocation>(h, "_SetDisplayLocation");
               _SetDisplayMonitor = TGetProcAddress<tSetDisplayMonitor>(h, "_SetDisplayMonitor");
               _SetDisplayMouseMovesWindow = TGetProcAddress<tSetDisplayMouseMovesWindow>(h, "_SetDisplayMouseMovesWindow");
               _SetDisplayPanScanRatio = TGetProcAddress<tSetDisplayPanScanRatio>(h, "_SetDisplayPanScanRatio");
               _SetDisplayParent = TGetProcAddress<tSetDisplayParent>(h, "_SetDisplayParent");
               _SetDisplayStayOnTop = TGetProcAddress<tSetDisplayStayOnTop>(h, "_SetDisplayStayOnTop");
               _SetDisplayTop = TGetProcAddress<tSetDisplayTop>(h, "_SetDisplayTop");
               _SetDisplayTransparentColorEnabled = TGetProcAddress<tSetDisplayTransparentColorEnabled>(h, "_SetDisplayTransparentColorEnabled");
               _SetDisplayTransparentColorValue = TGetProcAddress<tSetDisplayTransparentColorValue>(h, "_SetDisplayTransparentColorValue");
               _SetDisplayVideoPortEnabled = TGetProcAddress<tSetDisplayVideoPortEnabled>(h, "_SetDisplayVideoPortEnabled");
               _SetDisplayVisible = TGetProcAddress<tSetDisplayVisible>(h, "_SetDisplayVisible");
               _SetDisplayWidth = TGetProcAddress<tSetDisplayWidth>(h, "_SetDisplayWidth");
               _SetDroppedFramesPollingInterval = TGetProcAddress<tSetDroppedFramesPollingInterval>(h, "_SetDroppedFramesPollingInterval");
               _SetDVDateTimeEnabled = TGetProcAddress<tSetDVDateTimeEnabled>(h, "_SetDVDateTimeEnabled");
               _SetDVDiscontinuityMinimumInterval = TGetProcAddress<tSetDVDiscontinuityMinimumInterval>(h, "_SetDVDiscontinuityMinimumInterval");
               _SetDVDTitle = TGetProcAddress<tSetDVDTitle>(h, "_SetDVDTitle");
               _SetDVEncoder_VideoFormat = TGetProcAddress<tSetDVEncoder_VideoFormat>(h, "_SetDVEncoder_VideoFormat");
               _SetDVEncoder_VideoResolution = TGetProcAddress<tSetDVEncoder_VideoResolution>(h, "_SetDVEncoder_VideoResolution");
               _SetDVEncoder_VideoStandard = TGetProcAddress<tSetDVEncoder_VideoStandard>(h, "_SetDVEncoder_VideoStandard");
               _SetDVRecordingInNativeFormatSeparatesStreams = TGetProcAddress<tSetDVRecordingInNativeFormatSeparatesStreams>(h, "_SetDVRecordingInNativeFormatSeparatesStreams");
               _SetDVReduceFrameRate = TGetProcAddress<tSetDVReduceFrameRate>(h, "_SetDVReduceFrameRate");
               _SetDVRgb219 = TGetProcAddress<tSetDVRgb219>(h, "_SetDVRgb219");
               _SetDVTimeCodeEnabled = TGetProcAddress<tSetDVTimeCodeEnabled>(h, "_SetDVTimeCodeEnabled");
               _SetEventNotificationSynchrone = TGetProcAddress<tSetEventNotificationSynchrone>(h, "_SetEventNotificationSynchrone");
               _SetExtraDLLPath = TGetProcAddress<tSetExtraDLLPath>(h, "_SetExtraDLLPath");
               _SetFixFlickerOrBlackCapture = TGetProcAddress<tSetFixFlickerOrBlackCapture>(h, "_SetFixFlickerOrBlackCapture");
               _SetFrameCaptureBounds = TGetProcAddress<tSetFrameCaptureBounds>(h, "_SetFrameCaptureBounds");
               _SetFrameCaptureHeight = TGetProcAddress<tSetFrameCaptureHeight>(h, "_SetFrameCaptureHeight");
               _SetFrameCaptureWidth = TGetProcAddress<tSetFrameCaptureWidth>(h, "_SetFrameCaptureWidth");
               _SetFrameCaptureWithoutOverlay = TGetProcAddress<tSetFrameCaptureWithoutOverlay>(h, "_SetFrameCaptureWithoutOverlay");
               _SetFrameCaptureZoomSize = TGetProcAddress<tSetFrameCaptureZoomSize>(h, "_SetFrameCaptureZoomSize");
               _SetFrameGrabber = TGetProcAddress<tSetFrameGrabber>(h, "_SetFrameGrabber");
               _SetFrameGrabberRGBFormat = TGetProcAddress<tSetFrameGrabberRGBFormat>(h, "_SetFrameGrabberRGBFormat");
               _SetFrameNumberStartsFromZero = TGetProcAddress<tSetFrameNumberStartsFromZero>(h, "_SetFrameNumberStartsFromZero");
               _SetFrameRate = TGetProcAddress<tSetFrameRate>(h, "_SetFrameRate");
               _SetFrameRateDivider = TGetProcAddress<tSetFrameRateDivider>(h, "_SetFrameRateDivider");
               _SetFWCam1394 = TGetProcAddress<tSetFWCam1394>(h, "_SetFWCam1394");
               _SetGetLastFrameWaitTimeoutMs = TGetProcAddress<tSetGetLastFrameWaitTimeoutMs>(h, "_SetGetLastFrameWaitTimeoutMs");
               _SetHeaderAttribute = TGetProcAddress<tSetHeaderAttribute>(h, "_SetHeaderAttribute");
               _SetHoldRecording = TGetProcAddress<tSetHoldRecording>(h, "_SetHoldRecording");
               _SetImageOverlay_AlphaBlend = TGetProcAddress<tSetImageOverlay_AlphaBlend>(h, "_SetImageOverlay_AlphaBlend");
               _SetImageOverlay_AlphaBlendValue = TGetProcAddress<tSetImageOverlay_AlphaBlendValue>(h, "_SetImageOverlay_AlphaBlendValue");
               _SetImageOverlay_Attributes = TGetProcAddress<tSetImageOverlay_Attributes>(h, "_SetImageOverlay_Attributes");
               _SetImageOverlay_Attributes2 = TGetProcAddress<tSetImageOverlay_Attributes2>(h, "_SetImageOverlay_Attributes2");
               _SetImageOverlay_ChromaKey = TGetProcAddress<tSetImageOverlay_ChromaKey>(h, "_SetImageOverlay_ChromaKey");
               _SetImageOverlay_ChromaKeyLeewayPercent = TGetProcAddress<tSetImageOverlay_ChromaKeyLeewayPercent>(h, "_SetImageOverlay_ChromaKeyLeewayPercent");
               _SetImageOverlay_ChromaKeyRGBColor = TGetProcAddress<tSetImageOverlay_ChromaKeyRGBColor>(h, "_SetImageOverlay_ChromaKeyRGBColor");
               _SetImageOverlay_Enabled = TGetProcAddress<tSetImageOverlay_Enabled>(h, "_SetImageOverlay_Enabled");
               _SetImageOverlay_Height = TGetProcAddress<tSetImageOverlay_Height>(h, "_SetImageOverlay_Height");
               _SetImageOverlay_LeftLocation = TGetProcAddress<tSetImageOverlay_LeftLocation>(h, "_SetImageOverlay_LeftLocation");
               _SetImageOverlay_RotationAngle = TGetProcAddress<tSetImageOverlay_RotationAngle>(h, "_SetImageOverlay_RotationAngle");
               _SetImageOverlay_StretchToVideoSize = TGetProcAddress<tSetImageOverlay_StretchToVideoSize>(h, "_SetImageOverlay_StretchToVideoSize");
               _SetImageOverlay_TargetDisplay = TGetProcAddress<tSetImageOverlay_TargetDisplay>(h, "_SetImageOverlay_TargetDisplay");
               _SetImageOverlay_TopLocation = TGetProcAddress<tSetImageOverlay_TopLocation>(h, "_SetImageOverlay_TopLocation");
               _SetImageOverlay_Transparent = TGetProcAddress<tSetImageOverlay_Transparent>(h, "_SetImageOverlay_Transparent");
               _SetImageOverlay_TransparentColorValue = TGetProcAddress<tSetImageOverlay_TransparentColorValue>(h, "_SetImageOverlay_TransparentColorValue");
               _SetImageOverlay_UseTransparentColor = TGetProcAddress<tSetImageOverlay_UseTransparentColor>(h, "_SetImageOverlay_UseTransparentColor");
               _SetImageOverlay_VideoAlignment = TGetProcAddress<tSetImageOverlay_VideoAlignment>(h, "_SetImageOverlay_VideoAlignment");
               _SetImageOverlay_Width = TGetProcAddress<tSetImageOverlay_Width>(h, "_SetImageOverlay_Width");
               _SetImageOverlayAlphaBlend = TGetProcAddress<tSetImageOverlayAlphaBlend>(h, "_SetImageOverlayAlphaBlend");
               _SetImageOverlayAlphaBlendValue = TGetProcAddress<tSetImageOverlayAlphaBlendValue>(h, "_SetImageOverlayAlphaBlendValue");
               _SetImageOverlayChromaKey = TGetProcAddress<tSetImageOverlayChromaKey>(h, "_SetImageOverlayChromaKey");
               _SetImageOverlayChromaKeyLeewayPercent = TGetProcAddress<tSetImageOverlayChromaKeyLeewayPercent>(h, "_SetImageOverlayChromaKeyLeewayPercent");
               _SetImageOverlayChromaKeyRGBColor = TGetProcAddress<tSetImageOverlayChromaKeyRGBColor>(h, "_SetImageOverlayChromaKeyRGBColor");
               _SetImageOverlayEnabled = TGetProcAddress<tSetImageOverlayEnabled>(h, "_SetImageOverlayEnabled");
               _SetImageOverlayFromBMPFile = TGetProcAddress<tSetImageOverlayFromBMPFile>(h, "_SetImageOverlayFromBMPFile");
               _SetImageOverlayFromBMPFile2 = TGetProcAddress<tSetImageOverlayFromBMPFile2>(h, "_SetImageOverlayFromBMPFile2");
               _SetImageOverlayFromHBitmap = TGetProcAddress<tSetImageOverlayFromHBitmap>(h, "_SetImageOverlayFromHBitmap");
               _SetImageOverlayFromHBitmap2 = TGetProcAddress<tSetImageOverlayFromHBitmap2>(h, "_SetImageOverlayFromHBitmap2");
               _SetImageOverlayFromHBitmap3 = TGetProcAddress<tSetImageOverlayFromHBitmap3>(h, "_SetImageOverlayFromHBitmap3");
               _SetImageOverlayFromImageFile = TGetProcAddress<tSetImageOverlayFromImageFile>(h, "_SetImageOverlayFromImageFile");
               _SetImageOverlayFromImageFile2 = TGetProcAddress<tSetImageOverlayFromImageFile2>(h, "_SetImageOverlayFromImageFile2");
               _SetImageOverlayFromJPEGFile = TGetProcAddress<tSetImageOverlayFromJPEGFile>(h, "_SetImageOverlayFromJPEGFile");
               _SetImageOverlayFromJPEGFile2 = TGetProcAddress<tSetImageOverlayFromJPEGFile2>(h, "_SetImageOverlayFromJPEGFile2");
               _SetImageOverlayHeight = TGetProcAddress<tSetImageOverlayHeight>(h, "_SetImageOverlayHeight");
               _SetImageOverlayLeftLocation = TGetProcAddress<tSetImageOverlayLeftLocation>(h, "_SetImageOverlayLeftLocation");
               _SetImageOverlayRotationAngle = TGetProcAddress<tSetImageOverlayRotationAngle>(h, "_SetImageOverlayRotationAngle");
               _SetImageOverlaySelector = TGetProcAddress<tSetImageOverlaySelector>(h, "_SetImageOverlaySelector");
               _SetImageOverlayStretchToVideoSize = TGetProcAddress<tSetImageOverlayStretchToVideoSize>(h, "_SetImageOverlayStretchToVideoSize");
               _SetImageOverlayTargetDisplay = TGetProcAddress<tSetImageOverlayTargetDisplay>(h, "_SetImageOverlayTargetDisplay");
               _SetImageOverlayTopLocation = TGetProcAddress<tSetImageOverlayTopLocation>(h, "_SetImageOverlayTopLocation");
               _SetImageOverlayTransparent = TGetProcAddress<tSetImageOverlayTransparent>(h, "_SetImageOverlayTransparent");
               _SetImageOverlayTransparentColorValue = TGetProcAddress<tSetImageOverlayTransparentColorValue>(h, "_SetImageOverlayTransparentColorValue");
               _SetImageOverlayUseTransparentColor = TGetProcAddress<tSetImageOverlayUseTransparentColor>(h, "_SetImageOverlayUseTransparentColor");
               _SetImageOverlayVideoAlignment = TGetProcAddress<tSetImageOverlayVideoAlignment>(h, "_SetImageOverlayVideoAlignment");
               _SetImageOverlayWidth = TGetProcAddress<tSetImageOverlayWidth>(h, "_SetImageOverlayWidth");
               _SetIPCameraSetting = TGetProcAddress<tSetIPCameraSetting>(h, "_SetIPCameraSetting");
               _SetIPCameraURL = TGetProcAddress<tSetIPCameraURL>(h, "_SetIPCameraURL");
               _SetJPEGPerformance = TGetProcAddress<tSetJPEGPerformance>(h, "_SetJPEGPerformance");
               _SetJPEGProgressiveDisplay = TGetProcAddress<tSetJPEGProgressiveDisplay>(h, "_SetJPEGProgressiveDisplay");
               _SetJPEGQuality = TGetProcAddress<tSetJPEGQuality>(h, "_SetJPEGQuality");
               _SetLicenseString = TGetProcAddress<tSetLicenseString>(h, "_SetLicenseString");
               _SetLocation = TGetProcAddress<tSetLocation>(h, "_SetLocation");
               _SetLogoDisplayed = TGetProcAddress<tSetLogoDisplayed>(h, "_SetLogoDisplayed");
               _SetLogoFromBMPFile = TGetProcAddress<tSetLogoFromBMPFile>(h, "_SetLogoFromBMPFile");
               _SetLogoFromHBitmap = TGetProcAddress<tSetLogoFromHBitmap>(h, "_SetLogoFromHBitmap");
               _SetLogoFromJPEGFile = TGetProcAddress<tSetLogoFromJPEGFile>(h, "_SetLogoFromJPEGFile");
               _SetLogoLayout = TGetProcAddress<tSetLogoLayout>(h, "_SetLogoLayout");
               _SetMixAudioSamplesLevel = TGetProcAddress<tSetMixAudioSamplesLevel>(h, "_SetMixAudioSamplesLevel");
               _SetMixer_MosaicColumns = TGetProcAddress<tSetMixer_MosaicColumns>(h, "_SetMixer_MosaicColumns");
               _SetMixer_MosaicLines = TGetProcAddress<tSetMixer_MosaicLines>(h, "_SetMixer_MosaicLines");
               _SetMotionDetector_CompareBlue = TGetProcAddress<tSetMotionDetector_CompareBlue>(h, "_SetMotionDetector_CompareBlue");
               _SetMotionDetector_CompareGreen = TGetProcAddress<tSetMotionDetector_CompareGreen>(h, "_SetMotionDetector_CompareGreen");
               _SetMotionDetector_CompareRed = TGetProcAddress<tSetMotionDetector_CompareRed>(h, "_SetMotionDetector_CompareRed");
               _SetMotionDetector_Enabled = TGetProcAddress<tSetMotionDetector_Enabled>(h, "_SetMotionDetector_Enabled");
               _SetMotionDetector_GreyScale = TGetProcAddress<tSetMotionDetector_GreyScale>(h, "_SetMotionDetector_GreyScale");
               _SetMotionDetector_Grid = TGetProcAddress<tSetMotionDetector_Grid>(h, "_SetMotionDetector_Grid");
               _SetMotionDetector_MaxDetectionsPerSecond = TGetProcAddress<tSetMotionDetector_MaxDetectionsPerSecond>(h, "_SetMotionDetector_MaxDetectionsPerSecond");
               _SetMotionDetector_MotionResetMs = TGetProcAddress<tSetMotionDetector_MotionResetMs>(h, "_SetMotionDetector_MotionResetMs");
               _SetMotionDetector_ReduceCPULoad = TGetProcAddress<tSetMotionDetector_ReduceCPULoad>(h, "_SetMotionDetector_ReduceCPULoad");
               _SetMotionDetector_ReduceVideoNoise = TGetProcAddress<tSetMotionDetector_ReduceVideoNoise>(h, "_SetMotionDetector_ReduceVideoNoise");
               _SetMotionDetector_Triggered = TGetProcAddress<tSetMotionDetector_Triggered>(h, "_SetMotionDetector_Triggered");
               _SetMouseWheelControlsZoomAtCursor = TGetProcAddress<tSetMouseWheelControlsZoomAtCursor>(h, "_SetMouseWheelControlsZoomAtCursor");
               _SetMouseWheelEventEnabled = TGetProcAddress<tSetMouseWheelEventEnabled>(h, "_SetMouseWheelEventEnabled");
               _SetMpegStreamType = TGetProcAddress<tSetMpegStreamType>(h, "_SetMpegStreamType");
               _SetMultiplexedInputEmulation = TGetProcAddress<tSetMultiplexedInputEmulation>(h, "_SetMultiplexedInputEmulation");
               _SetMultiplexedRole = TGetProcAddress<tSetMultiplexedRole>(h, "_SetMultiplexedRole");
               _SetMultiplexedStabilizationDelay = TGetProcAddress<tSetMultiplexedStabilizationDelay>(h, "_SetMultiplexedStabilizationDelay");
               _SetMultiplexedSwitchDelay = TGetProcAddress<tSetMultiplexedSwitchDelay>(h, "_SetMultiplexedSwitchDelay");
               _SetMultiplexer = TGetProcAddress<tSetMultiplexer>(h, "_SetMultiplexer");
               _SetMultiplexerFilterByName = TGetProcAddress<tSetMultiplexerFilterByName>(h, "_SetMultiplexerFilterByName");
               _SetMultipurposeEncoderSettings = TGetProcAddress<tSetMultipurposeEncoderSettings>(h, "_SetMultipurposeEncoderSettings");
               _SetMuteAudioRendering = TGetProcAddress<tSetMuteAudioRendering>(h, "_SetMuteAudioRendering");
               _SetName = TGetProcAddress<tSetName>(h, "_SetName");
               _SetNDIBandwidthType = TGetProcAddress<tSetNDIBandwidthType>(h, "_SetNDIBandwidthType");
               _SetNDIGroups = TGetProcAddress<tSetNDIGroups>(h, "_SetNDIGroups");
               _SetNDIName = TGetProcAddress<tSetNDIName>(h, "_SetNDIName");
               _SetNDIReceiveTimeoutMs = TGetProcAddress<tSetNDIReceiveTimeoutMs>(h, "_SetNDIReceiveTimeoutMs");
               _SetNetworkStreaming = TGetProcAddress<tSetNetworkStreaming>(h, "_SetNetworkStreaming");
               _SetNetworkStreamingType = TGetProcAddress<tSetNetworkStreamingType>(h, "_SetNetworkStreamingType");
               _SetNormalCursor = TGetProcAddress<tSetNormalCursor>(h, "_SetNormalCursor");
               _SetNotificationMethod = TGetProcAddress<tSetNotificationMethod>(h, "_SetNotificationMethod");
               _SetNotificationPriority = TGetProcAddress<tSetNotificationPriority>(h, "_SetNotificationPriority");
               _SetNotificationSleepTime = TGetProcAddress<tSetNotificationSleepTime>(h, "_SetNotificationSleepTime");
               _SetOnAudioBufferNegotiation = TGetProcAddress<tSetOnAudioBufferNegotiation>(h, "_SetOnAudioBufferNegotiation");
               _SetOnAudioDeviceSelected = TGetProcAddress<tSetOnAudioDeviceSelected>(h, "_SetOnAudioDeviceSelected");
               _SetOnAudioPeak = TGetProcAddress<tSetOnAudioPeak>(h, "_SetOnAudioPeak");
               _SetOnAuthenticationNeeded = TGetProcAddress<tSetOnAuthenticationNeeded>(h, "_SetOnAuthenticationNeeded");
               _SetOnAVIDurationUpdated = TGetProcAddress<tSetOnAVIDurationUpdated>(h, "_SetOnAVIDurationUpdated");
               _SetOnBacktimedFramesCountReached = TGetProcAddress<tSetOnBacktimedFramesCountReached>(h, "_SetOnBacktimedFramesCountReached");
               _SetOnBitmapsLoadingProgress = TGetProcAddress<tSetOnBitmapsLoadingProgress>(h, "_SetOnBitmapsLoadingProgress");
               _SetOnClick = TGetProcAddress<tSetOnClick>(h, "_SetOnClick");
               _SetOnClientConnection = TGetProcAddress<tSetOnClientConnection>(h, "_SetOnClientConnection");
               _SetOnColorKeyChange = TGetProcAddress<tSetOnColorKeyChange>(h, "_SetOnColorKeyChange");
               _SetOnCopyPreallocDataCompleted = TGetProcAddress<tSetOnCopyPreallocDataCompleted>(h, "_SetOnCopyPreallocDataCompleted");
               _SetOnCopyPreallocDataProgress = TGetProcAddress<tSetOnCopyPreallocDataProgress>(h, "_SetOnCopyPreallocDataProgress");
               _SetOnCopyPreallocDataStarted = TGetProcAddress<tSetOnCopyPreallocDataStarted>(h, "_SetOnCopyPreallocDataStarted");
               _SetOnCreatePreallocFileCompleted = TGetProcAddress<tSetOnCreatePreallocFileCompleted>(h, "_SetOnCreatePreallocFileCompleted");
               _SetOnCreatePreallocFileProgress = TGetProcAddress<tSetOnCreatePreallocFileProgress>(h, "_SetOnCreatePreallocFileProgress");
               _SetOnCreatePreallocFileStarted = TGetProcAddress<tSetOnCreatePreallocFileStarted>(h, "_SetOnCreatePreallocFileStarted");
               _SetOnDblClick = TGetProcAddress<tSetOnDblClick>(h, "_SetOnDblClick");
               _SetOnDeviceArrivalOrRemoval = TGetProcAddress<tSetOnDeviceArrivalOrRemoval>(h, "_SetOnDeviceArrivalOrRemoval");
               _SetOnDeviceLost = TGetProcAddress<tSetOnDeviceLost>(h, "_SetOnDeviceLost");
               _SetOnDeviceReconnected = TGetProcAddress<tSetOnDeviceReconnected>(h, "_SetOnDeviceReconnected");
               _SetOnDeviceReconnecting = TGetProcAddress<tSetOnDeviceReconnecting>(h, "_SetOnDeviceReconnecting");
               _SetOnDirectNetworkStreamingHostUrl = TGetProcAddress<tSetOnDirectNetworkStreamingHostUrl>(h, "_SetOnDirectNetworkStreamingHostUrl");
               _SetOnDiskFull = TGetProcAddress<tSetOnDiskFull>(h, "_SetOnDiskFull");
               _SetOnDoEvents = TGetProcAddress<tSetOnDoEvents>(h, "_SetOnDoEvents");
               _SetOnDragDrop = TGetProcAddress<tSetOnDragDrop>(h, "_SetOnDragDrop");
               _SetOnDragDropFiles = TGetProcAddress<tSetOnDragDropFiles>(h, "_SetOnDragDropFiles");
               _SetOnDragOver = TGetProcAddress<tSetOnDragOver>(h, "_SetOnDragOver");
               _SetOnDVCommandCompleted = TGetProcAddress<tSetOnDVCommandCompleted>(h, "_SetOnDVCommandCompleted");
               _SetOnDVDiscontinuity = TGetProcAddress<tSetOnDVDiscontinuity>(h, "_SetOnDVDiscontinuity");
               _SetOnEnumerateWindows = TGetProcAddress<tSetOnEnumerateWindows>(h, "_SetOnEnumerateWindows");
               _SetOnFilterSelected = TGetProcAddress<tSetOnFilterSelected>(h, "_SetOnFilterSelected");
               _SetOnFirstFrameReceived = TGetProcAddress<tSetOnFirstFrameReceived>(h, "_SetOnFirstFrameReceived");
               _SetOnFrameBitmap = TGetProcAddress<tSetOnFrameBitmap>(h, "_SetOnFrameBitmap");
               _SetOnFrameBitmapEventSynchrone = TGetProcAddress<tSetOnFrameBitmapEventSynchrone>(h, "_SetOnFrameBitmapEventSynchrone");
               _SetOnFrameCaptureCompleted = TGetProcAddress<tSetOnFrameCaptureCompleted>(h, "_SetOnFrameCaptureCompleted");
               _SetOnFrameOverlayUsingDC = TGetProcAddress<tSetOnFrameOverlayUsingDC>(h, "_SetOnFrameOverlayUsingDC");
               _SetOnFrameOverlayUsingDIB = TGetProcAddress<tSetOnFrameOverlayUsingDIB>(h, "_SetOnFrameOverlayUsingDIB");
               _SetOnFrameProgress = TGetProcAddress<tSetOnFrameProgress>(h, "_SetOnFrameProgress");
               _SetOnFrameProgress2 = TGetProcAddress<tSetOnFrameProgress2>(h, "_SetOnFrameProgress2");
               _SetOnGraphBuilt = TGetProcAddress<tSetOnGraphBuilt>(h, "_SetOnGraphBuilt");
               _SetOnInactive = TGetProcAddress<tSetOnInactive>(h, "_SetOnInactive");
               _SetOnKeyPress = TGetProcAddress<tSetOnKeyPress>(h, "_SetOnKeyPress");
               _SetOnLastCommandCompleted = TGetProcAddress<tSetOnLastCommandCompleted>(h, "_SetOnLastCommandCompleted");
               _SetOnLeavingFullScreen = TGetProcAddress<tSetOnLeavingFullScreen>(h, "_SetOnLeavingFullScreen");
               _SetOnLog = TGetProcAddress<tSetOnLog>(h, "_SetOnLog");
               _SetOnMotionDetected = TGetProcAddress<tSetOnMotionDetected>(h, "_SetOnMotionDetected");
               _SetOnMotionNotDetected = TGetProcAddress<tSetOnMotionNotDetected>(h, "_SetOnMotionNotDetected");
               _SetOnMouseDown = TGetProcAddress<tSetOnMouseDown>(h, "_SetOnMouseDown");
               _SetOnMouseDown_Video = TGetProcAddress<tSetOnMouseDown_Video>(h, "_SetOnMouseDown_Video");
               _SetOnMouseDown_Window = TGetProcAddress<tSetOnMouseDown_Window>(h, "_SetOnMouseDown_Window");
               _SetOnMouseEnter = TGetProcAddress<tSetOnMouseEnter>(h, "_SetOnMouseEnter");
               _SetOnMouseLeave = TGetProcAddress<tSetOnMouseLeave>(h, "_SetOnMouseLeave");
               _SetOnMouseMove = TGetProcAddress<tSetOnMouseMove>(h, "_SetOnMouseMove");
               _SetOnMouseMove_Video = TGetProcAddress<tSetOnMouseMove_Video>(h, "_SetOnMouseMove_Video");
               _SetOnMouseMove_Window = TGetProcAddress<tSetOnMouseMove_Window>(h, "_SetOnMouseMove_Window");
               _SetOnMouseUp = TGetProcAddress<tSetOnMouseUp>(h, "_SetOnMouseUp");
               _SetOnMouseUp_Video = TGetProcAddress<tSetOnMouseUp_Video>(h, "_SetOnMouseUp_Video");
               _SetOnMouseUp_Window = TGetProcAddress<tSetOnMouseUp_Window>(h, "_SetOnMouseUp_Window");
               _SetOnMouseWheel = TGetProcAddress<tSetOnMouseWheel>(h, "_SetOnMouseWheel");
               _SetOnMultipurposeEncoderCompleted = TGetProcAddress<tSetOnMultipurposeEncoderCompleted>(h, "_SetOnMultipurposeEncoderCompleted");
               _SetOnMultipurposeEncoderError = TGetProcAddress<tSetOnMultipurposeEncoderError>(h, "_SetOnMultipurposeEncoderError");
               _SetOnMultipurposeEncoderProgress = TGetProcAddress<tSetOnMultipurposeEncoderProgress>(h, "_SetOnMultipurposeEncoderProgress");
               _SetOnNoVideoDevices = TGetProcAddress<tSetOnNoVideoDevices>(h, "_SetOnNoVideoDevices");
               _SetOnNTPTimeStamp = TGetProcAddress<tSetOnNTPTimeStamp>(h, "_SetOnNTPTimeStamp");
               _SetOnPlayerBufferingData = TGetProcAddress<tSetOnPlayerBufferingData>(h, "_SetOnPlayerBufferingData");
               _SetOnPlayerDurationUpdated = TGetProcAddress<tSetOnPlayerDurationUpdated>(h, "_SetOnPlayerDurationUpdated");
               _SetOnPlayerEndOfPlaylist = TGetProcAddress<tSetOnPlayerEndOfPlaylist>(h, "_SetOnPlayerEndOfPlaylist");
               _SetOnPlayerEndOfStream = TGetProcAddress<tSetOnPlayerEndOfStream>(h, "_SetOnPlayerEndOfStream");
               _SetOnPlayerOpened = TGetProcAddress<tSetOnPlayerOpened>(h, "_SetOnPlayerOpened");
               _SetOnPlayerStateChanged = TGetProcAddress<tSetOnPlayerStateChanged>(h, "_SetOnPlayerStateChanged");
               _SetOnPlayerUpdateTrackbarPosition = TGetProcAddress<tSetOnPlayerUpdateTrackbarPosition>(h, "_SetOnPlayerUpdateTrackbarPosition");
               _SetOnPreviewStarted = TGetProcAddress<tSetOnPreviewStarted>(h, "_SetOnPreviewStarted");
               _SetOnRawAudioSample = TGetProcAddress<tSetOnRawAudioSample>(h, "_SetOnRawAudioSample");
               _SetOnRawVideoSample = TGetProcAddress<tSetOnRawVideoSample>(h, "_SetOnRawVideoSample");
               _SetOnRecordingCompleted = TGetProcAddress<tSetOnRecordingCompleted>(h, "_SetOnRecordingCompleted");
               _SetOnRecordingPaused = TGetProcAddress<tSetOnRecordingPaused>(h, "_SetOnRecordingPaused");
               _SetOnRecordingReadyToStart = TGetProcAddress<tSetOnRecordingReadyToStart>(h, "_SetOnRecordingReadyToStart");
               _SetOnRecordingStarted = TGetProcAddress<tSetOnRecordingStarted>(h, "_SetOnRecordingStarted");
               _SetOnReencodingCompleted = TGetProcAddress<tSetOnReencodingCompleted>(h, "_SetOnReencodingCompleted");
               _SetOnReencodingProgress = TGetProcAddress<tSetOnReencodingProgress>(h, "_SetOnReencodingProgress");
               _SetOnReencodingStarted = TGetProcAddress<tSetOnReencodingStarted>(h, "_SetOnReencodingStarted");
               _SetOnReinitializing = TGetProcAddress<tSetOnReinitializing>(h, "_SetOnReinitializing");
               _SetOnResizeVideo = TGetProcAddress<tSetOnResizeVideo>(h, "_SetOnResizeVideo");
               _SetOnStoppingGraph = TGetProcAddress<tSetOnStoppingGraph>(h, "_SetOnStoppingGraph");
               _SetOnStoppingGraphCompleted = TGetProcAddress<tSetOnStoppingGraphCompleted>(h, "_SetOnStoppingGraphCompleted");
               _SetOnTextOverlayScrollingCompleted = TGetProcAddress<tSetOnTextOverlayScrollingCompleted>(h, "_SetOnTextOverlayScrollingCompleted");
               _SetOnThirdPartyFilterAdded = TGetProcAddress<tSetOnThirdPartyFilterAdded>(h, "_SetOnThirdPartyFilterAdded");
               _SetOnThirdPartyFilterConnected = TGetProcAddress<tSetOnThirdPartyFilterConnected>(h, "_SetOnThirdPartyFilterConnected");
               _SetOnThirdPartyFilterConnected2 = TGetProcAddress<tSetOnThirdPartyFilterConnected2>(h, "_SetOnThirdPartyFilterConnected2");
               _SetOnThreadSync = TGetProcAddress<tSetOnThreadSync>(h, "_SetOnThreadSync");
               _SetOnTVChannelScanCompleted = TGetProcAddress<tSetOnTVChannelScanCompleted>(h, "_SetOnTVChannelScanCompleted");
               _SetOnTVChannelScanStarted = TGetProcAddress<tSetOnTVChannelScanStarted>(h, "_SetOnTVChannelScanStarted");
               _SetOnTVChannelSelected = TGetProcAddress<tSetOnTVChannelSelected>(h, "_SetOnTVChannelSelected");
               _SetOnVideoCompressionSettings = TGetProcAddress<tSetOnVideoCompressionSettings>(h, "_SetOnVideoCompressionSettings");
               _SetOnVideoDeviceSelected = TGetProcAddress<tSetOnVideoDeviceSelected>(h, "_SetOnVideoDeviceSelected");
               _SetOnVideoFromBitmapsNextFrameNeeded = TGetProcAddress<tSetOnVideoFromBitmapsNextFrameNeeded>(h, "_SetOnVideoFromBitmapsNextFrameNeeded");
               _SetOpenURLAsync = TGetProcAddress<tSetOpenURLAsync>(h, "_SetOpenURLAsync");
               _SetOverlayAfterTransform = TGetProcAddress<tSetOverlayAfterTransform>(h, "_SetOverlayAfterTransform");
               _SetParentWindow = TGetProcAddress<tSetParentWindow>(h, "_SetParentWindow");
               _SetPlayerAudioRendering = TGetProcAddress<tSetPlayerAudioRendering>(h, "_SetPlayerAudioRendering");
               _SetPlayerDuration = TGetProcAddress<tSetPlayerDuration>(h, "_SetPlayerDuration");
               _SetPlayerDVSize = TGetProcAddress<tSetPlayerDVSize>(h, "_SetPlayerDVSize");
               _SetPlayerFastSeekSpeedRatio = TGetProcAddress<tSetPlayerFastSeekSpeedRatio>(h, "_SetPlayerFastSeekSpeedRatio");
               _SetPlayerFileName = TGetProcAddress<tSetPlayerFileName>(h, "_SetPlayerFileName");
               _SetPlayerForcedCodec = TGetProcAddress<tSetPlayerForcedCodec>(h, "_SetPlayerForcedCodec");
               _SetPlayerFramePosition = TGetProcAddress<tSetPlayerFramePosition>(h, "_SetPlayerFramePosition");
               _SetPlayerHwAccel = TGetProcAddress<tSetPlayerHwAccel>(h, "_SetPlayerHwAccel");
               _SetPlayerRefreshPausedDisplay = TGetProcAddress<tSetPlayerRefreshPausedDisplay>(h, "_SetPlayerRefreshPausedDisplay");
               _SetPlayerRefreshPausedDisplayFrameRate = TGetProcAddress<tSetPlayerRefreshPausedDisplayFrameRate>(h, "_SetPlayerRefreshPausedDisplayFrameRate");
               _SetPlayerSpeedRatio = TGetProcAddress<tSetPlayerSpeedRatio>(h, "_SetPlayerSpeedRatio");
               _SetPlayerSpeedRatioConstantAudioPitch = TGetProcAddress<tSetPlayerSpeedRatioConstantAudioPitch>(h, "_SetPlayerSpeedRatioConstantAudioPitch");
               _SetPlayerTimePosition = TGetProcAddress<tSetPlayerTimePosition>(h, "_SetPlayerTimePosition");
               _SetPlayerTrackBarSynchrone = TGetProcAddress<tSetPlayerTrackBarSynchrone>(h, "_SetPlayerTrackBarSynchrone");
               _SetPlaylistIndex = TGetProcAddress<tSetPlaylistIndex>(h, "_SetPlaylistIndex");
               _SetPreallocCapFileCopiedAfterRecording = TGetProcAddress<tSetPreallocCapFileCopiedAfterRecording>(h, "_SetPreallocCapFileCopiedAfterRecording");
               _SetPreallocCapFileEnabled = TGetProcAddress<tSetPreallocCapFileEnabled>(h, "_SetPreallocCapFileEnabled");
               _SetPreallocCapFileName = TGetProcAddress<tSetPreallocCapFileName>(h, "_SetPreallocCapFileName");
               _SetPreallocCapFileSizeInMB = TGetProcAddress<tSetPreallocCapFileSizeInMB>(h, "_SetPreallocCapFileSizeInMB");
               _SetPreviewZoomSize = TGetProcAddress<tSetPreviewZoomSize>(h, "_SetPreviewZoomSize");
               _SetQuickDeviceInitialization = TGetProcAddress<tSetQuickDeviceInitialization>(h, "_SetQuickDeviceInitialization");
               _SetRawAudioSampleCapture = TGetProcAddress<tSetRawAudioSampleCapture>(h, "_SetRawAudioSampleCapture");
               _SetRawCaptureAsyncEvent = TGetProcAddress<tSetRawCaptureAsyncEvent>(h, "_SetRawCaptureAsyncEvent");
               _SetRawSampleCaptureLocation = TGetProcAddress<tSetRawSampleCaptureLocation>(h, "_SetRawSampleCaptureLocation");
               _SetRawVideoSampleCapture = TGetProcAddress<tSetRawVideoSampleCapture>(h, "_SetRawVideoSampleCapture");
               _SetRecordingAudioBitRate = TGetProcAddress<tSetRecordingAudioBitRate>(h, "_SetRecordingAudioBitRate");
               _SetRecordingBacktimedFramesCount = TGetProcAddress<tSetRecordingBacktimedFramesCount>(h, "_SetRecordingBacktimedFramesCount");
               _SetRecordingCanPause = TGetProcAddress<tSetRecordingCanPause>(h, "_SetRecordingCanPause");
               _SetRecordingFileName = TGetProcAddress<tSetRecordingFileName>(h, "_SetRecordingFileName");
               _SetRecordingFileSizeMaxInMB = TGetProcAddress<tSetRecordingFileSizeMaxInMB>(h, "_SetRecordingFileSizeMaxInMB");
               _SetRecordingInNativeFormat = TGetProcAddress<tSetRecordingInNativeFormat>(h, "_SetRecordingInNativeFormat");
               _SetRecordingMethod = TGetProcAddress<tSetRecordingMethod>(h, "_SetRecordingMethod");
               _SetRecordingOnMotion_Enabled = TGetProcAddress<tSetRecordingOnMotion_Enabled>(h, "_SetRecordingOnMotion_Enabled");
               _SetRecordingOnMotion_MotionThreshold = TGetProcAddress<tSetRecordingOnMotion_MotionThreshold>(h, "_SetRecordingOnMotion_MotionThreshold");
               _SetRecordingOnMotion_NoMotionPauseDelayMs = TGetProcAddress<tSetRecordingOnMotion_NoMotionPauseDelayMs>(h, "_SetRecordingOnMotion_NoMotionPauseDelayMs");
               _SetRecordingPauseCreatesNewFile = TGetProcAddress<tSetRecordingPauseCreatesNewFile>(h, "_SetRecordingPauseCreatesNewFile");
               _SetRecordingSize = TGetProcAddress<tSetRecordingSize>(h, "_SetRecordingSize");
               _SetRecordingTimer = TGetProcAddress<tSetRecordingTimer>(h, "_SetRecordingTimer");
               _SetRecordingTimerInterval = TGetProcAddress<tSetRecordingTimerInterval>(h, "_SetRecordingTimerInterval");
               _SetRecordingVideoBitRate = TGetProcAddress<tSetRecordingVideoBitRate>(h, "_SetRecordingVideoBitRate");
               _SetReencodingIncludeAudioStream = TGetProcAddress<tSetReencodingIncludeAudioStream>(h, "_SetReencodingIncludeAudioStream");
               _SetReencodingIncludeVideoStream = TGetProcAddress<tSetReencodingIncludeVideoStream>(h, "_SetReencodingIncludeVideoStream");
               _SetReencodingMethod = TGetProcAddress<tSetReencodingMethod>(h, "_SetReencodingMethod");
               _SetReencodingNewVideoClip = TGetProcAddress<tSetReencodingNewVideoClip>(h, "_SetReencodingNewVideoClip");
               _SetReencodingSourceVideoClip = TGetProcAddress<tSetReencodingSourceVideoClip>(h, "_SetReencodingSourceVideoClip");
               _SetReencodingStartFrame = TGetProcAddress<tSetReencodingStartFrame>(h, "_SetReencodingStartFrame");
               _SetReencodingStartTime = TGetProcAddress<tSetReencodingStartTime>(h, "_SetReencodingStartTime");
               _SetReencodingStopFrame = TGetProcAddress<tSetReencodingStopFrame>(h, "_SetReencodingStopFrame");
               _SetReencodingStopTime = TGetProcAddress<tSetReencodingStopTime>(h, "_SetReencodingStopTime");
               _SetReencodingUseAudioCompressor = TGetProcAddress<tSetReencodingUseAudioCompressor>(h, "_SetReencodingUseAudioCompressor");
               _SetReencodingUseFrameGrabber = TGetProcAddress<tSetReencodingUseFrameGrabber>(h, "_SetReencodingUseFrameGrabber");
               _SetReencodingUseVideoCompressor = TGetProcAddress<tSetReencodingUseVideoCompressor>(h, "_SetReencodingUseVideoCompressor");
               _SetReencodingWMVOutput = TGetProcAddress<tSetReencodingWMVOutput>(h, "_SetReencodingWMVOutput");
               _SetScreenRecordingLayeredWindows = TGetProcAddress<tSetScreenRecordingLayeredWindows>(h, "_SetScreenRecordingLayeredWindows");
               _SetScreenRecordingMonitor = TGetProcAddress<tSetScreenRecordingMonitor>(h, "_SetScreenRecordingMonitor");
               _SetScreenRecordingNonVisibleWindows = TGetProcAddress<tSetScreenRecordingNonVisibleWindows>(h, "_SetScreenRecordingNonVisibleWindows");
               _SetScreenRecordingSizePercent = TGetProcAddress<tSetScreenRecordingSizePercent>(h, "_SetScreenRecordingSizePercent");
               _SetScreenRecordingThroughClipboard = TGetProcAddress<tSetScreenRecordingThroughClipboard>(h, "_SetScreenRecordingThroughClipboard");
               _SetScreenRecordingWithCursor = TGetProcAddress<tSetScreenRecordingWithCursor>(h, "_SetScreenRecordingWithCursor");
               _SetSendToDV_DeviceIndex = TGetProcAddress<tSetSendToDV_DeviceIndex>(h, "_SetSendToDV_DeviceIndex");
               _SetSpeakerBalance = TGetProcAddress<tSetSpeakerBalance>(h, "_SetSpeakerBalance");
               _SetSpeakerControl = TGetProcAddress<tSetSpeakerControl>(h, "_SetSpeakerControl");
               _SetSpeakerVolume = TGetProcAddress<tSetSpeakerVolume>(h, "_SetSpeakerVolume");
               _SetStoragePath = TGetProcAddress<tSetStoragePath>(h, "_SetStoragePath");
               _SetStoragePathMode = TGetProcAddress<tSetStoragePathMode>(h, "_SetStoragePathMode");
               _SetStoreDeviceSettingsInRegistry = TGetProcAddress<tSetStoreDeviceSettingsInRegistry>(h, "_SetStoreDeviceSettingsInRegistry");
               _SetStreamInterface_Format = TGetProcAddress<tSetStreamInterface_Format>(h, "_SetStreamInterface_Format");
               _SetStreamInterface_FrameRate = TGetProcAddress<tSetStreamInterface_FrameRate>(h, "_SetStreamInterface_FrameRate");
               _SetStreamInterface_IsRealTime = TGetProcAddress<tSetStreamInterface_IsRealTime>(h, "_SetStreamInterface_IsRealTime");
               _SetSyncCommands = TGetProcAddress<tSetSyncCommands>(h, "_SetSyncCommands");
               _SetSynchronizationRole = TGetProcAddress<tSetSynchronizationRole>(h, "_SetSynchronizationRole");
               _SetSynchronized = TGetProcAddress<tSetSynchronized>(h, "_SetSynchronized");
               _SetSyncPreview = TGetProcAddress<tSetSyncPreview>(h, "_SetSyncPreview");
               _SetTextOverlay_Align = TGetProcAddress<tSetTextOverlay_Align>(h, "_SetTextOverlay_Align");
               _SetTextOverlay_AlphaBlend = TGetProcAddress<tSetTextOverlay_AlphaBlend>(h, "_SetTextOverlay_AlphaBlend");
               _SetTextOverlay_AlphaBlendValue = TGetProcAddress<tSetTextOverlay_AlphaBlendValue>(h, "_SetTextOverlay_AlphaBlendValue");
               _SetTextOverlay_BkColor = TGetProcAddress<tSetTextOverlay_BkColor>(h, "_SetTextOverlay_BkColor");
               _SetTextOverlay_CustomVar = TGetProcAddress<tSetTextOverlay_CustomVar>(h, "_SetTextOverlay_CustomVar");
               _SetTextOverlay_Enabled = TGetProcAddress<tSetTextOverlay_Enabled>(h, "_SetTextOverlay_Enabled");
               _SetTextOverlay_Font = TGetProcAddress<tSetTextOverlay_Font>(h, "_SetTextOverlay_Font");
               _SetTextOverlay_FontColor = TGetProcAddress<tSetTextOverlay_FontColor>(h, "_SetTextOverlay_FontColor");
               _SetTextOverlay_FontSize = TGetProcAddress<tSetTextOverlay_FontSize>(h, "_SetTextOverlay_FontSize");
               _SetTextOverlay_GradientColor = TGetProcAddress<tSetTextOverlay_GradientColor>(h, "_SetTextOverlay_GradientColor");
               _SetTextOverlay_GradientMode = TGetProcAddress<tSetTextOverlay_GradientMode>(h, "_SetTextOverlay_GradientMode");
               _SetTextOverlay_HighResFont = TGetProcAddress<tSetTextOverlay_HighResFont>(h, "_SetTextOverlay_HighResFont");
               _SetTextOverlay_Left = TGetProcAddress<tSetTextOverlay_Left>(h, "_SetTextOverlay_Left");
               _SetTextOverlay_Orientation = TGetProcAddress<tSetTextOverlay_Orientation>(h, "_SetTextOverlay_Orientation");
               _SetTextOverlay_Right = TGetProcAddress<tSetTextOverlay_Right>(h, "_SetTextOverlay_Right");
               _SetTextOverlay_Scrolling = TGetProcAddress<tSetTextOverlay_Scrolling>(h, "_SetTextOverlay_Scrolling");
               _SetTextOverlay_ScrollingSpeed = TGetProcAddress<tSetTextOverlay_ScrollingSpeed>(h, "_SetTextOverlay_ScrollingSpeed");
               _SetTextOverlay_Shadow = TGetProcAddress<tSetTextOverlay_Shadow>(h, "_SetTextOverlay_Shadow");
               _SetTextOverlay_ShadowColor = TGetProcAddress<tSetTextOverlay_ShadowColor>(h, "_SetTextOverlay_ShadowColor");
               _SetTextOverlay_ShadowDirection = TGetProcAddress<tSetTextOverlay_ShadowDirection>(h, "_SetTextOverlay_ShadowDirection");
               _SetTextOverlay_String = TGetProcAddress<tSetTextOverlay_String>(h, "_SetTextOverlay_String");
               _SetTextOverlay_TargetDisplay = TGetProcAddress<tSetTextOverlay_TargetDisplay>(h, "_SetTextOverlay_TargetDisplay");
               _SetTextOverlay_Top = TGetProcAddress<tSetTextOverlay_Top>(h, "_SetTextOverlay_Top");
               _SetTextOverlay_Transparent = TGetProcAddress<tSetTextOverlay_Transparent>(h, "_SetTextOverlay_Transparent");
               _SetTextOverlay_VideoAlignment = TGetProcAddress<tSetTextOverlay_VideoAlignment>(h, "_SetTextOverlay_VideoAlignment");
               _SetTextOverlayAlign = TGetProcAddress<tSetTextOverlayAlign>(h, "_SetTextOverlayAlign");
               _SetTextOverlayAlphaBlend = TGetProcAddress<tSetTextOverlayAlphaBlend>(h, "_SetTextOverlayAlphaBlend");
               _SetTextOverlayAlphaBlendValue = TGetProcAddress<tSetTextOverlayAlphaBlendValue>(h, "_SetTextOverlayAlphaBlendValue");
               _SetTextOverlayBkColor = TGetProcAddress<tSetTextOverlayBkColor>(h, "_SetTextOverlayBkColor");
               _SetTextOverlayEnabled = TGetProcAddress<tSetTextOverlayEnabled>(h, "_SetTextOverlayEnabled");
               _SetTextOverlayFont = TGetProcAddress<tSetTextOverlayFont>(h, "_SetTextOverlayFont");
               _SetTextOverlayFontColor = TGetProcAddress<tSetTextOverlayFontColor>(h, "_SetTextOverlayFontColor");
               _SetTextOverlayFontSize = TGetProcAddress<tSetTextOverlayFontSize>(h, "_SetTextOverlayFontSize");
               _SetTextOverlayGradientColor = TGetProcAddress<tSetTextOverlayGradientColor>(h, "_SetTextOverlayGradientColor");
               _SetTextOverlayGradientMode = TGetProcAddress<tSetTextOverlayGradientMode>(h, "_SetTextOverlayGradientMode");
               _SetTextOverlayHighResFont = TGetProcAddress<tSetTextOverlayHighResFont>(h, "_SetTextOverlayHighResFont");
               _SetTextOverlayLeft = TGetProcAddress<tSetTextOverlayLeft>(h, "_SetTextOverlayLeft");
               _SetTextOverlayOrientation = TGetProcAddress<tSetTextOverlayOrientation>(h, "_SetTextOverlayOrientation");
               _SetTextOverlayRight = TGetProcAddress<tSetTextOverlayRight>(h, "_SetTextOverlayRight");
               _SetTextOverlayScrolling = TGetProcAddress<tSetTextOverlayScrolling>(h, "_SetTextOverlayScrolling");
               _SetTextOverlayScrollingSpeed = TGetProcAddress<tSetTextOverlayScrollingSpeed>(h, "_SetTextOverlayScrollingSpeed");
               _SetTextOverlaySelector = TGetProcAddress<tSetTextOverlaySelector>(h, "_SetTextOverlaySelector");
               _SetTextOverlayShadow = TGetProcAddress<tSetTextOverlayShadow>(h, "_SetTextOverlayShadow");
               _SetTextOverlayShadowColor = TGetProcAddress<tSetTextOverlayShadowColor>(h, "_SetTextOverlayShadowColor");
               _SetTextOverlayShadowDirection = TGetProcAddress<tSetTextOverlayShadowDirection>(h, "_SetTextOverlayShadowDirection");
               _SetTextOverlayString = TGetProcAddress<tSetTextOverlayString>(h, "_SetTextOverlayString");
               _SetTextOverlayTargetDisplay = TGetProcAddress<tSetTextOverlayTargetDisplay>(h, "_SetTextOverlayTargetDisplay");
               _SetTextOverlayTop = TGetProcAddress<tSetTextOverlayTop>(h, "_SetTextOverlayTop");
               _SetTextOverlayTransparent = TGetProcAddress<tSetTextOverlayTransparent>(h, "_SetTextOverlayTransparent");
               _SetTextOverlayVideoAlignment = TGetProcAddress<tSetTextOverlayVideoAlignment>(h, "_SetTextOverlayVideoAlignment");
               _SetThirdPartyDeinterlacer = TGetProcAddress<tSetThirdPartyDeinterlacer>(h, "_SetThirdPartyDeinterlacer");
               _SetTranslateMouseCoordinates = TGetProcAddress<tSetTranslateMouseCoordinates>(h, "_SetTranslateMouseCoordinates");
               _SetTunerFrequency = TGetProcAddress<tSetTunerFrequency>(h, "_SetTunerFrequency");
               _SetTunerMode = TGetProcAddress<tSetTunerMode>(h, "_SetTunerMode");
               _SetTVChannel = TGetProcAddress<tSetTVChannel>(h, "_SetTVChannel");
               _SetTVCountryCode = TGetProcAddress<tSetTVCountryCode>(h, "_SetTVCountryCode");
               _SetTVTunerInputType = TGetProcAddress<tSetTVTunerInputType>(h, "_SetTVTunerInputType");
               _SetTVUseFrequencyOverrides = TGetProcAddress<tSetTVUseFrequencyOverrides>(h, "_SetTVUseFrequencyOverrides");
               _SetUseClock = TGetProcAddress<tSetUseClock>(h, "_SetUseClock");
               _Setv360_AspectRatio = TGetProcAddress<tSetv360_AspectRatio>(h, "_Setv360_AspectRatio");
               _Setv360_Enabled = TGetProcAddress<tSetv360_Enabled>(h, "_Setv360_Enabled");
               _Setv360_MasterAngle = TGetProcAddress<tSetv360_MasterAngle>(h, "_Setv360_MasterAngle");
               _Setv360_MouseAction = TGetProcAddress<tSetv360_MouseAction>(h, "_Setv360_MouseAction");
               _Setv360_MouseActionPercent = TGetProcAddress<tSetv360_MouseActionPercent>(h, "_Setv360_MouseActionPercent");
               _SetVCRHorizontalLocking = TGetProcAddress<tSetVCRHorizontalLocking>(h, "_SetVCRHorizontalLocking");
               _SetVersion = TGetProcAddress<tSetVersion>(h, "_SetVersion");
               _SetVideoCompression_DataRate = TGetProcAddress<tSetVideoCompression_DataRate>(h, "_SetVideoCompression_DataRate");
               _SetVideoCompression_KeyFrameRate = TGetProcAddress<tSetVideoCompression_KeyFrameRate>(h, "_SetVideoCompression_KeyFrameRate");
               _SetVideoCompression_PFramesPerKeyFrame = TGetProcAddress<tSetVideoCompression_PFramesPerKeyFrame>(h, "_SetVideoCompression_PFramesPerKeyFrame");
               _SetVideoCompression_Quality = TGetProcAddress<tSetVideoCompression_Quality>(h, "_SetVideoCompression_Quality");
               _SetVideoCompression_WindowSize = TGetProcAddress<tSetVideoCompression_WindowSize>(h, "_SetVideoCompression_WindowSize");
               _SetVideoCompressionDefaults = TGetProcAddress<tSetVideoCompressionDefaults>(h, "_SetVideoCompressionDefaults");
               _SetVideoCompressionSettings = TGetProcAddress<tSetVideoCompressionSettings>(h, "_SetVideoCompressionSettings");
               _SetVideoCompressor = TGetProcAddress<tSetVideoCompressor>(h, "_SetVideoCompressor");
               _SetVideoControlMode = TGetProcAddress<tSetVideoControlMode>(h, "_SetVideoControlMode");
               _SetVideoControlMode2 = TGetProcAddress<tSetVideoControlMode2>(h, "_SetVideoControlMode2");
               _SetVideoControlSettings = TGetProcAddress<tSetVideoControlSettings>(h, "_SetVideoControlSettings");
               _SetVideoCursor = TGetProcAddress<tSetVideoCursor>(h, "_SetVideoCursor");
               _SetVideoDelay = TGetProcAddress<tSetVideoDelay>(h, "_SetVideoDelay");
               _SetVideoDevice = TGetProcAddress<tSetVideoDevice>(h, "_SetVideoDevice");
               _SetVideoDoubleBuffered = TGetProcAddress<tSetVideoDoubleBuffered>(h, "_SetVideoDoubleBuffered");
               _SetVideoFormat = TGetProcAddress<tSetVideoFormat>(h, "_SetVideoFormat");
               _SetVideoFromImages_BitmapsSortedBy = TGetProcAddress<tSetVideoFromImages_BitmapsSortedBy>(h, "_SetVideoFromImages_BitmapsSortedBy");
               _SetVideoFromImages_RepeatIndefinitely = TGetProcAddress<tSetVideoFromImages_RepeatIndefinitely>(h, "_SetVideoFromImages_RepeatIndefinitely");
               _SetVideoFromImages_SourceDirectory = TGetProcAddress<tSetVideoFromImages_SourceDirectory>(h, "_SetVideoFromImages_SourceDirectory");
               _SetVideoFromImages_TemporaryFile = TGetProcAddress<tSetVideoFromImages_TemporaryFile>(h, "_SetVideoFromImages_TemporaryFile");
               _SetVideoInput = TGetProcAddress<tSetVideoInput>(h, "_SetVideoInput");
               _SetVideoProcessingBrightness = TGetProcAddress<tSetVideoProcessingBrightness>(h, "_SetVideoProcessingBrightness");
               _SetVideoProcessingContrast = TGetProcAddress<tSetVideoProcessingContrast>(h, "_SetVideoProcessingContrast");
               _SetVideoProcessingDeinterlacing = TGetProcAddress<tSetVideoProcessingDeinterlacing>(h, "_SetVideoProcessingDeinterlacing");
               _SetVideoProcessingGrayScale = TGetProcAddress<tSetVideoProcessingGrayScale>(h, "_SetVideoProcessingGrayScale");
               _SetVideoProcessingHue = TGetProcAddress<tSetVideoProcessingHue>(h, "_SetVideoProcessingHue");
               _SetVideoProcessingInvertColors = TGetProcAddress<tSetVideoProcessingInvertColors>(h, "_SetVideoProcessingInvertColors");
               _SetVideoProcessingLeftRight = TGetProcAddress<tSetVideoProcessingLeftRight>(h, "_SetVideoProcessingLeftRight");
               _SetVideoProcessingPixellization = TGetProcAddress<tSetVideoProcessingPixellization>(h, "_SetVideoProcessingPixellization");
               _SetVideoProcessingRotation = TGetProcAddress<tSetVideoProcessingRotation>(h, "_SetVideoProcessingRotation");
               _SetVideoProcessingRotationCustomAngle = TGetProcAddress<tSetVideoProcessingRotationCustomAngle>(h, "_SetVideoProcessingRotationCustomAngle");
               _SetVideoProcessingSaturation = TGetProcAddress<tSetVideoProcessingSaturation>(h, "_SetVideoProcessingSaturation");
               _SetVideoProcessingTopDown = TGetProcAddress<tSetVideoProcessingTopDown>(h, "_SetVideoProcessingTopDown");
               _SetVideoQuality = TGetProcAddress<tSetVideoQuality>(h, "_SetVideoQuality");
               _SetVideoQualitySettings = TGetProcAddress<tSetVideoQualitySettings>(h, "_SetVideoQualitySettings");
               _SetVideoRenderer = TGetProcAddress<tSetVideoRenderer>(h, "_SetVideoRenderer");
               _SetVideoRendererExternal = TGetProcAddress<tSetVideoRendererExternal>(h, "_SetVideoRendererExternal");
               _SetVideoRendererExternalIndex = TGetProcAddress<tSetVideoRendererExternalIndex>(h, "_SetVideoRendererExternalIndex");
               _SetVideoRendererPriority = TGetProcAddress<tSetVideoRendererPriority>(h, "_SetVideoRendererPriority");
               _SetVideoSize = TGetProcAddress<tSetVideoSize>(h, "_SetVideoSize");
               _SetVideoSource = TGetProcAddress<tSetVideoSource>(h, "_SetVideoSource");
               _SetVideoSource_FileOrURL = TGetProcAddress<tSetVideoSource_FileOrURL>(h, "_SetVideoSource_FileOrURL");
               _SetVideoSource_FileOrURL_StartTime = TGetProcAddress<tSetVideoSource_FileOrURL_StartTime>(h, "_SetVideoSource_FileOrURL_StartTime");
               _SetVideoSource_FileOrURL_StopTime = TGetProcAddress<tSetVideoSource_FileOrURL_StopTime>(h, "_SetVideoSource_FileOrURL_StopTime");
               _SetVideoStreamNumber = TGetProcAddress<tSetVideoStreamNumber>(h, "_SetVideoStreamNumber");
               _SetVideoSubtype = TGetProcAddress<tSetVideoSubtype>(h, "_SetVideoSubtype");
               _SetVideoVisibleWhenStopped = TGetProcAddress<tSetVideoVisibleWhenStopped>(h, "_SetVideoVisibleWhenStopped");
               _SetVirtualAudioStreamControl = TGetProcAddress<tSetVirtualAudioStreamControl>(h, "_SetVirtualAudioStreamControl");
               _SetVirtualVideoStreamControl = TGetProcAddress<tSetVirtualVideoStreamControl>(h, "_SetVirtualVideoStreamControl");
               _SetVMR9ImageAdjustmentValue = TGetProcAddress<tSetVMR9ImageAdjustmentValue>(h, "_SetVMR9ImageAdjustmentValue");
               _SetVuMeter = TGetProcAddress<tSetVuMeter>(h, "_SetVuMeter");
               _SetVuMeter_Enabled = TGetProcAddress<tSetVuMeter_Enabled>(h, "_SetVuMeter_Enabled");
               _SetVUMeterSetting = TGetProcAddress<tSetVUMeterSetting>(h, "_SetVUMeterSetting");
               _SetWebcamStillCaptureButton = TGetProcAddress<tSetWebcamStillCaptureButton>(h, "_SetWebcamStillCaptureButton");
               _SetWindowRecordingByHandle = TGetProcAddress<tSetWindowRecordingByHandle>(h, "_SetWindowRecordingByHandle");
               _SetWindowRecordingByName = TGetProcAddress<tSetWindowRecordingByName>(h, "_SetWindowRecordingByName");
               _SetWindowTransparency = TGetProcAddress<tSetWindowTransparency>(h, "_SetWindowTransparency");
               _SetZoomCoeff = TGetProcAddress<tSetZoomCoeff>(h, "_SetZoomCoeff");
               _SetZoomXCenter = TGetProcAddress<tSetZoomXCenter>(h, "_SetZoomXCenter");
               _SetZoomYCenter = TGetProcAddress<tSetZoomYCenter>(h, "_SetZoomYCenter");
               _ShowDebugWindow = TGetProcAddress<tShowDebugWindow>(h, "_ShowDebugWindow");
               _ShowDialog = TGetProcAddress<tShowDialog>(h, "_ShowDialog");
               _StartAudioRecording = TGetProcAddress<tStartAudioRecording>(h, "_StartAudioRecording");
               _StartAudioRendering = TGetProcAddress<tStartAudioRendering>(h, "_StartAudioRendering");
               _StartPreview = TGetProcAddress<tStartPreview>(h, "_StartPreview");
               _StartRecording = TGetProcAddress<tStartRecording>(h, "_StartRecording");
               _StartReencoding = TGetProcAddress<tStartReencoding>(h, "_StartReencoding");
               _StartSynchronized = TGetProcAddress<tStartSynchronized>(h, "_StartSynchronized");
               _Stop = TGetProcAddress<tStop>(h, "_Stop");
               _StopPlayer = TGetProcAddress<tStopPlayer>(h, "_StopPlayer");
               _StopPreview = TGetProcAddress<tStopPreview>(h, "_StopPreview");
               _StopRecording = TGetProcAddress<tStopRecording>(h, "_StopRecording");
               _StopReencoding = TGetProcAddress<tStopReencoding>(h, "_StopReencoding");
               _StreamInterface_PushData = TGetProcAddress<tStreamInterface_PushData>(h, "_StreamInterface_PushData");
               _TextOverlay_CreateCustomFont = TGetProcAddress<tTextOverlay_CreateCustomFont>(h, "_TextOverlay_CreateCustomFont");
               _ThirdPartyFilter_AddToList = TGetProcAddress<tThirdPartyFilter_AddToList>(h, "_ThirdPartyFilter_AddToList");
               _ThirdPartyFilter_ClearList = TGetProcAddress<tThirdPartyFilter_ClearList>(h, "_ThirdPartyFilter_ClearList");
               _ThirdPartyFilter_Enable = TGetProcAddress<tThirdPartyFilter_Enable>(h, "_ThirdPartyFilter_Enable");
               _ThirdPartyFilter_RemoveFromList = TGetProcAddress<tThirdPartyFilter_RemoveFromList>(h, "_ThirdPartyFilter_RemoveFromList");
               _ThirdPartyFilter_ShowDialog = TGetProcAddress<tThirdPartyFilter_ShowDialog>(h, "_ThirdPartyFilter_ShowDialog");
               _TVClearFrequencyOverrides = TGetProcAddress<tTVClearFrequencyOverrides>(h, "_TVClearFrequencyOverrides");
               _TVGetMinMaxChannels = TGetProcAddress<tTVGetMinMaxChannels>(h, "_TVGetMinMaxChannels");
               _TVSetChannelFrequencyOverride = TGetProcAddress<tTVSetChannelFrequencyOverride>(h, "_TVSetChannelFrequencyOverride");
               _TVStartAutoScan = TGetProcAddress<tTVStartAutoScan>(h, "_TVStartAutoScan");
               _TVStartAutoScanChannels = TGetProcAddress<tTVStartAutoScanChannels>(h, "_TVStartAutoScanChannels");
               _TVStopAutoScan = TGetProcAddress<tTVStopAutoScan>(h, "_TVStopAutoScan");
               _UpdateTrackbarBounds = TGetProcAddress<tUpdateTrackbarBounds>(h, "_UpdateTrackbarBounds");
               _UseNearestVideoSize = TGetProcAddress<tUseNearestVideoSize>(h, "_UseNearestVideoSize");
               _v360_AddYawPitchRoll = TGetProcAddress<tv360_AddYawPitchRoll>(h, "_v360_AddYawPitchRoll");
               _v360_GetAngle = TGetProcAddress<tv360_GetAngle>(h, "_v360_GetAngle");
               _v360_GetYawPitchRoll = TGetProcAddress<tv360_GetYawPitchRoll>(h, "_v360_GetYawPitchRoll");
               _v360_ResetAnglesToDefault = TGetProcAddress<tv360_ResetAnglesToDefault>(h, "_v360_ResetAnglesToDefault");
               _v360_SetAngle = TGetProcAddress<tv360_SetAngle>(h, "_v360_SetAngle");
               _v360_SetInterpolation = TGetProcAddress<tv360_SetInterpolation>(h, "_v360_SetInterpolation");
               _v360_SetProjection = TGetProcAddress<tv360_SetProjection>(h, "_v360_SetProjection");
               _v360_SetStereoFormat = TGetProcAddress<tv360_SetStereoFormat>(h, "_v360_SetStereoFormat");
               _v360_SetTranspose = TGetProcAddress<tv360_SetTranspose>(h, "_v360_SetTranspose");
               _v360_SetYawPitchRoll = TGetProcAddress<tv360_SetYawPitchRoll>(h, "_v360_SetYawPitchRoll");
               _VDECGetHorizontalLocked = TGetProcAddress<tVDECGetHorizontalLocked>(h, "_VDECGetHorizontalLocked");
               _VDECGetNumberOfLines = TGetProcAddress<tVDECGetNumberOfLines>(h, "_VDECGetNumberOfLines");
               _VDECGetOutputEnable = TGetProcAddress<tVDECGetOutputEnable>(h, "_VDECGetOutputEnable");
               _VDECGetVCRHorizontalLocking = TGetProcAddress<tVDECGetVCRHorizontalLocking>(h, "_VDECGetVCRHorizontalLocking");
               _VDECPutOutputEnable = TGetProcAddress<tVDECPutOutputEnable>(h, "_VDECPutOutputEnable");
               _VDECPutTVFormat = TGetProcAddress<tVDECPutTVFormat>(h, "_VDECPutTVFormat");
               _VDECPutVCRHorizontalLocking = TGetProcAddress<tVDECPutVCRHorizontalLocking>(h, "_VDECPutVCRHorizontalLocking");
               _VideoCompressorIndex = TGetProcAddress<tVideoCompressorIndex>(h, "_VideoCompressorIndex");
               _VideoDeviceIndex = TGetProcAddress<tVideoDeviceIndex>(h, "_VideoDeviceIndex");
               _VideoDeviceIndexFromId = TGetProcAddress<tVideoDeviceIndexFromId>(h, "_VideoDeviceIndexFromId");
               _VideoFormatIndex = TGetProcAddress<tVideoFormatIndex>(h, "_VideoFormatIndex");
               _VideoFromImages_CreateSetOfBitmaps = TGetProcAddress<tVideoFromImages_CreateSetOfBitmaps>(h, "_VideoFromImages_CreateSetOfBitmaps");
               _VideoInputIndex = TGetProcAddress<tVideoInputIndex>(h, "_VideoInputIndex");
               _VideoQualityAuto = TGetProcAddress<tVideoQualityAuto>(h, "_VideoQualityAuto");
               _VideoQualityDefault = TGetProcAddress<tVideoQualityDefault>(h, "_VideoQualityDefault");
               _VideoQualityMax = TGetProcAddress<tVideoQualityMax>(h, "_VideoQualityMax");
               _VideoQualityMin = TGetProcAddress<tVideoQualityMin>(h, "_VideoQualityMin");
               _VideoQualityStep = TGetProcAddress<tVideoQualityStep>(h, "_VideoQualityStep");
               _VideoQualityValue = TGetProcAddress<tVideoQualityValue>(h, "_VideoQualityValue");
               _VideoSizeIndex = TGetProcAddress<tVideoSizeIndex>(h, "_VideoSizeIndex");
               _VideoSubtypeIndex = TGetProcAddress<tVideoSubtypeIndex>(h, "_VideoSubtypeIndex");
               _WaitForLastFrameBitmapBits = TGetProcAddress<tWaitForLastFrameBitmapBits>(h, "_WaitForLastFrameBitmapBits");
               _WriteScriptCommand = TGetProcAddress<tWriteScriptCommand>(h, "_WriteScriptCommand");
               _zReservedInternal1 = TGetProcAddress<tzReservedInternal1>(h, "_zReservedInternal1");
               _zReservedInternal2 = TGetProcAddress<tzReservedInternal2>(h, "_zReservedInternal2");
               _zReservedInternal3 = TGetProcAddress<tzReservedInternal3>(h, "_zReservedInternal3");
            //#endregion InitLoadLibraryCPP
        }
    }
    m_VideoGrabberLibLock.Unlock();
    return m_VideoGrabberLib != NULL;
}


CVideoGrabber::CVideoGrabber() :
    m_VideoGrabber(NULL)
{
    if (InitVideoGrabberLib()) {
        m_VideoGrabber = _CreateVideoGrabber(NULL);
    }
}

CVideoGrabber::CVideoGrabber(void* classPtr) :
    m_VideoGrabber(NULL)

{
    if (InitVideoGrabberLib()) {
        m_VideoGrabber = _CreateVideoGrabber(classPtr);
    }
}

CVideoGrabber::~CVideoGrabber() 
{
    if (m_VideoGrabber) {
        _DestroyVideoGrabber(m_VideoGrabber);
        m_VideoGrabber = NULL;
    }
};

//#region DeclareFunctionsCPP
   void CVideoGrabber::About () {  _About (m_VideoGrabber); };
   int CVideoGrabber::AnalogVideoStandardIndex (const wchar_t *Value) {  return _AnalogVideoStandardIndex (m_VideoGrabber, Value); };
   const wchar_t * CVideoGrabber::ASFStreaming_GetAuthorizationList () {  return _ASFStreaming_GetAuthorizationList (m_VideoGrabber); };
   const wchar_t * CVideoGrabber::ASFStreaming_GetConnectedClients () {  return _ASFStreaming_GetConnectedClients (m_VideoGrabber); };
   int CVideoGrabber::ASFStreaming_GetConnectedClientsCount () {  return _ASFStreaming_GetConnectedClientsCount (m_VideoGrabber); };
   BOOL CVideoGrabber::ASFStreaming_ResetAuthorizations () {  return _ASFStreaming_ResetAuthorizations (m_VideoGrabber); };
   BOOL CVideoGrabber::ASFStreaming_SetAuthorization (BOOL Allowed, const wchar_t *IP, const wchar_t *Mask) {  return _ASFStreaming_SetAuthorization (m_VideoGrabber, Allowed, IP, Mask); };
   BOOL CVideoGrabber::AssociateMultiplexedSlave (int InputNumber, int SlaveUniqueID) {  return _AssociateMultiplexedSlave (m_VideoGrabber, InputNumber, SlaveUniqueID); };
   int CVideoGrabber::AudioCompressorIndex (const wchar_t *Value) {  return _AudioCompressorIndex (m_VideoGrabber, Value); };
   int CVideoGrabber::AudioDeviceIndex (const wchar_t *Value) {  return _AudioDeviceIndex (m_VideoGrabber, Value); };
   int CVideoGrabber::AudioInputIndex (const wchar_t *Value) {  return _AudioInputIndex (m_VideoGrabber, Value); };
   int CVideoGrabber::AudioRendererIndex (const wchar_t *Value) {  return _AudioRendererIndex (m_VideoGrabber, Value); };
   BOOL CVideoGrabber::AVIDuration (const wchar_t *AVIFile, __int64*Duration, __int64*FrameCount) {  return _AVIDuration (m_VideoGrabber, AVIFile, Duration, FrameCount); };
   const wchar_t * CVideoGrabber::AVIHeaderInfo (const wchar_t *AVIFile, THeaderAttribute HeaderAttribute) {  return _AVIHeaderInfo (m_VideoGrabber, AVIFile, HeaderAttribute); };
   BOOL CVideoGrabber::AVIInfo (const wchar_t *AVIFile, __int64*Duration, __int64*FrameCount, int*_VideoWidth, int*_VideoHeight, double*VideoFrameRateFps, int*AvgBitRate, int*AudioChannels, int*AudioSamplesPerSec, int*AudioBitsPerSample, const wchar_t **VideoCodec, const wchar_t **AudioCodec) {  return _AVIInfo (m_VideoGrabber, AVIFile, Duration, FrameCount, _VideoWidth, _VideoHeight, VideoFrameRateFps, AvgBitRate, AudioChannels, AudioSamplesPerSec, AudioBitsPerSample, VideoCodec, AudioCodec); };
   const wchar_t * CVideoGrabber::AVIInfo2 (const wchar_t *AVIFile, TAVIInfoType AVIInfoType) {  return _AVIInfo2 (m_VideoGrabber, AVIFile, AVIInfoType); };
   BOOL CVideoGrabber::CameraControlAuto (TCameraControl Setting) {  return _CameraControlAuto (m_VideoGrabber, Setting); };
   int CVideoGrabber::CameraControlDefault (TCameraControl Setting) {  return _CameraControlDefault (m_VideoGrabber, Setting); };
   int CVideoGrabber::CameraControlMax (TCameraControl Setting) {  return _CameraControlMax (m_VideoGrabber, Setting); };
   int CVideoGrabber::CameraControlMin (TCameraControl Setting) {  return _CameraControlMin (m_VideoGrabber, Setting); };
   int CVideoGrabber::CameraControlStep (TCameraControl Setting) {  return _CameraControlStep (m_VideoGrabber, Setting); };
   int CVideoGrabber::CameraControlValue (TCameraControl Setting) {  return _CameraControlValue (m_VideoGrabber, Setting); };
   BOOL CVideoGrabber::Cancel () {  return _Cancel (m_VideoGrabber); };
   BOOL CVideoGrabber::CanProcessMessages () {  return _CanProcessMessages (m_VideoGrabber); };
   BOOL CVideoGrabber::CaptureFrameRenderedTo (int DisplayIndex, TFrameCaptureDest Dest, const wchar_t *FileName) {  return _CaptureFrameRenderedTo (m_VideoGrabber, DisplayIndex, Dest, FileName); };
   BOOL CVideoGrabber::CaptureFrameSyncTo (TFrameCaptureDest Dest, const wchar_t *FileName) {  return _CaptureFrameSyncTo (m_VideoGrabber, Dest, FileName); };
   BOOL CVideoGrabber::CaptureFrameTo (TFrameCaptureDest Dest, const wchar_t *FileName) {  return _CaptureFrameTo (m_VideoGrabber, Dest, FileName); };
   void CVideoGrabber::ClearHeaderAttributes () {  _ClearHeaderAttributes (m_VideoGrabber); };
   void CVideoGrabber::ClosePlayer () {  _ClosePlayer (m_VideoGrabber); };
   void CVideoGrabber::ContinueProcessing () {  _ContinueProcessing (m_VideoGrabber); };
   BOOL CVideoGrabber::CreatePreallocCapFile () {  return _CreatePreallocCapFile (m_VideoGrabber); };
   void * CVideoGrabber::CreateVideoGrabber () {  return _CreateVideoGrabber (m_VideoGrabber); };
   void CVideoGrabber::DestroyVideoGrabber () {  _DestroyVideoGrabber (m_VideoGrabber); };
   void CVideoGrabber::Display_SetLocation (int WindowLeft, int WindowTop, int WindowWidth, int WindowHeight) {  _Display_SetLocation (m_VideoGrabber, WindowLeft, WindowTop, WindowWidth, WindowHeight); };
   BOOL CVideoGrabber::DrawBitmapOverFrame (HBITMAP BitmapHandle, BOOL Stretched, int LeftLocation, int TopLocation, int bmWidth, int bmHeight, BOOL Transparent_Enabled, BOOL UseTransparentColor, int Transparent_ColorValue, BOOL AlphaBlend_Enabled, int AlphaBlend_Value, BOOL ChromaKey, int ChromaKeyRGBColor, int ChromaKeyLeewayPercent) {  return _DrawBitmapOverFrame (m_VideoGrabber, BitmapHandle, Stretched, LeftLocation, TopLocation, bmWidth, bmHeight, Transparent_Enabled, UseTransparentColor, Transparent_ColorValue, AlphaBlend_Enabled, AlphaBlend_Value, ChromaKey, ChromaKeyRGBColor, ChromaKeyLeewayPercent); };
   void CVideoGrabber::DualDisplay_SetLocation (int WindowLeft, int WindowTop, int WindowWidth, int WindowHeight) {  _DualDisplay_SetLocation (m_VideoGrabber, WindowLeft, WindowTop, WindowWidth, WindowHeight); };
   double CVideoGrabber::DVDInfo (const wchar_t *DVDRootDirectory, TDVDInfoType DVDInfoType, int TitleNumber) {  return _DVDInfo (m_VideoGrabber, DVDRootDirectory, DVDInfoType, TitleNumber); };
   BOOL CVideoGrabber::EnableMultiplexedInput (int InputNumber, BOOL Enable) {  return _EnableMultiplexedInput (m_VideoGrabber, InputNumber, Enable); };
   BOOL CVideoGrabber::EnableMultipurposeEncoder (TMultipurposeEncoderInstance MultipurposeEncoderType, BOOL Enable) {  return _EnableMultipurposeEncoder (m_VideoGrabber, MultipurposeEncoderType, Enable); };
   BOOL CVideoGrabber::EnableThreadMode () {  return _EnableThreadMode (m_VideoGrabber); };
   BOOL CVideoGrabber::Encoder_CloseOutputFile (int EncoderUniqueID) {  return _Encoder_CloseOutputFile (m_VideoGrabber, EncoderUniqueID); };
   BOOL CVideoGrabber::Encoder_GetInt (int EncoderID, TEncoder_int Setting, int*Value) {  return _Encoder_GetInt (m_VideoGrabber, EncoderID, Setting, Value); };
   BOOL CVideoGrabber::Encoder_NewOutputFile (int EncoderUniqueID, const wchar_t *OutputFile, BOOL OpenPaused) {  return _Encoder_NewOutputFile (m_VideoGrabber, EncoderUniqueID, OutputFile, OpenPaused); };
   BOOL CVideoGrabber::Encoder_Pause (int EncoderUniqueID) {  return _Encoder_Pause (m_VideoGrabber, EncoderUniqueID); };
   BOOL CVideoGrabber::Encoder_Resume (int EncoderUniqueID) {  return _Encoder_Resume (m_VideoGrabber, EncoderUniqueID); };
   BOOL CVideoGrabber::Encoder_SetInt (int EncoderID, TEncoder_int Setting, int Value) {  return _Encoder_SetInt (m_VideoGrabber, EncoderID, Setting, Value); };
   BOOL CVideoGrabber::Encoder_SetStr (int EncoderID, TEncoder_str Setting, const wchar_t *Value) {  return _Encoder_SetStr (m_VideoGrabber, EncoderID, Setting, Value); };
   int CVideoGrabber::Encoders_CreateInstanceForRecording (const wchar_t *OutputFile) {  return _Encoders_CreateInstanceForRecording (m_VideoGrabber, OutputFile); };
   int CVideoGrabber::Encoders_CreateInstanceForStreaming (const wchar_t *OutputURL) {  return _Encoders_CreateInstanceForStreaming (m_VideoGrabber, OutputURL); };
   void CVideoGrabber::Encoders_RemoveAllInstances () {  _Encoders_RemoveAllInstances (m_VideoGrabber); };
   BOOL CVideoGrabber::Encoders_RemoveInstance (int EncoderUniqueID) {  return _Encoders_RemoveInstance (m_VideoGrabber, EncoderUniqueID); };
   BOOL CVideoGrabber::EnumerateWindows () {  return _EnumerateWindows (m_VideoGrabber); };
   void CVideoGrabber::FastForwardPlayer () {  _FastForwardPlayer (m_VideoGrabber); };
   int CVideoGrabber::FindIndexInListByName (const wchar_t *List, const wchar_t *SearchedString, BOOL IsSubString, BOOL IgnoreCase) {  return _FindIndexInListByName (m_VideoGrabber, List, SearchedString, IsSubString, IgnoreCase); };
   double CVideoGrabber::GetCameraExposure () {  return _GetCameraExposure (m_VideoGrabber); };
   const wchar_t * CVideoGrabber::GetCameraExposureAsString () {  return _GetCameraExposureAsString (m_VideoGrabber); };
   BOOL CVideoGrabber::GetFilterInterfaceByName (const wchar_t *FilterName, void **FilterIntf) {  return _GetFilterInterfaceByName (m_VideoGrabber, FilterName, FilterIntf); };
   int CVideoGrabber::GetFrameBitmapInfo (TFrameBitmapInfoType FrameBitmapInfoType) {  return _GetFrameBitmapInfo (m_VideoGrabber, FrameBitmapInfoType); };
   __int64 CVideoGrabber::GetFrameInfo (int FrameId, TFrameInfoId FrameInfoId) {  return _GetFrameInfo (m_VideoGrabber, FrameId, FrameInfoId); };
   const wchar_t * CVideoGrabber::GetFrameInfoString (TFrameInfoStringId FrameInfoStringId) {  return _GetFrameInfoString (m_VideoGrabber, FrameInfoStringId); };
   BOOL CVideoGrabber::GetFWCam1394 (const wchar_t *FWCam1394ID, int*Value, int*Flags, unsigned int*Capabilities, int*MinValue, int*MaxValue, int*Default) {  return _GetFWCam1394 (m_VideoGrabber, FWCam1394ID, Value, Flags, Capabilities, MinValue, MaxValue, Default); };
   const wchar_t * CVideoGrabber::GetFWCam1394List () {  return _GetFWCam1394List (m_VideoGrabber); };
   BOOL CVideoGrabber::GetImageOverlay_AlphaBlend (int Index) {  return _GetImageOverlay_AlphaBlend (m_VideoGrabber, Index); };
   int CVideoGrabber::GetImageOverlay_AlphaBlendValue (int Index) {  return _GetImageOverlay_AlphaBlendValue (m_VideoGrabber, Index); };
   BOOL CVideoGrabber::GetImageOverlay_ChromaKey (int Index) {  return _GetImageOverlay_ChromaKey (m_VideoGrabber, Index); };
   int CVideoGrabber::GetImageOverlay_ChromaKeyLeewayPercent (int Index) {  return _GetImageOverlay_ChromaKeyLeewayPercent (m_VideoGrabber, Index); };
   int CVideoGrabber::GetImageOverlay_ChromaKeyRGBColor (int Index) {  return _GetImageOverlay_ChromaKeyRGBColor (m_VideoGrabber, Index); };
   BOOL CVideoGrabber::GetImageOverlay_Enabled (int Index) {  return _GetImageOverlay_Enabled (m_VideoGrabber, Index); };
   int CVideoGrabber::GetImageOverlay_Height (int Index) {  return _GetImageOverlay_Height (m_VideoGrabber, Index); };
   int CVideoGrabber::GetImageOverlay_LeftLocation (int Index) {  return _GetImageOverlay_LeftLocation (m_VideoGrabber, Index); };
   double CVideoGrabber::GetImageOverlay_RotationAngle (int Index) {  return _GetImageOverlay_RotationAngle (m_VideoGrabber, Index); };
   BOOL CVideoGrabber::GetImageOverlay_StretchToVideoSize (int Index) {  return _GetImageOverlay_StretchToVideoSize (m_VideoGrabber, Index); };
   int CVideoGrabber::GetImageOverlay_TargetDisplay (int Index) {  return _GetImageOverlay_TargetDisplay (m_VideoGrabber, Index); };
   int CVideoGrabber::GetImageOverlay_TopLocation (int Index) {  return _GetImageOverlay_TopLocation (m_VideoGrabber, Index); };
   BOOL CVideoGrabber::GetImageOverlay_Transparent (int Index) {  return _GetImageOverlay_Transparent (m_VideoGrabber, Index); };
   int CVideoGrabber::GetImageOverlay_TransparentColorValue (int Index) {  return _GetImageOverlay_TransparentColorValue (m_VideoGrabber, Index); };
   BOOL CVideoGrabber::GetImageOverlay_UseTransparentColor (int Index) {  return _GetImageOverlay_UseTransparentColor (m_VideoGrabber, Index); };
   TVideoAlignment CVideoGrabber::GetImageOverlay_VideoAlignment (int Index) {  return _GetImageOverlay_VideoAlignment (m_VideoGrabber, Index); };
   int CVideoGrabber::GetImageOverlay_Width (int Index) {  return _GetImageOverlay_Width (m_VideoGrabber, Index); };
   BOOL CVideoGrabber::GetImageOverlayAlphaBlend () {  return _GetImageOverlayAlphaBlend (m_VideoGrabber); };
   int CVideoGrabber::GetImageOverlayAlphaBlendValue () {  return _GetImageOverlayAlphaBlendValue (m_VideoGrabber); };
   BOOL CVideoGrabber::GetImageOverlayChromaKey () {  return _GetImageOverlayChromaKey (m_VideoGrabber); };
   int CVideoGrabber::GetImageOverlayChromaKeyLeewayPercent () {  return _GetImageOverlayChromaKeyLeewayPercent (m_VideoGrabber); };
   int CVideoGrabber::GetImageOverlayChromaKeyRGBColor () {  return _GetImageOverlayChromaKeyRGBColor (m_VideoGrabber); };
   int CVideoGrabber::GetImageOverlayHeight () {  return _GetImageOverlayHeight (m_VideoGrabber); };
   int CVideoGrabber::GetImageOverlayLeftLocation () {  return _GetImageOverlayLeftLocation (m_VideoGrabber); };
   double CVideoGrabber::GetImageOverlayRotationAngle () {  return _GetImageOverlayRotationAngle (m_VideoGrabber); };
   BOOL CVideoGrabber::GetImageOverlayStretchToVideoSize () {  return _GetImageOverlayStretchToVideoSize (m_VideoGrabber); };
   int CVideoGrabber::GetImageOverlayTargetDisplay () {  return _GetImageOverlayTargetDisplay (m_VideoGrabber); };
   int CVideoGrabber::GetImageOverlayTopLocation () {  return _GetImageOverlayTopLocation (m_VideoGrabber); };
   BOOL CVideoGrabber::GetImageOverlayTransparent () {  return _GetImageOverlayTransparent (m_VideoGrabber); };
   int CVideoGrabber::GetImageOverlayTransparentColorValue () {  return _GetImageOverlayTransparentColorValue (m_VideoGrabber); };
   BOOL CVideoGrabber::GetImageOverlayUseTransparentColor () {  return _GetImageOverlayUseTransparentColor (m_VideoGrabber); };
   TVideoAlignment CVideoGrabber::GetImageOverlayVideoAlignment () {  return _GetImageOverlayVideoAlignment (m_VideoGrabber); };
   int CVideoGrabber::GetImageOverlayWidth () {  return _GetImageOverlayWidth (m_VideoGrabber); };
   const wchar_t * CVideoGrabber::GetItemNameFromList (const wchar_t *List, int ItemIndex) {  return _GetItemNameFromList (m_VideoGrabber, List, ItemIndex); };
   int CVideoGrabber::GetLastAverageStreamValue (TStreamType StreamType) {  return _GetLastAverageStreamValue (m_VideoGrabber, StreamType); };
   HBITMAP CVideoGrabber::GetLastFrameAsHBITMAP (int BufferIndex, BOOL WithOverlays, int SrcLeftLocation, int SrcTopLocation, int SrcWidth, int SrcHeight, int DestWidth, int DestHeight, int BitmapColorBitCount) {  return _GetLastFrameAsHBITMAP (m_VideoGrabber, BufferIndex, WithOverlays, SrcLeftLocation, SrcTopLocation, SrcWidth, SrcHeight, DestWidth, DestHeight, BitmapColorBitCount); };
   void * CVideoGrabber::GetLastFrameBitmapBits (int BufferIndex, BOOL WithOverlays, BOOL ReleaseFrame) {  return _GetLastFrameBitmapBits (m_VideoGrabber, BufferIndex, WithOverlays, ReleaseFrame); };
   void * CVideoGrabber::GetLastFrameBitmapBits2 (int BufferIndex, BOOL WithOverlays, BOOL ReleaseFrame, int*BitmapWidth, int*BitmapHeight, int*BitmapLineSize, int*BitmapSize, int*BitmapBitsPerPixel) {  return _GetLastFrameBitmapBits2 (m_VideoGrabber, BufferIndex, WithOverlays, ReleaseFrame, BitmapWidth, BitmapHeight, BitmapLineSize, BitmapSize, BitmapBitsPerPixel); };
   const wchar_t * CVideoGrabber::GetLogString (TLogType Value) {  return _GetLogString (m_VideoGrabber, Value); };
   int CVideoGrabber::GetMiscDeviceControl (TMiscDeviceControl MiscDeviceControl, int Index) {  return _GetMiscDeviceControl (m_VideoGrabber, MiscDeviceControl, Index); };
   const wchar_t * CVideoGrabber::GetMultipurposeEncoderSettings (TMultipurposeEncoderInstance MultipurposeEncoderType) {  return _GetMultipurposeEncoderSettings (m_VideoGrabber, MultipurposeEncoderType); };
   const wchar_t * CVideoGrabber::GetNDISessions (BOOL AsXML, BOOL ReportURLInfo) {  return _GetNDISessions (m_VideoGrabber, AsXML, ReportURLInfo); };
   int CVideoGrabber::GetNearestVideoHeight (int PreferredVideoWidth, int PreferredVideoHeight) {  return _GetNearestVideoHeight (m_VideoGrabber, PreferredVideoWidth, PreferredVideoHeight); };
   void CVideoGrabber::GetNearestVideoSize (int PreferredVideoWidth, int PreferredVideoHeight, int*NearestVideoWidth, int*NearestVideoHeight) {  _GetNearestVideoSize (m_VideoGrabber, PreferredVideoWidth, PreferredVideoHeight, NearestVideoWidth, NearestVideoHeight); };
   int CVideoGrabber::GetNearestVideoWidth (int PreferredVideoWidth, int PreferredVideoHeight) {  return _GetNearestVideoWidth (m_VideoGrabber, PreferredVideoWidth, PreferredVideoHeight); };
   double CVideoGrabber::GetPixelsDistance (int x1, int y1, int x2, int y2) {  return _GetPixelsDistance (m_VideoGrabber, x1, y1, x2, y2); };
   const wchar_t * CVideoGrabber::GetPlaylist () {  return _GetPlaylist (m_VideoGrabber); };
   int CVideoGrabber::GetRGBPixelAt (int x, int y) {  return _GetRGBPixelAt (m_VideoGrabber, x, y); };
   TTextOverlayAlign CVideoGrabber::GetTextOverlay_Align (int Index) {  return _GetTextOverlay_Align (m_VideoGrabber, Index); };
   BOOL CVideoGrabber::GetTextOverlay_AlphaBlend (int Index) {  return _GetTextOverlay_AlphaBlend (m_VideoGrabber, Index); };
   int CVideoGrabber::GetTextOverlay_AlphaBlendValue (int Index) {  return _GetTextOverlay_AlphaBlendValue (m_VideoGrabber, Index); };
   int CVideoGrabber::GetTextOverlay_BkColor (int Index) {  return _GetTextOverlay_BkColor (m_VideoGrabber, Index); };
   BOOL CVideoGrabber::GetTextOverlay_Enabled (int Index) {  return _GetTextOverlay_Enabled (m_VideoGrabber, Index); };
   INT_PTR CVideoGrabber::GetTextOverlay_Font (int Index) {  return _GetTextOverlay_Font (m_VideoGrabber, Index); };
   int CVideoGrabber::GetTextOverlay_FontColor (int Index) {  return _GetTextOverlay_FontColor (m_VideoGrabber, Index); };
   int CVideoGrabber::GetTextOverlay_FontSize (int Index) {  return _GetTextOverlay_FontSize (m_VideoGrabber, Index); };
   int CVideoGrabber::GetTextOverlay_GradientColor (int Index) {  return _GetTextOverlay_GradientColor (m_VideoGrabber, Index); };
   TTextOverlayGradientMode CVideoGrabber::GetTextOverlay_GradientMode (int Index) {  return _GetTextOverlay_GradientMode (m_VideoGrabber, Index); };
   BOOL CVideoGrabber::GetTextOverlay_HighResFont (int Index) {  return _GetTextOverlay_HighResFont (m_VideoGrabber, Index); };
   int CVideoGrabber::GetTextOverlay_Left (int Index) {  return _GetTextOverlay_Left (m_VideoGrabber, Index); };
   TTextOrientation CVideoGrabber::GetTextOverlay_Orientation (int Index) {  return _GetTextOverlay_Orientation (m_VideoGrabber, Index); };
   int CVideoGrabber::GetTextOverlay_Right (int Index) {  return _GetTextOverlay_Right (m_VideoGrabber, Index); };
   BOOL CVideoGrabber::GetTextOverlay_Scrolling (int Index) {  return _GetTextOverlay_Scrolling (m_VideoGrabber, Index); };
   int CVideoGrabber::GetTextOverlay_ScrollingSpeed (int Index) {  return _GetTextOverlay_ScrollingSpeed (m_VideoGrabber, Index); };
   BOOL CVideoGrabber::GetTextOverlay_Shadow (int Index) {  return _GetTextOverlay_Shadow (m_VideoGrabber, Index); };
   int CVideoGrabber::GetTextOverlay_ShadowColor (int Index) {  return _GetTextOverlay_ShadowColor (m_VideoGrabber, Index); };
   TCardinalDirection CVideoGrabber::GetTextOverlay_ShadowDirection (int Index) {  return _GetTextOverlay_ShadowDirection (m_VideoGrabber, Index); };
   const wchar_t * CVideoGrabber::GetTextOverlay_String (int Index) {  return _GetTextOverlay_String (m_VideoGrabber, Index); };
   int CVideoGrabber::GetTextOverlay_TargetDisplay (int Index) {  return _GetTextOverlay_TargetDisplay (m_VideoGrabber, Index); };
   int CVideoGrabber::GetTextOverlay_Top (int Index) {  return _GetTextOverlay_Top (m_VideoGrabber, Index); };
   BOOL CVideoGrabber::GetTextOverlay_Transparent (int Index) {  return _GetTextOverlay_Transparent (m_VideoGrabber, Index); };
   TVideoAlignment CVideoGrabber::GetTextOverlay_VideoAlignment (int Index) {  return _GetTextOverlay_VideoAlignment (m_VideoGrabber, Index); };
   TTextOverlayAlign CVideoGrabber::GetTextOverlayAlign () {  return _GetTextOverlayAlign (m_VideoGrabber); };
   BOOL CVideoGrabber::GetTextOverlayAlphaBlend () {  return _GetTextOverlayAlphaBlend (m_VideoGrabber); };
   int CVideoGrabber::GetTextOverlayAlphaBlendValue () {  return _GetTextOverlayAlphaBlendValue (m_VideoGrabber); };
   int CVideoGrabber::GetTextOverlayBkColor () {  return _GetTextOverlayBkColor (m_VideoGrabber); };
   BOOL CVideoGrabber::GetTextOverlayEnabled () {  return _GetTextOverlayEnabled (m_VideoGrabber); };
   INT_PTR CVideoGrabber::GetTextOverlayFont () {  return _GetTextOverlayFont (m_VideoGrabber); };
   int CVideoGrabber::GetTextOverlayFontColor () {  return _GetTextOverlayFontColor (m_VideoGrabber); };
   int CVideoGrabber::GetTextOverlayFontSize () {  return _GetTextOverlayFontSize (m_VideoGrabber); };
   int CVideoGrabber::GetTextOverlayGradientColor () {  return _GetTextOverlayGradientColor (m_VideoGrabber); };
   TTextOverlayGradientMode CVideoGrabber::GetTextOverlayGradientMode () {  return _GetTextOverlayGradientMode (m_VideoGrabber); };
   BOOL CVideoGrabber::GetTextOverlayHighResFont () {  return _GetTextOverlayHighResFont (m_VideoGrabber); };
   int CVideoGrabber::GetTextOverlayLeft () {  return _GetTextOverlayLeft (m_VideoGrabber); };
   TTextOrientation CVideoGrabber::GetTextOverlayOrientation () {  return _GetTextOverlayOrientation (m_VideoGrabber); };
   int CVideoGrabber::GetTextOverlayRight () {  return _GetTextOverlayRight (m_VideoGrabber); };
   BOOL CVideoGrabber::GetTextOverlayScrolling () {  return _GetTextOverlayScrolling (m_VideoGrabber); };
   int CVideoGrabber::GetTextOverlayScrollingSpeed () {  return _GetTextOverlayScrollingSpeed (m_VideoGrabber); };
   BOOL CVideoGrabber::GetTextOverlayShadow () {  return _GetTextOverlayShadow (m_VideoGrabber); };
   int CVideoGrabber::GetTextOverlayShadowColor () {  return _GetTextOverlayShadowColor (m_VideoGrabber); };
   TCardinalDirection CVideoGrabber::GetTextOverlayShadowDirection () {  return _GetTextOverlayShadowDirection (m_VideoGrabber); };
   const wchar_t * CVideoGrabber::GetTextOverlayString () {  return _GetTextOverlayString (m_VideoGrabber); };
   int CVideoGrabber::GetTextOverlayTargetDisplay () {  return _GetTextOverlayTargetDisplay (m_VideoGrabber); };
   int CVideoGrabber::GetTextOverlayTop () {  return _GetTextOverlayTop (m_VideoGrabber); };
   BOOL CVideoGrabber::GetTextOverlayTransparent () {  return _GetTextOverlayTransparent (m_VideoGrabber); };
   TVideoAlignment CVideoGrabber::GetTextOverlayVideoAlignment () {  return _GetTextOverlayVideoAlignment (m_VideoGrabber); };
   BOOL CVideoGrabber::GetTranslatedCoordinates (int DisplayIndex, int NativeX, int NativeY, int*TranslatedX, int*TranslatedY) {  return _GetTranslatedCoordinates (m_VideoGrabber, DisplayIndex, NativeX, NativeY, TranslatedX, TranslatedY); };
   int CVideoGrabber::GetTVChannelInfo (TTVChannelInfo Value) {  return _GetTVChannelInfo (m_VideoGrabber, Value); };
   BOOL CVideoGrabber::GetVideoCompressionSettings (int*DataRate, int*KeyFrameRate, int*PFramesPerKeyFrame, int*WindowSize, double*Quality, BOOL*CanQuality, BOOL*CanCrunch, BOOL*CanKeyFrame, BOOL*CanBFrame, BOOL*CanWindow) {  return _GetVideoCompressionSettings (m_VideoGrabber, DataRate, KeyFrameRate, PFramesPerKeyFrame, WindowSize, Quality, CanQuality, CanCrunch, CanKeyFrame, CanBFrame, CanWindow); };
   BOOL CVideoGrabber::GetVideoControlMode (TVideoControl Mode) {  return _GetVideoControlMode (m_VideoGrabber, Mode); };
   int CVideoGrabber::GetVideoHeightFromIndex (int SizeIndex) {  return _GetVideoHeightFromIndex (m_VideoGrabber, SizeIndex); };
   BOOL CVideoGrabber::GetVideoSizeFromIndex (int SizeIndex, int*_VideoWidth, int*_VideoHeight) {  return _GetVideoSizeFromIndex (m_VideoGrabber, SizeIndex, _VideoWidth, _VideoHeight); };
   int CVideoGrabber::GetVideoWidthFromIndex (int SizeIndex) {  return _GetVideoWidthFromIndex (m_VideoGrabber, SizeIndex); };
   BOOL CVideoGrabber::GetVMR9ImageAdjustmentBounds (BOOL MainDisplay, TVMR9ImageAdjustment VMR9ControlSetting, int*MinValue, int*MaxValue, int*StepSize, int*DefaultValue, int*CurrentValue) {  return _GetVMR9ImageAdjustmentBounds (m_VideoGrabber, MainDisplay, VMR9ControlSetting, MinValue, MaxValue, StepSize, DefaultValue, CurrentValue); };
   TVuMeter CVideoGrabber::GetVuMeter_Enabled (int Index) {  return _GetVuMeter_Enabled (m_VideoGrabber, Index); };
   unsigned int CVideoGrabber::GetVUMeterSetting (unsigned int ChannelIndex, TVUMeterSetting VUMeterSetting) {  return _GetVUMeterSetting (m_VideoGrabber, ChannelIndex, VUMeterSetting); };
   TGraphState CVideoGrabber::GraphState () {  return _GraphState (m_VideoGrabber); };
   void CVideoGrabber::InitSyncMgr (BOOL FromDeb, BOOL Is_DM) {  _InitSyncMgr (m_VideoGrabber, FromDeb, Is_DM); };
   BOOL CVideoGrabber::IsAudioDeviceASoundCard (int DeviceIndex) {  return _IsAudioDeviceASoundCard (m_VideoGrabber, DeviceIndex); };
   BOOL CVideoGrabber::IsAudioDeviceConnected (int DeviceIndex) {  return _IsAudioDeviceConnected (m_VideoGrabber, DeviceIndex); };
   BOOL CVideoGrabber::IsAudioRendererConnected (int RendererIndex) {  return _IsAudioRendererConnected (m_VideoGrabber, RendererIndex); };
   BOOL CVideoGrabber::IsCameraControlSettingAvailable (TCameraControl Setting) {  return _IsCameraControlSettingAvailable (m_VideoGrabber, Setting); };
   BOOL CVideoGrabber::IsDialogAvailable (TDialog Dialog) {  return _IsDialogAvailable (m_VideoGrabber, Dialog); };
   BOOL CVideoGrabber::IsDirectX8OrHigherInstalled () {  return _IsDirectX8OrHigherInstalled (m_VideoGrabber); };
   BOOL CVideoGrabber::IsDVDevice (int Index) {  return _IsDVDevice (m_VideoGrabber, Index); };
   BOOL CVideoGrabber::IsPlaylistActive () {  return _IsPlaylistActive (m_VideoGrabber); };
   BOOL CVideoGrabber::IsPreviewStarted () {  return _IsPreviewStarted (m_VideoGrabber); };
   BOOL CVideoGrabber::IsServerResponding (const wchar_t *URL, int Timeout_Seconds) {  return _IsServerResponding (m_VideoGrabber, URL, Timeout_Seconds); };
   BOOL CVideoGrabber::IsURLResponding () {  return _IsURLResponding (m_VideoGrabber); };
   TTriState CVideoGrabber::IsURLVideoStreamAvailable (int TimeOut_Ms) {  return _IsURLVideoStreamAvailable (m_VideoGrabber, TimeOut_Ms); };
   BOOL CVideoGrabber::IsVideoControlModeAvailable (TVideoControl Mode) {  return _IsVideoControlModeAvailable (m_VideoGrabber, Mode); };
   BOOL CVideoGrabber::IsVideoDeviceConnected (int DeviceIndex) {  return _IsVideoDeviceConnected (m_VideoGrabber, DeviceIndex); };
   BOOL CVideoGrabber::IsVideoQualitySettingAvailable (TVideoQuality Setting) {  return _IsVideoQualitySettingAvailable (m_VideoGrabber, Setting); };
   BOOL CVideoGrabber::IsVideoSignalDetected (BOOL DetectConnexantBlueScreen, BOOL DetectCustomRGB, int CustomR, int CustomG, int CustomB, BOOL UseAsMaxValues) {  return _IsVideoSignalDetected (m_VideoGrabber, DetectConnexantBlueScreen, DetectCustomRGB, CustomR, CustomG, CustomB, UseAsMaxValues); };
   BOOL CVideoGrabber::IsVMR9ImageAdjustmentAvailable (BOOL MainDisplay) {  return _IsVMR9ImageAdjustmentAvailable (m_VideoGrabber, MainDisplay); };
   BOOL CVideoGrabber::LoadCompressorSettingsFromDataString (BOOL IsVideoCompressor, int CompressorIndex, const wchar_t *DataString) {  return _LoadCompressorSettingsFromDataString (m_VideoGrabber, IsVideoCompressor, CompressorIndex, DataString); };
   BOOL CVideoGrabber::LoadCompressorSettingsFromTextFile (BOOL IsVideoCompressor, int CompressorIndex, const wchar_t *FileName) {  return _LoadCompressorSettingsFromTextFile (m_VideoGrabber, IsVideoCompressor, CompressorIndex, FileName); };
   BOOL CVideoGrabber::MixAudioSamples (void *pSampleBuffer, int SampleBufferSize, int SampleDataLength, TFormatType SampleFormatType, void *pFormat, __int64 SampleStartTime, __int64 SampleStopTime) {  return _MixAudioSamples (m_VideoGrabber, pSampleBuffer, SampleBufferSize, SampleDataLength, SampleFormatType, pFormat, SampleStartTime, SampleStopTime); };
   BOOL CVideoGrabber::Mixer_Activation (int Id, BOOL Activate) {  return _Mixer_Activation (m_VideoGrabber, Id, Activate); };
   int CVideoGrabber::Mixer_AddAudioToMixer (int SourceUniqueID) {  return _Mixer_AddAudioToMixer (m_VideoGrabber, SourceUniqueID); };
   int CVideoGrabber::Mixer_AddToMixer (int SourceUniqueID, int SourceVideoInput, int MosaicLine, int MosaicColumn, int AlternatedGroup, int AlternatedTimeIntervalInMs, BOOL ReplacePreviouslyAdded, BOOL CanEraseBackground) {  return _Mixer_AddToMixer (m_VideoGrabber, SourceUniqueID, SourceVideoInput, MosaicLine, MosaicColumn, AlternatedGroup, AlternatedTimeIntervalInMs, ReplacePreviouslyAdded, CanEraseBackground); };
   BOOL CVideoGrabber::Mixer_AudioActivation (int Id, BOOL Activate) {  return _Mixer_AudioActivation (m_VideoGrabber, Id, Activate); };
   BOOL CVideoGrabber::Mixer_RemoveAudioFromMixer (int Id) {  return _Mixer_RemoveAudioFromMixer (m_VideoGrabber, Id); };
   BOOL CVideoGrabber::Mixer_RemoveFromMixer (int Id) {  return _Mixer_RemoveFromMixer (m_VideoGrabber, Id); };
   BOOL CVideoGrabber::Mixer_SetOverlayAttributes (int Id, BOOL Transparent_Enabled, BOOL UseTransparentColor, int Transparent_ColorValue, BOOL AlphaBlend_Enabled, int AlphaBlend_Value, BOOL ChromaKey_Enabled, int ChromaKeyRGBColor, int ChromaKeyLeewayPercent, double RotationAngle) {  return _Mixer_SetOverlayAttributes (m_VideoGrabber, Id, Transparent_Enabled, UseTransparentColor, Transparent_ColorValue, AlphaBlend_Enabled, AlphaBlend_Value, ChromaKey_Enabled, ChromaKeyRGBColor, ChromaKeyLeewayPercent, RotationAngle); };
   int CVideoGrabber::Mixer_SetupPIPFromSource (int SourceUniqueID, int Source_Left, int Source_Top, int Source_Width, int Source_Height, BOOL ActivatePIP, int PIP_Left, int PIP_Top, int PIP_Width, int PIP_Height, BOOL MoveToTop) {  return _Mixer_SetupPIPFromSource (m_VideoGrabber, SourceUniqueID, Source_Left, Source_Top, Source_Width, Source_Height, ActivatePIP, PIP_Left, PIP_Top, PIP_Width, PIP_Height, MoveToTop); };
   int CVideoGrabber::Monitor_Primary_Index () {  return _Monitor_Primary_Index (m_VideoGrabber); };
   BOOL CVideoGrabber::MonitorBounds (int MonitorNumber, int*LeftBound, int*TopBound, int*RightBound, int*BottomBound) {  return _MonitorBounds (m_VideoGrabber, MonitorNumber, LeftBound, TopBound, RightBound, BottomBound); };
   int CVideoGrabber::MonitorsCount () {  return _MonitorsCount (m_VideoGrabber); };
   int CVideoGrabber::MotionDetector_CellColorIntensity (TRGBSelector RGBSelector, int x, int y) {  return _MotionDetector_CellColorIntensity (m_VideoGrabber, RGBSelector, x, y); };
   double CVideoGrabber::MotionDetector_CellMotionRatio (int x, int y) {  return _MotionDetector_CellMotionRatio (m_VideoGrabber, x, y); };
   const wchar_t * CVideoGrabber::MotionDetector_Get2DTextGrid () {  return _MotionDetector_Get2DTextGrid (m_VideoGrabber); };
   const wchar_t * CVideoGrabber::MotionDetector_Get2DTextMotion () {  return _MotionDetector_Get2DTextMotion (m_VideoGrabber); };
   BOOL CVideoGrabber::MotionDetector_GetCellLocation (int x, int y, int*XLocation, int*YLocation) {  return _MotionDetector_GetCellLocation (m_VideoGrabber, x, y, XLocation, YLocation); };
   BOOL CVideoGrabber::MotionDetector_GetCellSensitivity (int x, int y, int*Value) {  return _MotionDetector_GetCellSensitivity (m_VideoGrabber, x, y, Value); };
   BOOL CVideoGrabber::MotionDetector_GetCellSize (int*XSize, int*YSize) {  return _MotionDetector_GetCellSize (m_VideoGrabber, XSize, YSize); };
   int CVideoGrabber::MotionDetector_GlobalColorIntensity (TRGBSelector RGBSelector) {  return _MotionDetector_GlobalColorIntensity (m_VideoGrabber, RGBSelector); };
   void CVideoGrabber::MotionDetector_GloballyIncOrDecSensitivity (int Value) {  _MotionDetector_GloballyIncOrDecSensitivity (m_VideoGrabber, Value); };
   void CVideoGrabber::MotionDetector_Reset () {  _MotionDetector_Reset (m_VideoGrabber); };
   void CVideoGrabber::MotionDetector_ResetGlobalSensitivity (int Value) {  _MotionDetector_ResetGlobalSensitivity (m_VideoGrabber, Value); };
   BOOL CVideoGrabber::MotionDetector_SetCellSensitivity (int x, int y, int Value) {  return _MotionDetector_SetCellSensitivity (m_VideoGrabber, x, y, Value); };
   void CVideoGrabber::MotionDetector_SetGridSize (int x, int y) {  _MotionDetector_SetGridSize (m_VideoGrabber, x, y); };
   void CVideoGrabber::MotionDetector_ShowGridDialog () {  _MotionDetector_ShowGridDialog (m_VideoGrabber); };
   void CVideoGrabber::MotionDetector_TriggerNow () {  _MotionDetector_TriggerNow (m_VideoGrabber); };
   BOOL CVideoGrabber::MotionDetector_UseThisReferenceSample (HBITMAP Bitmap_, const wchar_t *BMPFile, const wchar_t *JPEGFile) {  return _MotionDetector_UseThisReferenceSample (m_VideoGrabber, Bitmap_, BMPFile, JPEGFile); };
   int CVideoGrabber::MPEGProgramSetting (TMPEGProgramSetting MPEGProgramSettingValue, int Value) {  return _MPEGProgramSetting (m_VideoGrabber, MPEGProgramSettingValue, Value); };
   int CVideoGrabber::MultiplexerIndex (const wchar_t *Value) {  return _MultiplexerIndex (m_VideoGrabber, Value); };
   const wchar_t * CVideoGrabber::MultipurposeEncoder_Convert100nsToHhMmSsZzz (__int64 Time100ns) {  return _MultipurposeEncoder_Convert100nsToHhMmSsZzz (m_VideoGrabber, Time100ns); };
   BOOL CVideoGrabber::MultipurposeEncoder_GetCurrentInfo (TMultipurposeEncoderInstance MultipurposeEncoderType, unsigned int*InputsTotalDurationMs, unsigned int*FrameCount, double*fps, double*quality, double*SizeWrittenKb, unsigned int*TimeMs, double*BitRateKbps, unsigned int*DuplicatedCount, unsigned int*DroppedCount, int*ExitCode) {  return _MultipurposeEncoder_GetCurrentInfo (m_VideoGrabber, MultipurposeEncoderType, InputsTotalDurationMs, FrameCount, fps, quality, SizeWrittenKb, TimeMs, BitRateKbps, DuplicatedCount, DroppedCount, ExitCode); };
   const wchar_t * CVideoGrabber::MultipurposeEncoder_GetLastLog (TMultipurposeEncoderInstance MultipurposeEncoderType) {  return _MultipurposeEncoder_GetLastLog (m_VideoGrabber, MultipurposeEncoderType); };
   BOOL CVideoGrabber::MultipurposeEncoder_QuickConfigure_UDPStreaming_H264 (BOOL LogTofile, BOOL VideoEnabled, BOOL AudioEnabled, const wchar_t *DestinationIP, int DestinationPort, int VideoBitRateKb, int AudioBitRateKb) {  return _MultipurposeEncoder_QuickConfigure_UDPStreaming_H264 (m_VideoGrabber, LogTofile, VideoEnabled, AudioEnabled, DestinationIP, DestinationPort, VideoBitRateKb, AudioBitRateKb); };
   BOOL CVideoGrabber::MultipurposeEncoder_ReindexClip (const wchar_t *CurrentFileName, const wchar_t *NewFileName) {  return _MultipurposeEncoder_ReindexClip (m_VideoGrabber, CurrentFileName, NewFileName); };
   void CVideoGrabber::NotifyPlayerTrackbarAction (TTrackbarAction TrackbarAction) {  _NotifyPlayerTrackbarAction (m_VideoGrabber, TrackbarAction); };
   BOOL CVideoGrabber::ONVIF_GetBool (const wchar_t *ParamIdentifier, BOOL*Value) {  return _ONVIF_GetBool (m_VideoGrabber, ParamIdentifier, Value); };
   BOOL CVideoGrabber::ONVIF_GetDouble (const wchar_t *ParamIdentifier, double*Value) {  return _ONVIF_GetDouble (m_VideoGrabber, ParamIdentifier, Value); };
   BOOL CVideoGrabber::ONVIF_GetInt (const wchar_t *ParamIdentifier, int*Value) {  return _ONVIF_GetInt (m_VideoGrabber, ParamIdentifier, Value); };
   BOOL CVideoGrabber::ONVIF_GetStr (const wchar_t *ParamIdentifier, const wchar_t **Value) {  return _ONVIF_GetStr (m_VideoGrabber, ParamIdentifier, Value); };
   BOOL CVideoGrabber::ONVIF_SetBool (const wchar_t *ParamIdentifier, BOOL Value) {  return _ONVIF_SetBool (m_VideoGrabber, ParamIdentifier, Value); };
   BOOL CVideoGrabber::ONVIF_SetDouble (const wchar_t *ParamIdentifier, double Value) {  return _ONVIF_SetDouble (m_VideoGrabber, ParamIdentifier, Value); };
   BOOL CVideoGrabber::ONVIF_SetInt (const wchar_t *ParamIdentifier, const wchar_t *Value) {  return _ONVIF_SetInt (m_VideoGrabber, ParamIdentifier, Value); };
   BOOL CVideoGrabber::ONVIF_SetStr (const wchar_t *ParamIdentifier, const wchar_t *Value) {  return _ONVIF_SetStr (m_VideoGrabber, ParamIdentifier, Value); };
   const wchar_t * CVideoGrabber::ONVIFDeviceInfo (TONVIFDeviceInfo ONVIFDeviceInfoType) {  return _ONVIFDeviceInfo (m_VideoGrabber, ONVIFDeviceInfoType); };
   BOOL CVideoGrabber::ONVIFPTZGetLimits (double*Pan_Min, double*Pan_Max, double*Tilt_Min, double*Tilt_Max, double*Zoom_Min, double*Zoom_Max) {  return _ONVIFPTZGetLimits (m_VideoGrabber, Pan_Min, Pan_Max, Tilt_Min, Tilt_Max, Zoom_Min, Zoom_Max); };
   BOOL CVideoGrabber::ONVIFPTZGetPosition (double*Pan, double*Tilt, double*Zoom, __int64*UTCTime, int*IsMoving) {  return _ONVIFPTZGetPosition (m_VideoGrabber, Pan, Tilt, Zoom, UTCTime, IsMoving); };
   BOOL CVideoGrabber::ONVIFPTZPreset (const wchar_t *PresetAction, const wchar_t *PresetName) {  return _ONVIFPTZPreset (m_VideoGrabber, PresetAction, PresetName); };
   BOOL CVideoGrabber::ONVIFPTZSendAuxiliaryCommand (const wchar_t *AuxiliaryCommand) {  return _ONVIFPTZSendAuxiliaryCommand (m_VideoGrabber, AuxiliaryCommand); };
   BOOL CVideoGrabber::ONVIFPTZSetPosition (double Pan, double Tilt, double Zoom, double SpeedRatio, BOOL IsRelative) {  return _ONVIFPTZSetPosition (m_VideoGrabber, Pan, Tilt, Zoom, SpeedRatio, IsRelative); };
   BOOL CVideoGrabber::ONVIFPTZStartMove (const wchar_t *PTZType, BOOL OppositeDirection, double SpeedRatio, int DurationMs) {  return _ONVIFPTZStartMove (m_VideoGrabber, PTZType, OppositeDirection, SpeedRatio, DurationMs); };
   BOOL CVideoGrabber::ONVIFPTZStopMove (const wchar_t *PTZType) {  return _ONVIFPTZStopMove (m_VideoGrabber, PTZType); };
   BOOL CVideoGrabber::ONVIFSnapShot (BOOL OnRawVideoSampleCallbackEnabled, BOOL SaveToFile, const wchar_t *FileName) {  return _ONVIFSnapShot (m_VideoGrabber, OnRawVideoSampleCallbackEnabled, SaveToFile, FileName); };
   BOOL CVideoGrabber::OpenDVD () {  return _OpenDVD (m_VideoGrabber); };
   BOOL CVideoGrabber::OpenPlayer () {  return _OpenPlayer (m_VideoGrabber); };
   BOOL CVideoGrabber::OpenPlayerAtFramePositions (__int64 StartFrame, __int64 StopFrame, BOOL KeepBounds, BOOL CloseAndReopenIfAlreadyOpened) {  return _OpenPlayerAtFramePositions (m_VideoGrabber, StartFrame, StopFrame, KeepBounds, CloseAndReopenIfAlreadyOpened); };
   BOOL CVideoGrabber::OpenPlayerAtTimePositions (__int64 StartTime, __int64 StopTime, BOOL KeepBounds, BOOL CloseAndReopenIfAlreadyOpened) {  return _OpenPlayerAtTimePositions (m_VideoGrabber, StartTime, StopTime, KeepBounds, CloseAndReopenIfAlreadyOpened); };
   void CVideoGrabber::PausePlayer () {  _PausePlayer (m_VideoGrabber); };
   BOOL CVideoGrabber::PausePreview () {  return _PausePreview (m_VideoGrabber); };
   BOOL CVideoGrabber::PauseRecording () {  return _PauseRecording (m_VideoGrabber); };
   BOOL CVideoGrabber::PlayerFrameStep (int FrameCount) {  return _PlayerFrameStep (m_VideoGrabber, FrameCount); };
   BOOL CVideoGrabber::Playlist (TPlaylist PlaylistAction, const wchar_t *VideoClip) {  return _Playlist (m_VideoGrabber, PlaylistAction, VideoClip); };
   int CVideoGrabber::PointGreyConfig (TPointGreyConfig ConfigType, unsigned int*PGRActionValue, unsigned int ulRegister, unsigned int ulMode, unsigned int ulLeft, unsigned int ulTop, unsigned int ulWidth, unsigned int ulHeight, unsigned int ulPercentage, unsigned int ulFormat) {  return _PointGreyConfig (m_VideoGrabber, ConfigType, PGRActionValue, ulRegister, ulMode, ulLeft, ulTop, ulWidth, ulHeight, ulPercentage, ulFormat); };
   BOOL CVideoGrabber::PutMiscDeviceControl (TMiscDeviceControl MiscDeviceControl, int Index, int Value) {  return _PutMiscDeviceControl (m_VideoGrabber, MiscDeviceControl, Index, Value); };
   unsigned int CVideoGrabber::RecordingKBytesWrittenToDisk () {  return _RecordingKBytesWrittenToDisk (m_VideoGrabber); };
   BOOL CVideoGrabber::RecordToNewFileNow (const wchar_t *NewRecordingFileName, BOOL ResetStreamTime) {  return _RecordToNewFileNow (m_VideoGrabber, NewRecordingFileName, ResetStreamTime); };
   BOOL CVideoGrabber::ReencodeVideoClip (const wchar_t *SourceVideoClip, const wchar_t *NewVideoClip, BOOL IncludeVideoStream, BOOL IncludeAudioStream, BOOL UseFrameGrabber, BOOL UseCurrentVideoCompressor, BOOL UseCurrentAudioCompressor) {  return _ReencodeVideoClip (m_VideoGrabber, SourceVideoClip, NewVideoClip, IncludeVideoStream, IncludeAudioStream, UseFrameGrabber, UseCurrentVideoCompressor, UseCurrentAudioCompressor); };
   void CVideoGrabber::RefreshDevicesAndCompressorsLists () {  _RefreshDevicesAndCompressorsLists (m_VideoGrabber); };
   void CVideoGrabber::RefreshPlayerOverlays () {  _RefreshPlayerOverlays (m_VideoGrabber); };
   BOOL CVideoGrabber::ResetPreview () {  return _ResetPreview (m_VideoGrabber); };
   BOOL CVideoGrabber::ResetVideoDeviceSettings () {  return _ResetVideoDeviceSettings (m_VideoGrabber); };
   BOOL CVideoGrabber::ResumePreview () {  return _ResumePreview (m_VideoGrabber); };
   BOOL CVideoGrabber::ResumeRecording () {  return _ResumeRecording (m_VideoGrabber); };
   void CVideoGrabber::RetrieveInitialXYAfterRotation (int X, int Y, int*OriginalX, int*OriginalY) {  _RetrieveInitialXYAfterRotation (m_VideoGrabber, X, Y, OriginalX, OriginalY); };
   void CVideoGrabber::RewindPlayer () {  _RewindPlayer (m_VideoGrabber); };
   void CVideoGrabber::RunPlayer () {  _RunPlayer (m_VideoGrabber); };
   void CVideoGrabber::RunPlayerBackwards () {  _RunPlayerBackwards (m_VideoGrabber); };
   const wchar_t * CVideoGrabber::SaveCompressorSettingsToDataString (BOOL IsVideoCompressor, int CompressorIndex) {  return _SaveCompressorSettingsToDataString (m_VideoGrabber, IsVideoCompressor, CompressorIndex); };
   BOOL CVideoGrabber::SaveCompressorSettingsToTextFile (BOOL IsVideoCompressor, int CompressorIndex, const wchar_t *FileName) {  return _SaveCompressorSettingsToTextFile (m_VideoGrabber, IsVideoCompressor, CompressorIndex, FileName); };
   BOOL CVideoGrabber::ScheduleNextActionAtAbsoluteDateTime (int Year, int Month, int Day, int Hour, int Min, int Sec, int MSec) {  return _ScheduleNextActionAtAbsoluteDateTime (m_VideoGrabber, Year, Month, Day, Hour, Min, Sec, MSec); };
   BOOL CVideoGrabber::ScheduleNextActionAtAbsoluteTime (int Hour, int Min, int Sec, int MSec) {  return _ScheduleNextActionAtAbsoluteTime (m_VideoGrabber, Hour, Min, Sec, MSec); };
   BOOL CVideoGrabber::ScheduleNextActionFromNow (int Day, int Hour, int Min, int Sec, int MSec) {  return _ScheduleNextActionFromNow (m_VideoGrabber, Day, Hour, Min, Sec, MSec); };
   BOOL CVideoGrabber::ScreenRecordingUsingCoordinates (BOOL FunctionEnabled, int scLeft, int scTop, int scWidth, int scHeight) {  return _ScreenRecordingUsingCoordinates (m_VideoGrabber, FunctionEnabled, scLeft, scTop, scWidth, scHeight); };
   BOOL CVideoGrabber::SendCameraCommand (int Pan, int Tilt, BOOL Relative) {  return _SendCameraCommand (m_VideoGrabber, Pan, Tilt, Relative); };
   BOOL CVideoGrabber::SendDVCommand (TDVCommand DVCommand) {  return _SendDVCommand (m_VideoGrabber, DVCommand); };
   BOOL CVideoGrabber::SendImageToVideoFromBitmaps (const wchar_t *ImageFilePath, HBITMAP BitmapHandle, BOOL CanFreeBitmapHandle, BOOL EndOfData) {  return _SendImageToVideoFromBitmaps (m_VideoGrabber, ImageFilePath, BitmapHandle, CanFreeBitmapHandle, EndOfData); };
   BOOL CVideoGrabber::SendImageToVideoFromBitmaps2 (void *pBtmapInfo, byte *pBitmapBits, BOOL EndOfData) {  return _SendImageToVideoFromBitmaps2 (m_VideoGrabber, pBtmapInfo, pBitmapBits, EndOfData); };
   BOOL CVideoGrabber::SendIPCameraCommand (const wchar_t *IPCameraCommand) {  return _SendIPCameraCommand (m_VideoGrabber, IPCameraCommand); };
   void CVideoGrabber::Set_OnDeviceArrivalOrRemoval (void*Value) {  _Set_OnDeviceArrivalOrRemoval (m_VideoGrabber, Value); };
   void CVideoGrabber::SetAudioRendererAdditional (int Value) {  _SetAudioRendererAdditional (m_VideoGrabber, Value); };
   void CVideoGrabber::SetAuthentication (TAuthenticationType AuthenticationType, const wchar_t *UserName, const wchar_t *Password) {  _SetAuthentication (m_VideoGrabber, AuthenticationType, UserName, Password); };
   void CVideoGrabber::SetAVIMuxConfig (TAVIMuxConfig AVIMuxSetting, int Value) {  _SetAVIMuxConfig (m_VideoGrabber, AVIMuxSetting, Value); };
   void CVideoGrabber::SetCallbackSender (void *Sender) {  _SetCallbackSender (m_VideoGrabber, Sender); };
   BOOL CVideoGrabber::SetCameraControl (TCameraControl Setting, BOOL SetAuto, BOOL SetDefault, int SetValue) {  return _SetCameraControl (m_VideoGrabber, Setting, SetAuto, SetDefault, SetValue); };
   void CVideoGrabber::SetCameraExposure (double Value) {  _SetCameraExposure (m_VideoGrabber, Value); };
   BOOL CVideoGrabber::SetDisplayAssociatedRenderer (int DisplayIndex, const wchar_t *Value) {  return _SetDisplayAssociatedRenderer (m_VideoGrabber, DisplayIndex, Value); };
   BOOL CVideoGrabber::SetDisplayLocation (int DisplayIndex, int WindowLeft, int WindowTop, int WindowWidth, int WindowHeight) {  return _SetDisplayLocation (m_VideoGrabber, DisplayIndex, WindowLeft, WindowTop, WindowWidth, WindowHeight); };
   BOOL CVideoGrabber::SetDisplayParent (int DisplayIndex, int DisplayParent) {  return _SetDisplayParent (m_VideoGrabber, DisplayIndex, DisplayParent); };
   void CVideoGrabber::SetFrameCaptureBounds (int LeftPosition, int TopPosition, int RightPosition, int BottomPosition) {  _SetFrameCaptureBounds (m_VideoGrabber, LeftPosition, TopPosition, RightPosition, BottomPosition); };
   BOOL CVideoGrabber::SetFWCam1394 (const wchar_t *FWCam1394ID, int Value) {  return _SetFWCam1394 (m_VideoGrabber, FWCam1394ID, Value); };
   void CVideoGrabber::SetHeaderAttribute (THeaderAttribute HeaderAttribute, const wchar_t *Value) {  _SetHeaderAttribute (m_VideoGrabber, HeaderAttribute, Value); };
   void CVideoGrabber::SetImageOverlay_AlphaBlend (int Index, BOOL Value) {  _SetImageOverlay_AlphaBlend (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetImageOverlay_AlphaBlendValue (int Index, int Value) {  _SetImageOverlay_AlphaBlendValue (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetImageOverlay_Attributes (int LeftLocation, int TopLocation, int StretchedWidth, int StretchedHeight, BOOL Transparent_Enabled, BOOL UseTransparentColor, int Transparent_ColorValue, BOOL AlphaBlend_Enabled, int AlphaBlend_Value) {  _SetImageOverlay_Attributes (m_VideoGrabber, LeftLocation, TopLocation, StretchedWidth, StretchedHeight, Transparent_Enabled, UseTransparentColor, Transparent_ColorValue, AlphaBlend_Enabled, AlphaBlend_Value); };
   void CVideoGrabber::SetImageOverlay_Attributes2 (int Index, int LeftLocation, int TopLocation, int StretchedWidth, int StretchedHeight, BOOL Transparent_Enabled, BOOL UseTransparentColor, int Transparent_ColorValue, BOOL AlphaBlend_Enabled, int AlphaBlend_Value) {  _SetImageOverlay_Attributes2 (m_VideoGrabber, Index, LeftLocation, TopLocation, StretchedWidth, StretchedHeight, Transparent_Enabled, UseTransparentColor, Transparent_ColorValue, AlphaBlend_Enabled, AlphaBlend_Value); };
   void CVideoGrabber::SetImageOverlay_ChromaKey (int Index, BOOL Value) {  _SetImageOverlay_ChromaKey (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetImageOverlay_ChromaKeyLeewayPercent (int Index, int Value) {  _SetImageOverlay_ChromaKeyLeewayPercent (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetImageOverlay_ChromaKeyRGBColor (int Index, int Value) {  _SetImageOverlay_ChromaKeyRGBColor (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetImageOverlay_Enabled (int Index, BOOL Value) {  _SetImageOverlay_Enabled (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetImageOverlay_Height (int Index, int Value) {  _SetImageOverlay_Height (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetImageOverlay_LeftLocation (int Index, int Value) {  _SetImageOverlay_LeftLocation (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetImageOverlay_RotationAngle (int Index, double Value) {  _SetImageOverlay_RotationAngle (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetImageOverlay_StretchToVideoSize (int Index, BOOL Value) {  _SetImageOverlay_StretchToVideoSize (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetImageOverlay_TargetDisplay (int Index, int Value) {  _SetImageOverlay_TargetDisplay (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetImageOverlay_TopLocation (int Index, int Value) {  _SetImageOverlay_TopLocation (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetImageOverlay_Transparent (int Index, BOOL Value) {  _SetImageOverlay_Transparent (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetImageOverlay_TransparentColorValue (int Index, int Value) {  _SetImageOverlay_TransparentColorValue (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetImageOverlay_UseTransparentColor (int Index, BOOL Value) {  _SetImageOverlay_UseTransparentColor (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetImageOverlay_VideoAlignment (int Index, TVideoAlignment Value) {  _SetImageOverlay_VideoAlignment (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetImageOverlay_Width (int Index, int Value) {  _SetImageOverlay_Width (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetImageOverlayAlphaBlend (BOOL Value) {  _SetImageOverlayAlphaBlend (m_VideoGrabber, Value); };
   void CVideoGrabber::SetImageOverlayAlphaBlendValue (int Value) {  _SetImageOverlayAlphaBlendValue (m_VideoGrabber, Value); };
   void CVideoGrabber::SetImageOverlayChromaKey (BOOL Value) {  _SetImageOverlayChromaKey (m_VideoGrabber, Value); };
   void CVideoGrabber::SetImageOverlayChromaKeyLeewayPercent (int Value) {  _SetImageOverlayChromaKeyLeewayPercent (m_VideoGrabber, Value); };
   void CVideoGrabber::SetImageOverlayChromaKeyRGBColor (int Value) {  _SetImageOverlayChromaKeyRGBColor (m_VideoGrabber, Value); };
   BOOL CVideoGrabber::SetImageOverlayFromBMPFile (const wchar_t *FileName) {  return _SetImageOverlayFromBMPFile (m_VideoGrabber, FileName); };
   BOOL CVideoGrabber::SetImageOverlayFromBMPFile2 (int Index, const wchar_t *FileName) {  return _SetImageOverlayFromBMPFile2 (m_VideoGrabber, Index, FileName); };
   BOOL CVideoGrabber::SetImageOverlayFromHBitmap (HBITMAP Bitmap) {  return _SetImageOverlayFromHBitmap (m_VideoGrabber, Bitmap); };
   BOOL CVideoGrabber::SetImageOverlayFromHBitmap2 (int Index, HBITMAP Bitmap) {  return _SetImageOverlayFromHBitmap2 (m_VideoGrabber, Index, Bitmap); };
   BOOL CVideoGrabber::SetImageOverlayFromHBitmap3 (int Index, HBITMAP Bitmap, BOOL ReleaseBitmap) {  return _SetImageOverlayFromHBitmap3 (m_VideoGrabber, Index, Bitmap, ReleaseBitmap); };
   BOOL CVideoGrabber::SetImageOverlayFromImageFile (const wchar_t *FileName) {  return _SetImageOverlayFromImageFile (m_VideoGrabber, FileName); };
   BOOL CVideoGrabber::SetImageOverlayFromImageFile2 (int Index, const wchar_t *FileName) {  return _SetImageOverlayFromImageFile2 (m_VideoGrabber, Index, FileName); };
   BOOL CVideoGrabber::SetImageOverlayFromJPEGFile (const wchar_t *FileName) {  return _SetImageOverlayFromJPEGFile (m_VideoGrabber, FileName); };
   BOOL CVideoGrabber::SetImageOverlayFromJPEGFile2 (int Index, const wchar_t *FileName) {  return _SetImageOverlayFromJPEGFile2 (m_VideoGrabber, Index, FileName); };
   void CVideoGrabber::SetImageOverlayHeight (int Value) {  _SetImageOverlayHeight (m_VideoGrabber, Value); };
   void CVideoGrabber::SetImageOverlayLeftLocation (int Value) {  _SetImageOverlayLeftLocation (m_VideoGrabber, Value); };
   void CVideoGrabber::SetImageOverlayRotationAngle (double Value) {  _SetImageOverlayRotationAngle (m_VideoGrabber, Value); };
   void CVideoGrabber::SetImageOverlayStretchToVideoSize (BOOL Value) {  _SetImageOverlayStretchToVideoSize (m_VideoGrabber, Value); };
   void CVideoGrabber::SetImageOverlayTargetDisplay (int Value) {  _SetImageOverlayTargetDisplay (m_VideoGrabber, Value); };
   void CVideoGrabber::SetImageOverlayTopLocation (int Value) {  _SetImageOverlayTopLocation (m_VideoGrabber, Value); };
   void CVideoGrabber::SetImageOverlayTransparent (BOOL Value) {  _SetImageOverlayTransparent (m_VideoGrabber, Value); };
   void CVideoGrabber::SetImageOverlayTransparentColorValue (int Value) {  _SetImageOverlayTransparentColorValue (m_VideoGrabber, Value); };
   void CVideoGrabber::SetImageOverlayUseTransparentColor (BOOL Value) {  _SetImageOverlayUseTransparentColor (m_VideoGrabber, Value); };
   void CVideoGrabber::SetImageOverlayVideoAlignment (TVideoAlignment Value) {  _SetImageOverlayVideoAlignment (m_VideoGrabber, Value); };
   void CVideoGrabber::SetImageOverlayWidth (int Value) {  _SetImageOverlayWidth (m_VideoGrabber, Value); };
   BOOL CVideoGrabber::SetIPCameraSetting (TIPCameraSetting Setting, int Value) {  return _SetIPCameraSetting (m_VideoGrabber, Setting, Value); };
   void CVideoGrabber::SetLocation (int lLeft, int lTop, int lWidth, int lHeight) {  _SetLocation (m_VideoGrabber, lLeft, lTop, lWidth, lHeight); };
   BOOL CVideoGrabber::SetLogoFromBMPFile (const wchar_t *FileName) {  return _SetLogoFromBMPFile (m_VideoGrabber, FileName); };
   BOOL CVideoGrabber::SetLogoFromHBitmap (HBITMAP Bitmap) {  return _SetLogoFromHBitmap (m_VideoGrabber, Bitmap); };
   BOOL CVideoGrabber::SetLogoFromJPEGFile (const wchar_t *FileName) {  return _SetLogoFromJPEGFile (m_VideoGrabber, FileName); };
   void CVideoGrabber::SetMultiplexerFilterByName (const wchar_t *Value) {  _SetMultiplexerFilterByName (m_VideoGrabber, Value); };
   BOOL CVideoGrabber::SetMultipurposeEncoderSettings (TMultipurposeEncoderInstance MultipurposeEncoderType, const wchar_t *Settings) {  return _SetMultipurposeEncoderSettings (m_VideoGrabber, MultipurposeEncoderType, Settings); };
   void CVideoGrabber::SetOnDoEvents (void*Value) {  _SetOnDoEvents (m_VideoGrabber, Value); };
   void CVideoGrabber::SetParentWindow (HWND Value) {  _SetParentWindow (m_VideoGrabber, Value); };
   void CVideoGrabber::SetTextOverlay_Align (int Index, TTextOverlayAlign Value) {  _SetTextOverlay_Align (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetTextOverlay_AlphaBlend (int Index, BOOL Value) {  _SetTextOverlay_AlphaBlend (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetTextOverlay_AlphaBlendValue (int Index, int Value) {  _SetTextOverlay_AlphaBlendValue (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetTextOverlay_BkColor (int Index, int Value) {  _SetTextOverlay_BkColor (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetTextOverlay_CustomVar (int Index, int VarIndex, const wchar_t *VarText) {  _SetTextOverlay_CustomVar (m_VideoGrabber, Index, VarIndex, VarText); };
   void CVideoGrabber::SetTextOverlay_Enabled (int Index, BOOL Value) {  _SetTextOverlay_Enabled (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetTextOverlay_Font (int Index, INT_PTR Value) {  _SetTextOverlay_Font (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetTextOverlay_FontColor (int Index, int Value) {  _SetTextOverlay_FontColor (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetTextOverlay_FontSize (int Index, int Value) {  _SetTextOverlay_FontSize (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetTextOverlay_GradientColor (int Index, int Value) {  _SetTextOverlay_GradientColor (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetTextOverlay_GradientMode (int Index, TTextOverlayGradientMode Value) {  _SetTextOverlay_GradientMode (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetTextOverlay_HighResFont (int Index, BOOL Value) {  _SetTextOverlay_HighResFont (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetTextOverlay_Left (int Index, int Value) {  _SetTextOverlay_Left (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetTextOverlay_Orientation (int Index, TTextOrientation Value) {  _SetTextOverlay_Orientation (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetTextOverlay_Right (int Index, int Value) {  _SetTextOverlay_Right (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetTextOverlay_Scrolling (int Index, BOOL Value) {  _SetTextOverlay_Scrolling (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetTextOverlay_ScrollingSpeed (int Index, int Value) {  _SetTextOverlay_ScrollingSpeed (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetTextOverlay_Shadow (int Index, BOOL Value) {  _SetTextOverlay_Shadow (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetTextOverlay_ShadowColor (int Index, int Value) {  _SetTextOverlay_ShadowColor (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetTextOverlay_ShadowDirection (int Index, TCardinalDirection Value) {  _SetTextOverlay_ShadowDirection (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetTextOverlay_String (int Index, const wchar_t *Value) {  _SetTextOverlay_String (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetTextOverlay_TargetDisplay (int Index, int Value) {  _SetTextOverlay_TargetDisplay (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetTextOverlay_Top (int Index, int Value) {  _SetTextOverlay_Top (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetTextOverlay_Transparent (int Index, BOOL Value) {  _SetTextOverlay_Transparent (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetTextOverlay_VideoAlignment (int Index, TVideoAlignment Value) {  _SetTextOverlay_VideoAlignment (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetTextOverlayAlign (TTextOverlayAlign Value) {  _SetTextOverlayAlign (m_VideoGrabber, Value); };
   void CVideoGrabber::SetTextOverlayAlphaBlend (BOOL Value) {  _SetTextOverlayAlphaBlend (m_VideoGrabber, Value); };
   void CVideoGrabber::SetTextOverlayAlphaBlendValue (int Value) {  _SetTextOverlayAlphaBlendValue (m_VideoGrabber, Value); };
   void CVideoGrabber::SetTextOverlayBkColor (int Value) {  _SetTextOverlayBkColor (m_VideoGrabber, Value); };
   void CVideoGrabber::SetTextOverlayEnabled (BOOL Value) {  _SetTextOverlayEnabled (m_VideoGrabber, Value); };
   void CVideoGrabber::SetTextOverlayFont (INT_PTR Value) {  _SetTextOverlayFont (m_VideoGrabber, Value); };
   void CVideoGrabber::SetTextOverlayFontColor (int Value) {  _SetTextOverlayFontColor (m_VideoGrabber, Value); };
   void CVideoGrabber::SetTextOverlayFontSize (int Value) {  _SetTextOverlayFontSize (m_VideoGrabber, Value); };
   void CVideoGrabber::SetTextOverlayGradientColor (int Value) {  _SetTextOverlayGradientColor (m_VideoGrabber, Value); };
   void CVideoGrabber::SetTextOverlayGradientMode (TTextOverlayGradientMode Value) {  _SetTextOverlayGradientMode (m_VideoGrabber, Value); };
   void CVideoGrabber::SetTextOverlayHighResFont (BOOL Value) {  _SetTextOverlayHighResFont (m_VideoGrabber, Value); };
   void CVideoGrabber::SetTextOverlayLeft (int Value) {  _SetTextOverlayLeft (m_VideoGrabber, Value); };
   void CVideoGrabber::SetTextOverlayOrientation (TTextOrientation Value) {  _SetTextOverlayOrientation (m_VideoGrabber, Value); };
   void CVideoGrabber::SetTextOverlayRight (int Value) {  _SetTextOverlayRight (m_VideoGrabber, Value); };
   void CVideoGrabber::SetTextOverlayScrolling (BOOL Value) {  _SetTextOverlayScrolling (m_VideoGrabber, Value); };
   void CVideoGrabber::SetTextOverlayScrollingSpeed (int Value) {  _SetTextOverlayScrollingSpeed (m_VideoGrabber, Value); };
   void CVideoGrabber::SetTextOverlayShadow (BOOL Value) {  _SetTextOverlayShadow (m_VideoGrabber, Value); };
   void CVideoGrabber::SetTextOverlayShadowColor (int Value) {  _SetTextOverlayShadowColor (m_VideoGrabber, Value); };
   void CVideoGrabber::SetTextOverlayShadowDirection (TCardinalDirection Value) {  _SetTextOverlayShadowDirection (m_VideoGrabber, Value); };
   void CVideoGrabber::SetTextOverlayString (const wchar_t *Value) {  _SetTextOverlayString (m_VideoGrabber, Value); };
   void CVideoGrabber::SetTextOverlayTargetDisplay (int Value) {  _SetTextOverlayTargetDisplay (m_VideoGrabber, Value); };
   void CVideoGrabber::SetTextOverlayTop (int Value) {  _SetTextOverlayTop (m_VideoGrabber, Value); };
   void CVideoGrabber::SetTextOverlayTransparent (BOOL Value) {  _SetTextOverlayTransparent (m_VideoGrabber, Value); };
   void CVideoGrabber::SetTextOverlayVideoAlignment (TVideoAlignment Value) {  _SetTextOverlayVideoAlignment (m_VideoGrabber, Value); };
   BOOL CVideoGrabber::SetVideoCompressionDefaults () {  return _SetVideoCompressionDefaults (m_VideoGrabber); };
   BOOL CVideoGrabber::SetVideoCompressionSettings (int DataRate, int KeyFrameRate, int PFramesPerKeyFrame, int WindowSize, double Quality) {  return _SetVideoCompressionSettings (m_VideoGrabber, DataRate, KeyFrameRate, PFramesPerKeyFrame, WindowSize, Quality); };
   BOOL CVideoGrabber::SetVideoControlMode (BOOL FlipHorizontal, BOOL FlipVertical, BOOL ExternalTriggerEnable, BOOL Trigger) {  return _SetVideoControlMode (m_VideoGrabber, FlipHorizontal, FlipVertical, ExternalTriggerEnable, Trigger); };
   BOOL CVideoGrabber::SetVideoControlMode2 (TVideoControl Mode, BOOL Value) {  return _SetVideoControlMode2 (m_VideoGrabber, Mode, Value); };
   BOOL CVideoGrabber::SetVideoQuality (TVideoQuality Setting, BOOL SetAuto, BOOL SetDefault, int SetValue) {  return _SetVideoQuality (m_VideoGrabber, Setting, SetAuto, SetDefault, SetValue); };
   BOOL CVideoGrabber::SetVMR9ImageAdjustmentValue (BOOL MainDisplay, TVMR9ImageAdjustment VMR9ControlSetting, int Value, BOOL FixRange) {  return _SetVMR9ImageAdjustmentValue (m_VideoGrabber, MainDisplay, VMR9ControlSetting, Value, FixRange); };
   void CVideoGrabber::SetVuMeter_Enabled (int Index, TVuMeter Value) {  _SetVuMeter_Enabled (m_VideoGrabber, Index, Value); };
   void CVideoGrabber::SetVUMeterSetting (unsigned int ChannelIndex, TVUMeterSetting VUMeterSetting, INT_PTR Value) {  _SetVUMeterSetting (m_VideoGrabber, ChannelIndex, VUMeterSetting, Value); };
   BOOL CVideoGrabber::SetWindowRecordingByHandle (HWND Window_Handle) {  return _SetWindowRecordingByHandle (m_VideoGrabber, Window_Handle); };
   BOOL CVideoGrabber::SetWindowRecordingByName (const wchar_t *WindowName, BOOL ExactMatch) {  return _SetWindowRecordingByName (m_VideoGrabber, WindowName, ExactMatch); };
   BOOL CVideoGrabber::SetWindowTransparency (HWND WndHandle, BOOL UseColorKey, BOOL UseAlpha, int AlphaValue) {  return _SetWindowTransparency (m_VideoGrabber, WndHandle, UseColorKey, UseAlpha, AlphaValue); };
   void CVideoGrabber::ShowDebugWindow () {  _ShowDebugWindow (m_VideoGrabber); };
   BOOL CVideoGrabber::ShowDialog (TDialog Dialog) {  return _ShowDialog (m_VideoGrabber, Dialog); };
   BOOL CVideoGrabber::StartAudioRecording () {  return _StartAudioRecording (m_VideoGrabber); };
   BOOL CVideoGrabber::StartAudioRendering () {  return _StartAudioRendering (m_VideoGrabber); };
   BOOL CVideoGrabber::StartPreview () {  return _StartPreview (m_VideoGrabber); };
   BOOL CVideoGrabber::StartRecording () {  return _StartRecording (m_VideoGrabber); };
   BOOL CVideoGrabber::StartReencoding () {  return _StartReencoding (m_VideoGrabber); };
   BOOL CVideoGrabber::StartSynchronized () {  return _StartSynchronized (m_VideoGrabber); };
   BOOL CVideoGrabber::Stop () {  return _Stop (m_VideoGrabber); };
   void CVideoGrabber::StopPlayer () {  _StopPlayer (m_VideoGrabber); };
   void CVideoGrabber::StopPreview () {  _StopPreview (m_VideoGrabber); };
   void CVideoGrabber::StopRecording () {  _StopRecording (m_VideoGrabber); };
   BOOL CVideoGrabber::StopReencoding () {  return _StopReencoding (m_VideoGrabber); };
   int CVideoGrabber::StreamInterface_PushData (byte *Buffer, int BufferSize) {  return _StreamInterface_PushData (m_VideoGrabber, Buffer, BufferSize); };
   BOOL CVideoGrabber::TextOverlay_CreateCustomFont (int Index, int fHeight, int fWidth, int fEscapement, int fOrientation, int fWeight, BOOL fItalic, BOOL fUnderline, BOOL fStrikeOut, unsigned int fCharSet, unsigned int fOutputPrecision, unsigned int fClipPrecision, unsigned int fQuality, unsigned int fPitchAndFamily, const wchar_t *FontFacename) {  return _TextOverlay_CreateCustomFont (m_VideoGrabber, Index, fHeight, fWidth, fEscapement, fOrientation, fWeight, fItalic, fUnderline, fStrikeOut, fCharSet, fOutputPrecision, fClipPrecision, fQuality, fPitchAndFamily, FontFacename); };
   BOOL CVideoGrabber::ThirdPartyFilter_AddToList (TThirdPartyFilterList Location, const wchar_t *GUIDString, const wchar_t *OptionalDLLFilePath, const wchar_t *FilterName, BOOL Enable, BOOL CanSaveFilterState) {  return _ThirdPartyFilter_AddToList (m_VideoGrabber, Location, GUIDString, OptionalDLLFilePath, FilterName, Enable, CanSaveFilterState); };
   BOOL CVideoGrabber::ThirdPartyFilter_ClearList () {  return _ThirdPartyFilter_ClearList (m_VideoGrabber); };
   BOOL CVideoGrabber::ThirdPartyFilter_Enable (TThirdPartyFilterList Location, const wchar_t *GUIDString, BOOL Enable) {  return _ThirdPartyFilter_Enable (m_VideoGrabber, Location, GUIDString, Enable); };
   BOOL CVideoGrabber::ThirdPartyFilter_RemoveFromList (TThirdPartyFilterList Location, const wchar_t *GUIDString) {  return _ThirdPartyFilter_RemoveFromList (m_VideoGrabber, Location, GUIDString); };
   BOOL CVideoGrabber::ThirdPartyFilter_ShowDialog (TThirdPartyFilterList Location, const wchar_t *GUIDString) {  return _ThirdPartyFilter_ShowDialog (m_VideoGrabber, Location, GUIDString); };
   BOOL CVideoGrabber::TVClearFrequencyOverrides () {  return _TVClearFrequencyOverrides (m_VideoGrabber); };
   BOOL CVideoGrabber::TVGetMinMaxChannels (int*MinChannel, int*MaxChannel) {  return _TVGetMinMaxChannels (m_VideoGrabber, MinChannel, MaxChannel); };
   int CVideoGrabber::TVSetChannelFrequencyOverride (int TVChannel, int FrequencyInHz) {  return _TVSetChannelFrequencyOverride (m_VideoGrabber, TVChannel, FrequencyInHz); };
   BOOL CVideoGrabber::TVStartAutoScan () {  return _TVStartAutoScan (m_VideoGrabber); };
   BOOL CVideoGrabber::TVStartAutoScanChannels (int MinChannel, int MaxChannel, int Interval_ms) {  return _TVStartAutoScanChannels (m_VideoGrabber, MinChannel, MaxChannel, Interval_ms); };
   BOOL CVideoGrabber::TVStopAutoScan () {  return _TVStopAutoScan (m_VideoGrabber); };
   void CVideoGrabber::UpdateTrackbarBounds () {  _UpdateTrackbarBounds (m_VideoGrabber); };
   void CVideoGrabber::UseNearestVideoSize (int PreferredWidth, int PreferredHeight, BOOL Stretch) {  _UseNearestVideoSize (m_VideoGrabber, PreferredWidth, PreferredHeight, Stretch); };
   BOOL CVideoGrabber::v360_AddYawPitchRoll (double Yaw, double Pitch, double Roll) {  return _v360_AddYawPitchRoll (m_VideoGrabber, Yaw, Pitch, Roll); };
   double CVideoGrabber::v360_GetAngle (Tv360_InOut Direction, Tv360_Angle Angle) {  return _v360_GetAngle (m_VideoGrabber, Direction, Angle); };
   void CVideoGrabber::v360_GetYawPitchRoll (double*Yaw, double*Pitch, double*Roll) {  _v360_GetYawPitchRoll (m_VideoGrabber, Yaw, Pitch, Roll); };
   void CVideoGrabber::v360_ResetAnglesToDefault () {  _v360_ResetAnglesToDefault (m_VideoGrabber); };
   BOOL CVideoGrabber::v360_SetAngle (Tv360_InOut Direction, Tv360_Angle Angle, double Value) {  return _v360_SetAngle (m_VideoGrabber, Direction, Angle, Value); };
   BOOL CVideoGrabber::v360_SetInterpolation (Tv360_Interpolation Value) {  return _v360_SetInterpolation (m_VideoGrabber, Value); };
   BOOL CVideoGrabber::v360_SetProjection (Tv360_InOut Direction, Tv360_Projection Value) {  return _v360_SetProjection (m_VideoGrabber, Direction, Value); };
   BOOL CVideoGrabber::v360_SetStereoFormat (Tv360_InOut Direction, Tv360_StereoFormat Value) {  return _v360_SetStereoFormat (m_VideoGrabber, Direction, Value); };
   BOOL CVideoGrabber::v360_SetTranspose (Tv360_InOut Direction, BOOL Value) {  return _v360_SetTranspose (m_VideoGrabber, Direction, Value); };
   BOOL CVideoGrabber::v360_SetYawPitchRoll (double Yaw, double Pitch, double Roll) {  return _v360_SetYawPitchRoll (m_VideoGrabber, Yaw, Pitch, Roll); };
   BOOL CVideoGrabber::VDECGetHorizontalLocked (int*plLocked) {  return _VDECGetHorizontalLocked (m_VideoGrabber, plLocked); };
   BOOL CVideoGrabber::VDECGetNumberOfLines (int*plNumberOfLines) {  return _VDECGetNumberOfLines (m_VideoGrabber, plNumberOfLines); };
   BOOL CVideoGrabber::VDECGetOutputEnable (int*plOutputEnable) {  return _VDECGetOutputEnable (m_VideoGrabber, plOutputEnable); };
   BOOL CVideoGrabber::VDECGetVCRHorizontalLocking (int*plVCRHorizontalLocking) {  return _VDECGetVCRHorizontalLocking (m_VideoGrabber, plVCRHorizontalLocking); };
   BOOL CVideoGrabber::VDECPutOutputEnable (int lOutputEnable) {  return _VDECPutOutputEnable (m_VideoGrabber, lOutputEnable); };
   BOOL CVideoGrabber::VDECPutTVFormat (int lAnalogVideoStandard) {  return _VDECPutTVFormat (m_VideoGrabber, lAnalogVideoStandard); };
   BOOL CVideoGrabber::VDECPutVCRHorizontalLocking (int lVCRHorizontalLocking) {  return _VDECPutVCRHorizontalLocking (m_VideoGrabber, lVCRHorizontalLocking); };
   int CVideoGrabber::VideoCompressorIndex (const wchar_t *Value) {  return _VideoCompressorIndex (m_VideoGrabber, Value); };
   int CVideoGrabber::VideoDeviceIndex (const wchar_t *Value) {  return _VideoDeviceIndex (m_VideoGrabber, Value); };
   int CVideoGrabber::VideoDeviceIndexFromId (const wchar_t *Value) {  return _VideoDeviceIndexFromId (m_VideoGrabber, Value); };
   int CVideoGrabber::VideoFormatIndex (const wchar_t *Value) {  return _VideoFormatIndex (m_VideoGrabber, Value); };
   BOOL CVideoGrabber::VideoFromImages_CreateSetOfBitmaps () {  return _VideoFromImages_CreateSetOfBitmaps (m_VideoGrabber); };
   int CVideoGrabber::VideoInputIndex (const wchar_t *Value) {  return _VideoInputIndex (m_VideoGrabber, Value); };
   BOOL CVideoGrabber::VideoQualityAuto (TVideoQuality Setting) {  return _VideoQualityAuto (m_VideoGrabber, Setting); };
   int CVideoGrabber::VideoQualityDefault (TVideoQuality Setting) {  return _VideoQualityDefault (m_VideoGrabber, Setting); };
   int CVideoGrabber::VideoQualityMax (TVideoQuality Setting) {  return _VideoQualityMax (m_VideoGrabber, Setting); };
   int CVideoGrabber::VideoQualityMin (TVideoQuality Setting) {  return _VideoQualityMin (m_VideoGrabber, Setting); };
   int CVideoGrabber::VideoQualityStep (TVideoQuality Setting) {  return _VideoQualityStep (m_VideoGrabber, Setting); };
   int CVideoGrabber::VideoQualityValue (TVideoQuality Setting) {  return _VideoQualityValue (m_VideoGrabber, Setting); };
   int CVideoGrabber::VideoSizeIndex (const wchar_t *Value) {  return _VideoSizeIndex (m_VideoGrabber, Value); };
   int CVideoGrabber::VideoSubtypeIndex (const wchar_t *Value) {  return _VideoSubtypeIndex (m_VideoGrabber, Value); };
   void * CVideoGrabber::WaitForLastFrameBitmapBits (int BufferIndex, BOOL WithOverlays, BOOL ReleaseFrame, int*BitmapWidth, int*BitmapHeight, int*BitmapLineSize, int*BitmapSize, int*BitmapBitsPerPixel, __int64*FrameTime, __int64*FrameNumber) {  return _WaitForLastFrameBitmapBits (m_VideoGrabber, BufferIndex, WithOverlays, ReleaseFrame, BitmapWidth, BitmapHeight, BitmapLineSize, BitmapSize, BitmapBitsPerPixel, FrameTime, FrameNumber); };
   BOOL CVideoGrabber::WriteScriptCommand (const wchar_t *ScriptType, const wchar_t *ScriptArgument) {  return _WriteScriptCommand (m_VideoGrabber, ScriptType, ScriptArgument); };
   BOOL CVideoGrabber::zReservedInternal1 (void *Param1, void *Param2) {  return _zReservedInternal1 (m_VideoGrabber, Param1, Param2); };
   BOOL CVideoGrabber::zReservedInternal2 (BOOL Param1) {  return _zReservedInternal2 (m_VideoGrabber, Param1); };
   INT_PTR CVideoGrabber::zReservedInternal3 () {  return _zReservedInternal3 (m_VideoGrabber); };
//#endregion DeclareFunctionsCPP

//#region DeclarePropertiesCPP
   const wchar_t *CVideoGrabber::GetAnalogVideoStandards () { return _GetAnalogVideoStandards (m_VideoGrabber); };
   
   int CVideoGrabber::GetAnalogVideoStandardsCount () { return _GetAnalogVideoStandardsCount (m_VideoGrabber); };
   
   const wchar_t *CVideoGrabber::GetASFProfiles () { return _GetASFProfiles (m_VideoGrabber); };
   
   int CVideoGrabber::GetASFProfilesCount () { return _GetASFProfilesCount (m_VideoGrabber); };
   
   int CVideoGrabber::GetAudioBalance () { return _GetAudioBalance (m_VideoGrabber); };
   void CVideoGrabber::SetAudioBalance (int Value) { _SetAudioBalance (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetAudioCompressorName () { return _GetAudioCompressorName (m_VideoGrabber); };
   
   const wchar_t *CVideoGrabber::GetAudioCompressors () { return _GetAudioCompressors (m_VideoGrabber); };
   
   int CVideoGrabber::GetAudioCompressorsCount () { return _GetAudioCompressorsCount (m_VideoGrabber); };
   
   int CVideoGrabber::GetAudioInputBalance () { return _GetAudioInputBalance (m_VideoGrabber); };
   void CVideoGrabber::SetAudioInputBalance (int Value) { _SetAudioInputBalance (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetAudioInputLevel () { return _GetAudioInputLevel (m_VideoGrabber); };
   void CVideoGrabber::SetAudioInputLevel (int Value) { _SetAudioInputLevel (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetAudioInputMono () { return _GetAudioInputMono (m_VideoGrabber); };
   void CVideoGrabber::SetAudioInputMono (BOOL Value) { _SetAudioInputMono (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetAudioInputs () { return _GetAudioInputs (m_VideoGrabber); };
   
   int CVideoGrabber::GetAudioInputsCount () { return _GetAudioInputsCount (m_VideoGrabber); };
   
   const wchar_t *CVideoGrabber::GetAudioDeviceName () { return _GetAudioDeviceName (m_VideoGrabber); };
   
   const wchar_t *CVideoGrabber::GetAudioDevices () { return _GetAudioDevices (m_VideoGrabber); };
   
   int CVideoGrabber::GetAudioDevicesCount () { return _GetAudioDevicesCount (m_VideoGrabber); };
   
   const wchar_t *CVideoGrabber::GetAudioFormats () { return _GetAudioFormats (m_VideoGrabber); };
   
   const wchar_t *CVideoGrabber::GetAudioRendererName () { return _GetAudioRendererName (m_VideoGrabber); };
   
   const wchar_t *CVideoGrabber::GetAudioRenderers () { return _GetAudioRenderers (m_VideoGrabber); };
   
   int CVideoGrabber::GetAudioRenderersCount () { return _GetAudioRenderersCount (m_VideoGrabber); };
   
   int CVideoGrabber::GetAudioVolume () { return _GetAudioVolume (m_VideoGrabber); };
   void CVideoGrabber::SetAudioVolume (int Value) { _SetAudioVolume (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetBufferCount () { return _GetBufferCount (m_VideoGrabber); };
   void CVideoGrabber::SetBufferCount (int Value) { _SetBufferCount (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetBusy () { return _GetBusy (m_VideoGrabber); };
   
   double CVideoGrabber::GetRecordingDuration () { return _GetRecordingDuration (m_VideoGrabber); };
   
   const wchar_t *CVideoGrabber::GetRecordingFourCC () { return _GetRecordingFourCC (m_VideoGrabber); };
   
   int CVideoGrabber::GetCropping_YMax () { return _GetCropping_YMax (m_VideoGrabber); };
   
   int CVideoGrabber::GetCropping_XMax () { return _GetCropping_XMax (m_VideoGrabber); };
   
   double CVideoGrabber::GetCurrentFrameRate () { return _GetCurrentFrameRate (m_VideoGrabber); };
   
   TCurrentState CVideoGrabber::GetCurrentState () { return _GetCurrentState (m_VideoGrabber); };
   
   __int64 CVideoGrabber::GetDeliveredFrames () { return _GetDeliveredFrames (m_VideoGrabber); };
   
   const wchar_t *CVideoGrabber::GetDirectShowFilters () { return _GetDirectShowFilters (m_VideoGrabber); };
   
   int CVideoGrabber::GetDirectShowFiltersCount () { return _GetDirectShowFiltersCount (m_VideoGrabber); };
   
   int CVideoGrabber::GetDisplay_VideoHeight () { return _GetDisplayVideoHeight (m_VideoGrabber, 0); };
   
   int CVideoGrabber::GetDisplay_VideoWidth () { return _GetDisplayVideoWidth (m_VideoGrabber, 0); };
   
   HWND CVideoGrabber::GetDisplay_VideoWindowHandle () { return _GetDisplayVideoWindowHandle (m_VideoGrabber, 0); };
   
   HWND CVideoGrabber::GetDualDisplay_VideoWindowHandle () { return _GetDisplayVideoWindowHandle (m_VideoGrabber, 1); };
   
   int CVideoGrabber::GetDroppedFrames () { return _GetDroppedFrameCount (m_VideoGrabber); };
   
   int CVideoGrabber::GetDualDisplay_VideoHeight () { return _GetDisplayVideoHeight (m_VideoGrabber, 1); };
   
   int CVideoGrabber::GetDualDisplay_VideoWidth () { return _GetDisplayVideoWidth (m_VideoGrabber, 1); };
   
   TFrameGrabberRGBFormat CVideoGrabber::GetFrameGrabberCurrentRGBFormat () { return _GetFrameGrabberCurrentRGBFormat (m_VideoGrabber); };
   
   BOOL CVideoGrabber::GetHoldRecording () { return _GetHoldRecording (m_VideoGrabber); };
   void CVideoGrabber::SetHoldRecording (BOOL Value) { _SetHoldRecording (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetImageOverlaySelector () { return _GetImageOverlaySelector (m_VideoGrabber); };
   void CVideoGrabber::SetImageOverlaySelector (int Value) { _SetImageOverlaySelector (m_VideoGrabber, Value); };
   
   double CVideoGrabber::GetImageRatio () { return _GetImageRatio (m_VideoGrabber); };
   
   BOOL CVideoGrabber::GetInFrameProgressEvent () { return _GetInFrameProgressEvent (m_VideoGrabber); };
   
   BOOL CVideoGrabber::GetIsAnalogVideoDecoderAvailable () { return _GetIsAnalogVideoDecoderAvailable (m_VideoGrabber); };
   
   BOOL CVideoGrabber::GetIsAudioCrossbarAvailable () { return _GetIsAudioCrossbarAvailable (m_VideoGrabber); };
   
   TTriState CVideoGrabber::GetIsAudioInputBalanceAvailable () { return _GetIsAudioInputBalanceAvailable (m_VideoGrabber); };
   
   BOOL CVideoGrabber::GetIsCameraControlAvailable () { return _GetIsCameraControlAvailable (m_VideoGrabber); };
   
   BOOL CVideoGrabber::GetIsDigitalVideoIn () { return _GetIsDigitalVideoIn (m_VideoGrabber); };
   
   BOOL CVideoGrabber::GetIsDVCommandAvailable () { return _GetIsDVCommandAvailable (m_VideoGrabber); };
   
   BOOL CVideoGrabber::GetIsHorizontalSyncLocked () { return _GetIsHorizontalSyncLocked (m_VideoGrabber); };
   
   BOOL CVideoGrabber::GetIsMpegStream () { return _GetIsMpegStream (m_VideoGrabber); };
   
   TTriState CVideoGrabber::GetIsPlayerAudioStreamAvailable () { return _GetIsPlayerAudioStreamAvailable (m_VideoGrabber); };
   
   TTriState CVideoGrabber::GetIsPlayerVideoStreamAvailable () { return _GetIsPlayerVideoStreamAvailable (m_VideoGrabber); };
   
   BOOL CVideoGrabber::GetIsRecordingPaused () { return _GetIsRecordingPaused (m_VideoGrabber); };
   
   BOOL CVideoGrabber::GetIsTimeCodeReaderAvailable () { return _GetTimeCodeReaderAvailable (m_VideoGrabber); };
   
   BOOL CVideoGrabber::GetIsTVTunerAvailable () { return _GetIsTVTunerAvailable (m_VideoGrabber); };
   
   BOOL CVideoGrabber::GetIsTVAutoTuneRunning () { return _GetIsTVAutoTuneRunning (m_VideoGrabber); };
   
   BOOL CVideoGrabber::GetIsTVAudioAvailable () { return _GetIsTVAudioAvailable (m_VideoGrabber); };
   
   BOOL CVideoGrabber::GetIsVideoControlAvailable () { return _GetIsVideoControlAvailable (m_VideoGrabber); };
   
   BOOL CVideoGrabber::GetIsVideoCrossbarAvailable () { return _GetIsVideoCrossbarAvailable (m_VideoGrabber); };
   
   BOOL CVideoGrabber::GetIsVideoInterlaced () { return _GetIsVideoInterlaced (m_VideoGrabber); };
   
   BOOL CVideoGrabber::GetIsVideoQualityAvailable () { return _GetIsVideoQualityAvailable (m_VideoGrabber); };
   
   BOOL CVideoGrabber::GetIsVideoPortAvailable () { return _GetIsVideoPortAvailable (m_VideoGrabber); };
   
   BOOL CVideoGrabber::GetIsWDMVideoDriver () { return _GetIsWDMVideoDriver (m_VideoGrabber); };
   
   const wchar_t *CVideoGrabber::GetLast_BurstFrameCapture_FileName () { return _GetLast_BurstFrameCapture_FileName (m_VideoGrabber); };
   
   const wchar_t *CVideoGrabber::GetLast_CaptureFrameTo_FileName () { return _GetLast_CaptureFrameTo_FileName (m_VideoGrabber); };
   
   const wchar_t *CVideoGrabber::GetLast_Recording_FileName () { return _GetLast_Recording_FileName (m_VideoGrabber); };
   
   const wchar_t *CVideoGrabber::GetLast_Clip_Played () { return _GetLast_Clip_Played (m_VideoGrabber); };
   
   double CVideoGrabber::GetMotionDetector_GlobalMotionRatio () { return _GetMotionDetector_GlobalMotionRatio (m_VideoGrabber); };
   
   int CVideoGrabber::GetMotionDetector_GridXCount () { return _GetMotionDetector_GridXCount (m_VideoGrabber); };
   
   int CVideoGrabber::GetMotionDetector_GridYCount () { return _GetMotionDetector_GridYCount (m_VideoGrabber); };
   
   BOOL CVideoGrabber::GetMotionDetector_IsGridValid () { return _GetMotionDetector_IsGridValid (m_VideoGrabber); };
   
   TMpegStreamType CVideoGrabber::GetMpegStreamType () { return _GetMpegStreamType (m_VideoGrabber); };
   void CVideoGrabber::SetMpegStreamType (TMpegStreamType Value) { _SetMpegStreamType (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetMultiplexerName () { return _GetMultiplexerName (m_VideoGrabber); };
   
   const wchar_t *CVideoGrabber::GetMultiplexers () { return _GetMultiplexers (m_VideoGrabber); };
   
   int CVideoGrabber::GetMultiplexersCount () { return _GetMultiplexersCount (m_VideoGrabber); };
   
   int CVideoGrabber::GetPlaylistIndex () { return _GetPlaylistIndex (m_VideoGrabber); };
   void CVideoGrabber::SetPlaylistIndex (int Value) { _SetPlaylistIndex (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetPlayerAudioCodec () { return _GetAudioCodec (m_VideoGrabber); };
   
   __int64 CVideoGrabber::GetPlayerDuration () { return _GetPlayerDuration (m_VideoGrabber); };
   void CVideoGrabber::SetPlayerDuration (__int64 Value) { _SetPlayerDuration (m_VideoGrabber, Value); };
   
   __int64 CVideoGrabber::GetPlayerFrameCount () { return _GetPlayerFrameCount (m_VideoGrabber); };
   
   __int64 CVideoGrabber::GetPlayerFramePosition () { return _GetPlayerFramePosition (m_VideoGrabber); };
   void CVideoGrabber::SetPlayerFramePosition (__int64 Value) { _SetPlayerFramePosition (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetPlayerOpenProgressPercent () { return _GetPlayerOpenProgressPercent (m_VideoGrabber); };
   
   TPlayerState CVideoGrabber::GetPlayerState () { return _GetPlayerState (m_VideoGrabber); };
   
   __int64 CVideoGrabber::GetPlayerTimePosition () { return _GetPlayerTimePosition (m_VideoGrabber); };
   void CVideoGrabber::SetPlayerTimePosition (__int64 Value) { _SetPlayerTimePosition (m_VideoGrabber, Value); };
   
   double CVideoGrabber::GetPlayerFrameRate () { return _GetPlayerFrameRate (m_VideoGrabber); };
   
   const wchar_t *CVideoGrabber::GetPlayerVideoCodec () { return _GetVideoCodec (m_VideoGrabber); };
   
   int CVideoGrabber::GetRecordingBacktimedFramesCount () { return _GetRecordingBacktimedFramesCount (m_VideoGrabber); };
   void CVideoGrabber::SetRecordingBacktimedFramesCount (int Value) { _SetRecordingBacktimedFramesCount (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetRecordingCanPause () { return _GetRecordingCanPause (m_VideoGrabber); };
   void CVideoGrabber::SetRecordingCanPause (BOOL Value) { _SetRecordingCanPause (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetRecordingHeight () { return _GetRecordingHeight (m_VideoGrabber); };
   
   int CVideoGrabber::GetRecordingWidth () { return _GetRecordingWidth (m_VideoGrabber); };
   
   int CVideoGrabber::GetSendToDV_DeviceIndex () { return _GetSendToDV_DeviceIndex (m_VideoGrabber); };
   void CVideoGrabber::SetSendToDV_DeviceIndex (int Value) { _SetSendToDV_DeviceIndex (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetSpeakerBalance () { return _GetSpeakerBalance (m_VideoGrabber); };
   void CVideoGrabber::SetSpeakerBalance (int Value) { _SetSpeakerBalance (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetSpeakerVolume () { return _GetSpeakerVolume (m_VideoGrabber); };
   void CVideoGrabber::SetSpeakerVolume (int Value) { _SetSpeakerVolume (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetStreamingURL () { return _GetStreamingURL (m_VideoGrabber); };
   
   const wchar_t *CVideoGrabber::GetSystemTempPath () { return _GetSystemTempPath (m_VideoGrabber); };
   
   int CVideoGrabber::GetTextOverlay_Selector () { return _GetTextOverlaySelector (m_VideoGrabber); };
   void CVideoGrabber::SetTextOverlay_Selector (int Value) { _SetTextOverlaySelector (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetTVChannel () { return _GetTVChannel (m_VideoGrabber); };
   void CVideoGrabber::SetTVChannel (int Value) { _SetTVChannel (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetTVCountryCode () { return _GetTVCountryCode (m_VideoGrabber); };
   void CVideoGrabber::SetTVCountryCode (int Value) { _SetTVCountryCode (m_VideoGrabber, Value); };
   
   TTunerInputType CVideoGrabber::GetTVTunerInputType () { return _GetTVTunerInputType (m_VideoGrabber); };
   void CVideoGrabber::SetTVTunerInputType (TTunerInputType Value) { _SetTVTunerInputType (m_VideoGrabber, Value); };
   
   TTunerMode CVideoGrabber::GetTunerMode () { return _GetTunerMode (m_VideoGrabber); };
   void CVideoGrabber::SetTunerMode (TTunerMode Value) { _SetTunerMode (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetUniqueID () { return _GetUniqueID (m_VideoGrabber); };
   
   BOOL CVideoGrabber::GetVCRHorizontalLocking () { return _GetVCRHorizontalLocking (m_VideoGrabber); };
   void CVideoGrabber::SetVCRHorizontalLocking (BOOL Value) { _SetVCRHorizontalLocking (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetVideoCompressorName () { return _GetVideoCompressorName (m_VideoGrabber); };
   
   const wchar_t *CVideoGrabber::GetVideoCompressors () { return _GetVideoCompressors (m_VideoGrabber); };
   
   int CVideoGrabber::GetVideoCompressorsCount () { return _GetVideoCompressorsCount (m_VideoGrabber); };
   
   const wchar_t *CVideoGrabber::GetVideoFormats () { return _GetVideoFormats (m_VideoGrabber); };
   
   int CVideoGrabber::GetVideoFormatsCount () { return _GetVideoFormatsCount (m_VideoGrabber); };
   
   const wchar_t *CVideoGrabber::GetVideoInputs () { return _GetVideoInputs (m_VideoGrabber); };
   
   int CVideoGrabber::GetVideoInputsCount () { return _GetVideoInputsCount (m_VideoGrabber); };
   
   const wchar_t *CVideoGrabber::GetVideoDeviceName () { return _GetVideoDeviceName (m_VideoGrabber); };
   
   const wchar_t *CVideoGrabber::GetVideoDevices () { return _GetVideoDevices (m_VideoGrabber); };
   
   const wchar_t *CVideoGrabber::GetVideoDevicesId () { return _GetVideoDevicesId (m_VideoGrabber); };
   
   int CVideoGrabber::GetVideoDevicesCount () { return _GetVideoDevicesCount (m_VideoGrabber); };
   
   int CVideoGrabber::GetVideoHeight () { return _GetVideoHeight (m_VideoGrabber); };
   
   int CVideoGrabber::GetVideoHeight_PreferredAspectRatio () { return _GetVideoHeight_PreferredAspectRatio (m_VideoGrabber); };
   
   int CVideoGrabber::GetVideoWidth () { return _GetVideoWidth (m_VideoGrabber); };
   
   int CVideoGrabber::GetVideoWidth_PreferredAspectRatio () { return _GetVideoWidth_PreferredAspectRatio (m_VideoGrabber); };
   
   const wchar_t *CVideoGrabber::GetVideoSizes () { return _GetVideoSizes (m_VideoGrabber); };
   
   int CVideoGrabber::GetVideoSizesCount () { return _GetVideoSizesCount (m_VideoGrabber); };
   
   const wchar_t *CVideoGrabber::GetVideoSources () { return _GetVideoSources (m_VideoGrabber); };
   
   int CVideoGrabber::GetVideoSourcesCount () { return _GetVideoSourcesCount (m_VideoGrabber); };
   
   const wchar_t *CVideoGrabber::GetVideoSubtypes () { return _GetVideoSubtypes (m_VideoGrabber); };
   
   int CVideoGrabber::GetVideoSubtypesCount () { return _GetVideoSubtypesCount (m_VideoGrabber); };
   
   BOOL CVideoGrabber::GetAdjustOverlayAspectRatio () { return _GetAdjustOverlayAspectRatio (m_VideoGrabber); };
   void CVideoGrabber::SetAdjustOverlayAspectRatio (BOOL Value) { _SetAdjustOverlayAspectRatio (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetAdjustPixelAspectRatio () { return _GetAdjustPixelAspectRatio (m_VideoGrabber); };
   void CVideoGrabber::SetAdjustPixelAspectRatio (BOOL Value) { _SetAdjustPixelAspectRatio (m_VideoGrabber, Value); };
   
   TAero CVideoGrabber::GetAero () { return _GetAero (m_VideoGrabber); };
   void CVideoGrabber::SetAero (TAero Value) { _SetAero (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetAnalogVideoStandard () { return _GetAnalogVideoStandard (m_VideoGrabber); };
   void CVideoGrabber::SetAnalogVideoStandard (int Value) { _SetAnalogVideoStandard (m_VideoGrabber, Value); };
   
   TApplicationPriority CVideoGrabber::GetApplicationPriority () { return _GetApplicationPriority (m_VideoGrabber); };
   void CVideoGrabber::SetApplicationPriority (TApplicationPriority Value) { _SetApplicationPriority (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetASFAudioBitRate () { return _GetASFAudioBitRate (m_VideoGrabber); };
   void CVideoGrabber::SetASFAudioBitRate (int Value) { _SetASFAudioBitRate (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetASFAudioChannels () { return _GetASFAudioChannels (m_VideoGrabber); };
   void CVideoGrabber::SetASFAudioChannels (int Value) { _SetASFAudioChannels (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetASFBufferWindow () { return _GetASFBufferWindow (m_VideoGrabber); };
   void CVideoGrabber::SetASFBufferWindow (int Value) { _SetASFBufferWindow (m_VideoGrabber, Value); };
   
   TASFDeinterlaceMode CVideoGrabber::GetASFDeinterlaceMode () { return _GetASFDeinterlaceMode (m_VideoGrabber); };
   void CVideoGrabber::SetASFDeinterlaceMode (TASFDeinterlaceMode Value) { _SetASFDeinterlaceMode (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetASFDirectStreamingKeepClientsConnected () { return _GetASFDirectStreamingKeepClientsConnected (m_VideoGrabber); };
   void CVideoGrabber::SetASFDirectStreamingKeepClientsConnected (BOOL Value) { _SetASFDirectStreamingKeepClientsConnected (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetASFFixedFrameRate () { return _GetASFFixedFrameRate (m_VideoGrabber); };
   void CVideoGrabber::SetASFFixedFrameRate (BOOL Value) { _SetASFFixedFrameRate (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetASFMediaServerPublishingPoint () { return _GetASFMediaServerPublishingPoint (m_VideoGrabber); };
   void CVideoGrabber::SetASFMediaServerPublishingPoint (const wchar_t *Value) { _SetASFMediaServerPublishingPoint (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetASFMediaServerTemplatePublishingPoint () { return _GetASFMediaServerTemplatePublishingPoint (m_VideoGrabber); };
   void CVideoGrabber::SetASFMediaServerTemplatePublishingPoint (const wchar_t *Value) { _SetASFMediaServerTemplatePublishingPoint (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetASFMediaServerRemovePublishingPointAfterDisconnect () { return _GetASFMediaServerRemovePublishingPointAfterDisconnect (m_VideoGrabber); };
   void CVideoGrabber::SetASFMediaServerRemovePublishingPointAfterDisconnect (BOOL Value) { _SetASFMediaServerRemovePublishingPointAfterDisconnect (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetASFNetworkPort () { return _GetASFNetworkPort (m_VideoGrabber); };
   void CVideoGrabber::SetASFNetworkPort (int Value) { _SetASFNetworkPort (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetASFNetworkMaxUsers () { return _GetASFNetworkMaxUsers (m_VideoGrabber); };
   void CVideoGrabber::SetASFNetworkMaxUsers (int Value) { _SetASFNetworkMaxUsers (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetASFProfile () { return _GetASFProfile (m_VideoGrabber); };
   void CVideoGrabber::SetASFProfile (int Value) { _SetASFProfile (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetASFProfileFromCustomFile () { return _GetASFProfileFromCustomFile (m_VideoGrabber); };
   void CVideoGrabber::SetASFProfileFromCustomFile (const wchar_t *Value) { _SetASFProfileFromCustomFile (m_VideoGrabber, Value); };
   
   TASFProfileVersion CVideoGrabber::GetASFProfileVersion () { return _GetASFProfileVersion (m_VideoGrabber); };
   void CVideoGrabber::SetASFProfileVersion (TASFProfileVersion Value) { _SetASFProfileVersion (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetASFVideoBitRate () { return _GetASFVideoBitRate (m_VideoGrabber); };
   void CVideoGrabber::SetASFVideoBitRate (int Value) { _SetASFVideoBitRate (m_VideoGrabber, Value); };
   
   double CVideoGrabber::GetASFVideoFrameRate () { return _GetASFVideoFrameRate (m_VideoGrabber); };
   void CVideoGrabber::SetASFVideoFrameRate (double Value) { _SetASFVideoFrameRate (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetASFVideoHeight () { return _GetASFVideoHeight (m_VideoGrabber); };
   void CVideoGrabber::SetASFVideoHeight (int Value) { _SetASFVideoHeight (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetASFVideoMaxKeyFrameSpacing () { return _GetASFVideoMaxKeyFrameSpacing (m_VideoGrabber); };
   void CVideoGrabber::SetASFVideoMaxKeyFrameSpacing (int Value) { _SetASFVideoMaxKeyFrameSpacing (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetASFVideoQuality () { return _GetASFVideoQuality (m_VideoGrabber); };
   void CVideoGrabber::SetASFVideoQuality (int Value) { _SetASFVideoQuality (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetASFVideoWidth () { return _GetASFVideoWidth (m_VideoGrabber); };
   void CVideoGrabber::SetASFVideoWidth (int Value) { _SetASFVideoWidth (m_VideoGrabber, Value); };
   
   double CVideoGrabber::GetAspectRatioToUse () { return _GetAspectRatioToUse (m_VideoGrabber); };
   void CVideoGrabber::SetAspectRatioToUse (double Value) { _SetAspectRatioToUse (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetAssociateAudioAndVideoDevices () { return _GetAssociateAudioAndVideoDevices (m_VideoGrabber); };
   void CVideoGrabber::SetAssociateAudioAndVideoDevices (BOOL Value) { _SetAssociateAudioAndVideoDevices (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetAVIDurationUpdated () { return _GetAVIDurationUpdated (m_VideoGrabber); };
   void CVideoGrabber::SetAVIDurationUpdated (BOOL Value) { _SetAVIDurationUpdated (m_VideoGrabber, Value); };
   
   TAudioChannelRenderMode CVideoGrabber::GetAudioChannelRenderMode () { return _GetAudioChannelRenderMode (m_VideoGrabber); };
   void CVideoGrabber::SetAudioChannelRenderMode (TAudioChannelRenderMode Value) { _SetAudioChannelRenderMode (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetAudioCompressor () { return _GetAudioCompressor (m_VideoGrabber); };
   void CVideoGrabber::SetAudioCompressor (int Value) { _SetAudioCompressor (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetAudioDevice () { return _GetAudioDevice (m_VideoGrabber); };
   void CVideoGrabber::SetAudioDevice (int Value) { _SetAudioDevice (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetAudioDeviceRendering () { return _GetAudioDeviceRendering (m_VideoGrabber); };
   void CVideoGrabber::SetAudioDeviceRendering (BOOL Value) { _SetAudioDeviceRendering (m_VideoGrabber, Value); };
   
   TAudioFormat CVideoGrabber::GetAudioFormat () { return _GetAudioFormat (m_VideoGrabber); };
   void CVideoGrabber::SetAudioFormat (TAudioFormat Value) { _SetAudioFormat (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetAudioInput () { return _GetAudioInput (m_VideoGrabber); };
   void CVideoGrabber::SetAudioInput (int Value) { _SetAudioInput (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetAudioPeakEvent () { return _GetAudioPeakEvent (m_VideoGrabber); };
   void CVideoGrabber::SetAudioPeakEvent (BOOL Value) { _SetAudioPeakEvent (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetAudioRecording () { return _GetAudioRecording (m_VideoGrabber); };
   void CVideoGrabber::SetAudioRecording (BOOL Value) { _SetAudioRecording (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetAudioRenderer () { return _GetAudioRenderer (m_VideoGrabber); };
   void CVideoGrabber::SetAudioRenderer (int Value) { _SetAudioRenderer (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetAudioStreamNumber () { return _GetAudioStreamNumber (m_VideoGrabber); };
   void CVideoGrabber::SetAudioStreamNumber (int Value) { _SetAudioStreamNumber (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetAudioSyncAdjustmentEnabled () { return _GetAudioSyncAdjustmentEnabled (m_VideoGrabber); };
   void CVideoGrabber::SetAudioSyncAdjustmentEnabled (BOOL Value) { _SetAudioSyncAdjustmentEnabled (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetAudioSyncAdjustment () { return _GetAudioSyncAdjustment (m_VideoGrabber); };
   void CVideoGrabber::SetAudioSyncAdjustment (int Value) { _SetAudioSyncAdjustment (m_VideoGrabber, Value); };
   
   TAudioSource CVideoGrabber::GetAudioSource () { return _GetAudioSource (m_VideoGrabber); };
   void CVideoGrabber::SetAudioSource (TAudioSource Value) { _SetAudioSource (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetAutoConnectRelatedPins () { return _GetAutoConnectRelatedPins (m_VideoGrabber); };
   void CVideoGrabber::SetAutoConnectRelatedPins (BOOL Value) { _SetAutoConnectRelatedPins (m_VideoGrabber, Value); };
   
   TAutoFileName CVideoGrabber::GetAutoFileName () { return _GetAutoFileName (m_VideoGrabber); };
   void CVideoGrabber::SetAutoFileName (TAutoFileName Value) { _SetAutoFileName (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetAutoFileNameDateTimeFormat () { return _GetAutoFileNameDateTimeFormat (m_VideoGrabber); };
   void CVideoGrabber::SetAutoFileNameDateTimeFormat (const wchar_t *Value) { _SetAutoFileNameDateTimeFormat (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetAutoFileNameMinDigits () { return _GetAutoFileNameMinDigits (m_VideoGrabber); };
   void CVideoGrabber::SetAutoFileNameMinDigits (int Value) { _SetAutoFileNameMinDigits (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetAutoFilePrefix () { return _GetAutoFilePrefix (m_VideoGrabber); };
   void CVideoGrabber::SetAutoFilePrefix (const wchar_t *Value) { _SetAutoFilePrefix (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetAutoFileSuffix () { return _GetAutoFileSuffix (m_VideoGrabber); };
   void CVideoGrabber::SetAutoFileSuffix (const wchar_t *Value) { _SetAutoFileSuffix (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetAutoRefreshPreview () { return _GetAutoRefreshPreview (m_VideoGrabber); };
   void CVideoGrabber::SetAutoRefreshPreview (BOOL Value) { _SetAutoRefreshPreview (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetAutoStartPlayer () { return _GetAutoStartPlayer (m_VideoGrabber); };
   void CVideoGrabber::SetAutoStartPlayer (BOOL Value) { _SetAutoStartPlayer (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetAVIFormatOpenDML () { return _GetAVIFormatOpenDML (m_VideoGrabber); };
   void CVideoGrabber::SetAVIFormatOpenDML (BOOL Value) { _SetAVIFormatOpenDML (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetAVIFormatOpenDMLCompatibilityIndex () { return _GetAVIFormatOpenDMLCompatibilityIndex (m_VideoGrabber); };
   void CVideoGrabber::SetAVIFormatOpenDMLCompatibilityIndex (BOOL Value) { _SetAVIFormatOpenDMLCompatibilityIndex (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetBackgroundColor () { return _GetBackgroundColor (m_VideoGrabber); };
   void CVideoGrabber::SetBackgroundColor (int Value) { _SetBackgroundColor (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetBurstCount () { return _GetBurstCount (m_VideoGrabber); };
   void CVideoGrabber::SetBurstCount (int Value) { _SetBurstCount (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetBurstInterval () { return _GetBurstInterval (m_VideoGrabber); };
   void CVideoGrabber::SetBurstInterval (int Value) { _SetBurstInterval (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetBurstMode () { return _GetBurstMode (m_VideoGrabber); };
   void CVideoGrabber::SetBurstMode (BOOL Value) { _SetBurstMode (m_VideoGrabber, Value); };
   
   TFrameCaptureDest CVideoGrabber::GetBurstType () { return _GetBurstType (m_VideoGrabber); };
   void CVideoGrabber::SetBurstType (TFrameCaptureDest Value) { _SetBurstType (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetCameraControlSettings () { return _GetCameraControlSettings (m_VideoGrabber); };
   void CVideoGrabber::SetCameraControlSettings (BOOL Value) { _SetCameraControlSettings (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetCaptureFileExt () { return _GetCaptureFileExt (m_VideoGrabber); };
   void CVideoGrabber::SetCaptureFileExt (const wchar_t *Value) { _SetCaptureFileExt (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetColorKey () { return _GetColorKey (m_VideoGrabber); };
   void CVideoGrabber::SetColorKey (int Value) { _SetColorKey (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetColorKeyEnabled () { return _GetColorKeyEnabled (m_VideoGrabber); };
   void CVideoGrabber::SetColorKeyEnabled (BOOL Value) { _SetColorKeyEnabled (m_VideoGrabber, Value); };
   
   TCompressionMode CVideoGrabber::GetCompressionMode () { return _GetCompressionMode (m_VideoGrabber); };
   void CVideoGrabber::SetCompressionMode (TCompressionMode Value) { _SetCompressionMode (m_VideoGrabber, Value); };
   
   TCompressionType CVideoGrabber::GetCompressionType () { return _GetCompressionType (m_VideoGrabber); };
   void CVideoGrabber::SetCompressionType (TCompressionType Value) { _SetCompressionType (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetDisplay_Active () { return _GetDisplayActive (m_VideoGrabber, 0); };
   void CVideoGrabber::SetDisplay_Active (BOOL Value) { _SetDisplayActive (m_VideoGrabber, 0, Value); };
   
   BOOL CVideoGrabber::GetDisplay_AlphaBlendEnabled () { return _GetDisplayAlphaBlendEnabled (m_VideoGrabber, 0); };
   void CVideoGrabber::SetDisplay_AlphaBlendEnabled (BOOL Value) { _SetDisplayAlphaBlendEnabled (m_VideoGrabber, 0, Value); };
   
   int CVideoGrabber::GetDisplay_AlphaBlendValue () { return _GetDisplayAlphaBlendValue (m_VideoGrabber, 0); };
   void CVideoGrabber::SetDisplay_AlphaBlendValue (int Value) { _SetDisplayAlphaBlendValue (m_VideoGrabber, 0, Value); };
   
   BOOL CVideoGrabber::GetDisplay_AutoSize () { return _GetDisplayAutoSize (m_VideoGrabber, 0); };
   void CVideoGrabber::SetDisplay_AutoSize (BOOL Value) { _SetDisplayAutoSize (m_VideoGrabber, 0, Value); };
   
   TAspectRatio CVideoGrabber::GetDisplay_AspectRatio () { return _GetDisplayAspectRatio (m_VideoGrabber, 0); };
   void CVideoGrabber::SetDisplay_AspectRatio (TAspectRatio Value) { _SetDisplayAspectRatio (m_VideoGrabber, 0, Value); };
   
   BOOL CVideoGrabber::GetDisplay_Embedded () { return _GetDisplayEmbedded (m_VideoGrabber, 0); };
   void CVideoGrabber::SetDisplay_Embedded (BOOL Value) { _SetDisplayEmbedded (m_VideoGrabber, 0, Value); };
   
   BOOL CVideoGrabber::GetDisplay_Embedded_FitParent () { return _GetDisplayEmbedded_FitParent (m_VideoGrabber, 0); };
   void CVideoGrabber::SetDisplay_Embedded_FitParent (BOOL Value) { _SetDisplayEmbedded_FitParent (m_VideoGrabber, 0, Value); };
   
   BOOL CVideoGrabber::GetDisplay_FullScreen () { return _GetDisplayFullScreen (m_VideoGrabber, 0); };
   void CVideoGrabber::SetDisplay_FullScreen (BOOL Value) { _SetDisplayFullScreen (m_VideoGrabber, 0, Value); };
   
   int CVideoGrabber::GetDisplay_Height () { return _GetDisplayHeight (m_VideoGrabber, 0); };
   void CVideoGrabber::SetDisplay_Height (int Value) { _SetDisplayHeight (m_VideoGrabber, 0, Value); };
   
   int CVideoGrabber::GetDisplay_Left () { return _GetDisplayLeft (m_VideoGrabber, 0); };
   void CVideoGrabber::SetDisplay_Left (int Value) { _SetDisplayLeft (m_VideoGrabber, 0, Value); };
   
   int CVideoGrabber::GetDisplay_Monitor () { return _GetDisplayMonitor (m_VideoGrabber, 0); };
   void CVideoGrabber::SetDisplay_Monitor (int Value) { _SetDisplayMonitor (m_VideoGrabber, 0, Value); };
   
   BOOL CVideoGrabber::GetDisplay_MouseMovesWindow () { return _GetDisplayMouseMovesWindow (m_VideoGrabber, 0); };
   void CVideoGrabber::SetDisplay_MouseMovesWindow (BOOL Value) { _SetDisplayMouseMovesWindow (m_VideoGrabber, 0, Value); };
   
   int CVideoGrabber::GetDisplay_PanScanRatio () { return _GetDisplayPanScanRatio (m_VideoGrabber, 0); };
   void CVideoGrabber::SetDisplay_PanScanRatio (int Value) { _SetDisplayPanScanRatio (m_VideoGrabber, 0, Value); };
   
   BOOL CVideoGrabber::GetDisplay_StayOnTop () { return _GetDisplayStayOnTop (m_VideoGrabber, 0); };
   void CVideoGrabber::SetDisplay_StayOnTop (BOOL Value) { _SetDisplayStayOnTop (m_VideoGrabber, 0, Value); };
   
   int CVideoGrabber::GetDisplay_Top () { return _GetDisplayTop (m_VideoGrabber, 0); };
   void CVideoGrabber::SetDisplay_Top (int Value) { _SetDisplayTop (m_VideoGrabber, 0, Value); };
   
   BOOL CVideoGrabber::GetDisplay_TransparentColorEnabled () { return _GetDisplayTransparentColorEnabled (m_VideoGrabber, 0); };
   void CVideoGrabber::SetDisplay_TransparentColorEnabled (BOOL Value) { _SetDisplayTransparentColorEnabled (m_VideoGrabber, 0, Value); };
   
   int CVideoGrabber::GetDisplay_TransparentColorValue () { return _GetDisplayTransparentColorValue (m_VideoGrabber, 0); };
   void CVideoGrabber::SetDisplay_TransparentColorValue (int Value) { _SetDisplayTransparentColorValue (m_VideoGrabber, 0, Value); };
   
   BOOL CVideoGrabber::GetDisplay_VideoPortEnabled () { return _GetDisplayVideoPortEnabled (m_VideoGrabber, 0); };
   void CVideoGrabber::SetDisplay_VideoPortEnabled (BOOL Value) { _SetDisplayVideoPortEnabled (m_VideoGrabber, 0, Value); };
   
   BOOL CVideoGrabber::GetDisplay_Visible () { return _GetDisplayVisible (m_VideoGrabber, 0); };
   void CVideoGrabber::SetDisplay_Visible (BOOL Value) { _SetDisplayVisible (m_VideoGrabber, 0, Value); };
   
   int CVideoGrabber::GetDisplay_Width () { return _GetDisplayWidth (m_VideoGrabber, 0); };
   void CVideoGrabber::SetDisplay_Width (int Value) { _SetDisplayWidth (m_VideoGrabber, 0, Value); };
   
   BOOL CVideoGrabber::GetDoubleBuffered () { return _GetVideoDoubleBuffered (m_VideoGrabber); };
   void CVideoGrabber::SetDoubleBuffered (BOOL Value) { _SetVideoDoubleBuffered (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetDroppedFramesPollingInterval () { return _GetDroppedFramesPollingInterval (m_VideoGrabber); };
   void CVideoGrabber::SetDroppedFramesPollingInterval (int Value) { _SetDroppedFramesPollingInterval (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetDualDisplay_Active () { return _GetDisplayActive (m_VideoGrabber, 1); };
   void CVideoGrabber::SetDualDisplay_Active (BOOL Value) { _SetDisplayActive (m_VideoGrabber, 1, Value); };
   
   BOOL CVideoGrabber::GetDualDisplay_AlphaBlendEnabled () { return _GetDisplayAlphaBlendEnabled (m_VideoGrabber, 1); };
   void CVideoGrabber::SetDualDisplay_AlphaBlendEnabled (BOOL Value) { _SetDisplayAlphaBlendEnabled (m_VideoGrabber, 1, Value); };
   
   int CVideoGrabber::GetDualDisplay_AlphaBlendValue () { return _GetDisplayAlphaBlendValue (m_VideoGrabber, 1); };
   void CVideoGrabber::SetDualDisplay_AlphaBlendValue (int Value) { _SetDisplayAlphaBlendValue (m_VideoGrabber, 1, Value); };
   
   BOOL CVideoGrabber::GetDualDisplay_AutoSize () { return _GetDisplayAutoSize (m_VideoGrabber, 1); };
   void CVideoGrabber::SetDualDisplay_AutoSize (BOOL Value) { _SetDisplayAutoSize (m_VideoGrabber, 1, Value); };
   
   TAspectRatio CVideoGrabber::GetDualDisplay_AspectRatio () { return _GetDisplayAspectRatio (m_VideoGrabber, 1); };
   void CVideoGrabber::SetDualDisplay_AspectRatio (TAspectRatio Value) { _SetDisplayAspectRatio (m_VideoGrabber, 1, Value); };
   
   BOOL CVideoGrabber::GetDualDisplay_Embedded () { return _GetDisplayEmbedded (m_VideoGrabber, 1); };
   void CVideoGrabber::SetDualDisplay_Embedded (BOOL Value) { _SetDisplayEmbedded (m_VideoGrabber, 1, Value); };
   
   BOOL CVideoGrabber::GetDualDisplay_Embedded_FitParent () { return _GetDisplayEmbedded_FitParent (m_VideoGrabber, 1); };
   void CVideoGrabber::SetDualDisplay_Embedded_FitParent (BOOL Value) { _SetDisplayEmbedded_FitParent (m_VideoGrabber, 1, Value); };
   
   BOOL CVideoGrabber::GetDualDisplay_FullScreen () { return _GetDisplayFullScreen (m_VideoGrabber, 1); };
   void CVideoGrabber::SetDualDisplay_FullScreen (BOOL Value) { _SetDisplayFullScreen (m_VideoGrabber, 1, Value); };
   
   int CVideoGrabber::GetDualDisplay_Height () { return _GetDisplayHeight (m_VideoGrabber, 1); };
   void CVideoGrabber::SetDualDisplay_Height (int Value) { _SetDisplayHeight (m_VideoGrabber, 1, Value); };
   
   int CVideoGrabber::GetDualDisplay_Left () { return _GetDisplayLeft (m_VideoGrabber, 1); };
   void CVideoGrabber::SetDualDisplay_Left (int Value) { _SetDisplayLeft (m_VideoGrabber, 1, Value); };
   
   int CVideoGrabber::GetDualDisplay_Monitor () { return _GetDisplayMonitor (m_VideoGrabber, 1); };
   void CVideoGrabber::SetDualDisplay_Monitor (int Value) { _SetDisplayMonitor (m_VideoGrabber, 1, Value); };
   
   BOOL CVideoGrabber::GetDualDisplay_MouseMovesWindow () { return _GetDisplayMouseMovesWindow (m_VideoGrabber, 1); };
   void CVideoGrabber::SetDualDisplay_MouseMovesWindow (BOOL Value) { _SetDisplayMouseMovesWindow (m_VideoGrabber, 1, Value); };
   
   int CVideoGrabber::GetDualDisplay_PanScanRatio () { return _GetDisplayPanScanRatio (m_VideoGrabber, 1); };
   void CVideoGrabber::SetDualDisplay_PanScanRatio (int Value) { _SetDisplayPanScanRatio (m_VideoGrabber, 1, Value); };
   
   BOOL CVideoGrabber::GetDualDisplay_StayOnTop () { return _GetDisplayStayOnTop (m_VideoGrabber, 1); };
   void CVideoGrabber::SetDualDisplay_StayOnTop (BOOL Value) { _SetDisplayStayOnTop (m_VideoGrabber, 1, Value); };
   
   int CVideoGrabber::GetDualDisplay_Top () { return _GetDisplayTop (m_VideoGrabber, 1); };
   void CVideoGrabber::SetDualDisplay_Top (int Value) { _SetDisplayTop (m_VideoGrabber, 1, Value); };
   
   BOOL CVideoGrabber::GetDualDisplay_TransparentColorEnabled () { return _GetDisplayTransparentColorEnabled (m_VideoGrabber, 1); };
   void CVideoGrabber::SetDualDisplay_TransparentColorEnabled (BOOL Value) { _SetDisplayTransparentColorEnabled (m_VideoGrabber, 1, Value); };
   
   int CVideoGrabber::GetDualDisplay_TransparentColorValue () { return _GetDisplayTransparentColorValue (m_VideoGrabber, 1); };
   void CVideoGrabber::SetDualDisplay_TransparentColorValue (int Value) { _SetDisplayTransparentColorValue (m_VideoGrabber, 1, Value); };
   
   BOOL CVideoGrabber::GetDualDisplay_VideoPortEnabled () { return _GetDisplayVideoPortEnabled (m_VideoGrabber, 1); };
   void CVideoGrabber::SetDualDisplay_VideoPortEnabled (BOOL Value) { _SetDisplayVideoPortEnabled (m_VideoGrabber, 1, Value); };
   
   BOOL CVideoGrabber::GetDualDisplay_Visible () { return _GetDisplayVisible (m_VideoGrabber, 1); };
   void CVideoGrabber::SetDualDisplay_Visible (BOOL Value) { _SetDisplayVisible (m_VideoGrabber, 1, Value); };
   
   int CVideoGrabber::GetDualDisplay_Width () { return _GetDisplayWidth (m_VideoGrabber, 1); };
   void CVideoGrabber::SetDualDisplay_Width (int Value) { _SetDisplayWidth (m_VideoGrabber, 1, Value); };
   
   BOOL CVideoGrabber::GetDVDateTimeEnabled () { return _GetDVDateTimeEnabled (m_VideoGrabber); };
   void CVideoGrabber::SetDVDateTimeEnabled (BOOL Value) { _SetDVDateTimeEnabled (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetDVDTitle () { return _GetDVDTitle (m_VideoGrabber); };
   void CVideoGrabber::SetDVDTitle (int Value) { _SetDVDTitle (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetDVDiscontinuityMinimumInterval () { return _GetDVDiscontinuityMinimumInterval (m_VideoGrabber); };
   void CVideoGrabber::SetDVDiscontinuityMinimumInterval (int Value) { _SetDVDiscontinuityMinimumInterval (m_VideoGrabber, Value); };
   
   TDVVideoFormat CVideoGrabber::GetDVEncoder_VideoFormat () { return _GetDVEncoder_VideoFormat (m_VideoGrabber); };
   void CVideoGrabber::SetDVEncoder_VideoFormat (TDVVideoFormat Value) { _SetDVEncoder_VideoFormat (m_VideoGrabber, Value); };
   
   TDVSize CVideoGrabber::GetDVEncoder_VideoResolution () { return _GetDVEncoder_VideoResolution (m_VideoGrabber); };
   void CVideoGrabber::SetDVEncoder_VideoResolution (TDVSize Value) { _SetDVEncoder_VideoResolution (m_VideoGrabber, Value); };
   
   TDVVideoStandard CVideoGrabber::GetDVEncoder_VideoStandard () { return _GetDVEncoder_VideoStandard (m_VideoGrabber); };
   void CVideoGrabber::SetDVEncoder_VideoStandard (TDVVideoStandard Value) { _SetDVEncoder_VideoStandard (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetDVRgb219 () { return _GetDVRgb219 (m_VideoGrabber); };
   void CVideoGrabber::SetDVRgb219 (BOOL Value) { _SetDVRgb219 (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetDVReduceFrameRate () { return _GetDVReduceFrameRate (m_VideoGrabber); };
   void CVideoGrabber::SetDVReduceFrameRate (BOOL Value) { _SetDVReduceFrameRate (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetDVRecordingInNativeFormatSeparatesStreams () { return _GetDVRecordingInNativeFormatSeparatesStreams (m_VideoGrabber); };
   void CVideoGrabber::SetDVRecordingInNativeFormatSeparatesStreams (BOOL Value) { _SetDVRecordingInNativeFormatSeparatesStreams (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetDVTimeCodeEnabled () { return _GetDVTimeCodeEnabled (m_VideoGrabber); };
   void CVideoGrabber::SetDVTimeCodeEnabled (BOOL Value) { _SetDVTimeCodeEnabled (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetExtraDLLPath () { return _GetExtraDLLPath (m_VideoGrabber); };
   void CVideoGrabber::SetExtraDLLPath (const wchar_t *Value) { _SetExtraDLLPath (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetEventNotificationSynchrone () { return _GetEventNotificationSynchrone (m_VideoGrabber); };
   void CVideoGrabber::SetEventNotificationSynchrone (BOOL Value) { _SetEventNotificationSynchrone (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetCropping_Enabled () { return _GetCropping_Enabled (m_VideoGrabber); };
   void CVideoGrabber::SetCropping_Enabled (BOOL Value) { _SetCropping_Enabled (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetCropping_Height () { return _GetCropping_Height (m_VideoGrabber); };
   void CVideoGrabber::SetCropping_Height (int Value) { _SetCropping_Height (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetCropping_Outbounds () { return _GetCropping_Outbounds (m_VideoGrabber); };
   void CVideoGrabber::SetCropping_Outbounds (BOOL Value) { _SetCropping_Outbounds (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetCropping_Width () { return _GetCropping_Width (m_VideoGrabber); };
   void CVideoGrabber::SetCropping_Width (int Value) { _SetCropping_Width (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetCropping_X () { return _GetCropping_X (m_VideoGrabber); };
   void CVideoGrabber::SetCropping_X (int Value) { _SetCropping_X (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetCropping_Y () { return _GetCropping_Y (m_VideoGrabber); };
   void CVideoGrabber::SetCropping_Y (int Value) { _SetCropping_Y (m_VideoGrabber, Value); };
   
   double CVideoGrabber::GetCropping_Zoom () { return _GetCropping_Zoom (m_VideoGrabber); };
   void CVideoGrabber::SetCropping_Zoom (double Value) { _SetCropping_Zoom (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetFixFlickerOrBlackCapture () { return _GetFixFlickerOrBlackCapture (m_VideoGrabber); };
   void CVideoGrabber::SetFixFlickerOrBlackCapture (BOOL Value) { _SetFixFlickerOrBlackCapture (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetFrameCaptureWithoutOverlay () { return _GetFrameCaptureWithoutOverlay (m_VideoGrabber); };
   void CVideoGrabber::SetFrameCaptureWithoutOverlay (BOOL Value) { _SetFrameCaptureWithoutOverlay (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetFrameCaptureHeight () { return _GetFrameCaptureHeight (m_VideoGrabber); };
   void CVideoGrabber::SetFrameCaptureHeight (int Value) { _SetFrameCaptureHeight (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetFrameCaptureWidth () { return _GetFrameCaptureWidth (m_VideoGrabber); };
   void CVideoGrabber::SetFrameCaptureWidth (int Value) { _SetFrameCaptureWidth (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetFrameCaptureZoomSize () { return _GetFrameCaptureZoomSize (m_VideoGrabber); };
   void CVideoGrabber::SetFrameCaptureZoomSize (int Value) { _SetFrameCaptureZoomSize (m_VideoGrabber, Value); };
   
   TFrameGrabber CVideoGrabber::GetFrameGrabber () { return _GetFrameGrabber (m_VideoGrabber); };
   void CVideoGrabber::SetFrameGrabber (TFrameGrabber Value) { _SetFrameGrabber (m_VideoGrabber, Value); };
   
   TFrameGrabberRGBFormat CVideoGrabber::GetFrameGrabberRGBFormat () { return _GetFrameGrabberRGBFormat (m_VideoGrabber); };
   void CVideoGrabber::SetFrameGrabberRGBFormat (TFrameGrabberRGBFormat Value) { _SetFrameGrabberRGBFormat (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetFrameNumberStartsFromZero () { return _GetFrameNumberStartsFromZero (m_VideoGrabber); };
   void CVideoGrabber::SetFrameNumberStartsFromZero (BOOL Value) { _SetFrameNumberStartsFromZero (m_VideoGrabber, Value); };
   
   double CVideoGrabber::GetFrameRate () { return _GetFrameRate (m_VideoGrabber); };
   void CVideoGrabber::SetFrameRate (double Value) { _SetFrameRate (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetFrameRateDivider () { return _GetFrameRateDivider (m_VideoGrabber); };
   void CVideoGrabber::SetFrameRateDivider (int Value) { _SetFrameRateDivider (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetGetLastFrameWaitTimeoutMs () { return _GetGetLastFrameWaitTimeoutMs (m_VideoGrabber); };
   void CVideoGrabber::SetGetLastFrameWaitTimeoutMs (int Value) { _SetGetLastFrameWaitTimeoutMs (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetImageOverlayEnabled () { return _GetImageOverlayEnabled (m_VideoGrabber); };
   void CVideoGrabber::SetImageOverlayEnabled (BOOL Value) { _SetImageOverlayEnabled (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetImageOverlay_AlphaBlend () { return _GetImageOverlayAlphaBlend (m_VideoGrabber); };
   void CVideoGrabber::SetImageOverlay_AlphaBlend (BOOL Value) { _SetImageOverlayAlphaBlend (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetImageOverlay_AlphaBlendValue () { return _GetImageOverlayAlphaBlendValue (m_VideoGrabber); };
   void CVideoGrabber::SetImageOverlay_AlphaBlendValue (int Value) { _SetImageOverlayAlphaBlendValue (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetImageOverlay_ChromaKey () { return _GetImageOverlayChromaKey (m_VideoGrabber); };
   void CVideoGrabber::SetImageOverlay_ChromaKey (BOOL Value) { _SetImageOverlayChromaKey (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetImageOverlay_ChromaKeyLeewayPercent () { return _GetImageOverlayChromaKeyLeewayPercent (m_VideoGrabber); };
   void CVideoGrabber::SetImageOverlay_ChromaKeyLeewayPercent (int Value) { _SetImageOverlayChromaKeyLeewayPercent (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetImageOverlay_ChromaKeyRGBColor () { return _GetImageOverlayChromaKeyRGBColor (m_VideoGrabber); };
   void CVideoGrabber::SetImageOverlay_ChromaKeyRGBColor (int Value) { _SetImageOverlayChromaKeyRGBColor (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetImageOverlay_Height () { return _GetImageOverlayHeight (m_VideoGrabber); };
   void CVideoGrabber::SetImageOverlay_Height (int Value) { _SetImageOverlayHeight (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetImageOverlay_LeftLocation () { return _GetImageOverlayLeftLocation (m_VideoGrabber); };
   void CVideoGrabber::SetImageOverlay_LeftLocation (int Value) { _SetImageOverlayLeftLocation (m_VideoGrabber, Value); };
   
   TVideoAlignment CVideoGrabber::GetImageOverlay_VideoAlignment () { return _GetImageOverlayVideoAlignment (m_VideoGrabber); };
   void CVideoGrabber::SetImageOverlay_VideoAlignment (TVideoAlignment Value) { _SetImageOverlayVideoAlignment (m_VideoGrabber, Value); };
   
   double CVideoGrabber::GetImageOverlay_RotationAngle () { return _GetImageOverlayRotationAngle (m_VideoGrabber); };
   void CVideoGrabber::SetImageOverlay_RotationAngle (double Value) { _SetImageOverlayRotationAngle (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetImageOverlay_StretchToVideoSize () { return _GetImageOverlayStretchToVideoSize (m_VideoGrabber); };
   void CVideoGrabber::SetImageOverlay_StretchToVideoSize (BOOL Value) { _SetImageOverlayStretchToVideoSize (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetImageOverlay_TopLocation () { return _GetImageOverlayTopLocation (m_VideoGrabber); };
   void CVideoGrabber::SetImageOverlay_TopLocation (int Value) { _SetImageOverlayTopLocation (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetImageOverlay_Transparent () { return _GetImageOverlayTransparent (m_VideoGrabber); };
   void CVideoGrabber::SetImageOverlay_Transparent (BOOL Value) { _SetImageOverlayTransparent (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetImageOverlay_TransparentColorValue () { return _GetImageOverlayTransparentColorValue (m_VideoGrabber); };
   void CVideoGrabber::SetImageOverlay_TransparentColorValue (int Value) { _SetImageOverlayTransparentColorValue (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetImageOverlay_UseTransparentColor () { return _GetImageOverlayUseTransparentColor (m_VideoGrabber); };
   void CVideoGrabber::SetImageOverlay_UseTransparentColor (BOOL Value) { _SetImageOverlayUseTransparentColor (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetImageOverlay_Width () { return _GetImageOverlayWidth (m_VideoGrabber); };
   void CVideoGrabber::SetImageOverlay_Width (int Value) { _SetImageOverlayWidth (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetImageOverlay_TargetDisplay () { return _GetImageOverlayTargetDisplay (m_VideoGrabber); };
   void CVideoGrabber::SetImageOverlay_TargetDisplay (int Value) { _SetImageOverlayTargetDisplay (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetIPCameraURL () { return _GetIPCameraURL (m_VideoGrabber); };
   void CVideoGrabber::SetIPCameraURL (const wchar_t *Value) { _SetIPCameraURL (m_VideoGrabber, Value); };
   
   TJPEGPerformance CVideoGrabber::GetJPEGPerformance () { return _GetJPEGPerformance (m_VideoGrabber); };
   void CVideoGrabber::SetJPEGPerformance (TJPEGPerformance Value) { _SetJPEGPerformance (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetJPEGProgressiveDisplay () { return _GetJPEGProgressiveDisplay (m_VideoGrabber); };
   void CVideoGrabber::SetJPEGProgressiveDisplay (BOOL Value) { _SetJPEGProgressiveDisplay (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetJPEGQuality () { return _GetJPEGQuality (m_VideoGrabber); };
   void CVideoGrabber::SetJPEGQuality (int Value) { _SetJPEGQuality (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetLicenseString () { return _GetLicenseString (m_VideoGrabber); };
   void CVideoGrabber::SetLicenseString (const wchar_t *Value) { _SetLicenseString (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetLogoDisplayed () { return _GetLogoDisplayed (m_VideoGrabber); };
   void CVideoGrabber::SetLogoDisplayed (BOOL Value) { _SetLogoDisplayed (m_VideoGrabber, Value); };
   
   TLogoLayout CVideoGrabber::GetLogoLayout () { return _GetLogoLayout (m_VideoGrabber); };
   void CVideoGrabber::SetLogoLayout (TLogoLayout Value) { _SetLogoLayout (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetMixAudioSamples_CurrentSourceLevel () { return _GetMixAudioSamplesLevel (m_VideoGrabber, 0); };
   void CVideoGrabber::SetMixAudioSamples_CurrentSourceLevel (int Value) { _SetMixAudioSamplesLevel (m_VideoGrabber, 0, Value); };
   
   int CVideoGrabber::GetMixAudioSamples_ExternalSourceLevel () { return _GetMixAudioSamplesLevel (m_VideoGrabber, 1); };
   void CVideoGrabber::SetMixAudioSamples_ExternalSourceLevel (int Value) { _SetMixAudioSamplesLevel (m_VideoGrabber, 1, Value); };
   
   int CVideoGrabber::GetMixer_MosaicColumns () { return _GetMixer_MosaicColumns (m_VideoGrabber); };
   void CVideoGrabber::SetMixer_MosaicColumns (int Value) { _SetMixer_MosaicColumns (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetMixer_MosaicLines () { return _GetMixer_MosaicLines (m_VideoGrabber); };
   void CVideoGrabber::SetMixer_MosaicLines (int Value) { _SetMixer_MosaicLines (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetMotionDetector_CompareBlue () { return _GetMotionDetector_CompareBlue (m_VideoGrabber); };
   void CVideoGrabber::SetMotionDetector_CompareBlue (BOOL Value) { _SetMotionDetector_CompareBlue (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetMotionDetector_CompareGreen () { return _GetMotionDetector_CompareGreen (m_VideoGrabber); };
   void CVideoGrabber::SetMotionDetector_CompareGreen (BOOL Value) { _SetMotionDetector_CompareGreen (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetMotionDetector_GreyScale () { return _GetMotionDetector_GreyScale (m_VideoGrabber); };
   void CVideoGrabber::SetMotionDetector_GreyScale (BOOL Value) { _SetMotionDetector_GreyScale (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetMotionDetector_CompareRed () { return _GetMotionDetector_CompareRed (m_VideoGrabber); };
   void CVideoGrabber::SetMotionDetector_CompareRed (BOOL Value) { _SetMotionDetector_CompareRed (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetMotionDetector_Enabled () { return _GetMotionDetector_Enabled (m_VideoGrabber); };
   void CVideoGrabber::SetMotionDetector_Enabled (BOOL Value) { _SetMotionDetector_Enabled (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetMotionDetector_Grid () { return _GetMotionDetector_Grid (m_VideoGrabber); };
   void CVideoGrabber::SetMotionDetector_Grid (const wchar_t *Value) { _SetMotionDetector_Grid (m_VideoGrabber, Value); };
   
   double CVideoGrabber::GetMotionDetector_MaxDetectionsPerSecond () { return _GetMotionDetector_MaxDetectionsPerSecond (m_VideoGrabber); };
   void CVideoGrabber::SetMotionDetector_MaxDetectionsPerSecond (double Value) { _SetMotionDetector_MaxDetectionsPerSecond (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetMotionDetector_ReduceCPULoad () { return _GetMotionDetector_ReduceCPULoad (m_VideoGrabber); };
   void CVideoGrabber::SetMotionDetector_ReduceCPULoad (int Value) { _SetMotionDetector_ReduceCPULoad (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetMotionDetector_MotionResetMs () { return _GetMotionDetector_MotionResetMs (m_VideoGrabber); };
   void CVideoGrabber::SetMotionDetector_MotionResetMs (int Value) { _SetMotionDetector_MotionResetMs (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetMotionDetector_ReduceVideoNoise () { return _GetMotionDetector_ReduceVideoNoise (m_VideoGrabber); };
   void CVideoGrabber::SetMotionDetector_ReduceVideoNoise (BOOL Value) { _SetMotionDetector_ReduceVideoNoise (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetMotionDetector_Triggered () { return _GetMotionDetector_Triggered (m_VideoGrabber); };
   void CVideoGrabber::SetMotionDetector_Triggered (BOOL Value) { _SetMotionDetector_Triggered (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetMouseWheelEventEnabled () { return _GetMouseWheelEventEnabled (m_VideoGrabber); };
   void CVideoGrabber::SetMouseWheelEventEnabled (BOOL Value) { _SetMouseWheelEventEnabled (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetMouseWheelControlsZoomAtCursor () { return _GetMouseWheelControlsZoomAtCursor (m_VideoGrabber); };
   void CVideoGrabber::SetMouseWheelControlsZoomAtCursor (BOOL Value) { _SetMouseWheelControlsZoomAtCursor (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetMultiplexedInputEmulation () { return _GetMultiplexedInputEmulation (m_VideoGrabber); };
   void CVideoGrabber::SetMultiplexedInputEmulation (BOOL Value) { _SetMultiplexedInputEmulation (m_VideoGrabber, Value); };
   
   TMultiplexedRole CVideoGrabber::GetMultiplexedRole () { return _GetMultiplexedRole (m_VideoGrabber); };
   void CVideoGrabber::SetMultiplexedRole (TMultiplexedRole Value) { _SetMultiplexedRole (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetMultiplexedSwitchDelay () { return _GetMultiplexedSwitchDelay (m_VideoGrabber); };
   void CVideoGrabber::SetMultiplexedSwitchDelay (int Value) { _SetMultiplexedSwitchDelay (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetMultiplexedStabilizationDelay () { return _GetMultiplexedStabilizationDelay (m_VideoGrabber); };
   void CVideoGrabber::SetMultiplexedStabilizationDelay (int Value) { _SetMultiplexedStabilizationDelay (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetMultiplexer () { return _GetMultiplexer (m_VideoGrabber); };
   void CVideoGrabber::SetMultiplexer (int Value) { _SetMultiplexer (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetMuteAudioRendering () { return _GetMuteAudioRendering (m_VideoGrabber); };
   void CVideoGrabber::SetMuteAudioRendering (BOOL Value) { _SetMuteAudioRendering (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetName () { return _GetName (m_VideoGrabber); };
   void CVideoGrabber::SetName (const wchar_t *Value) { _SetName (m_VideoGrabber, Value); };
   
   TNDIBandwidthType CVideoGrabber::GetNDIBandwidthType () { return _GetNDIBandwidthType (m_VideoGrabber); };
   void CVideoGrabber::SetNDIBandwidthType (TNDIBandwidthType Value) { _SetNDIBandwidthType (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetNDIGroups () { return _GetNDIGroups (m_VideoGrabber); };
   void CVideoGrabber::SetNDIGroups (const wchar_t *Value) { _SetNDIGroups (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetNDIName () { return _GetNDIName (m_VideoGrabber); };
   void CVideoGrabber::SetNDIName (const wchar_t *Value) { _SetNDIName (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetNDIReceiveTimeoutMs () { return _GetNDIReceiveTimeoutMs (m_VideoGrabber); };
   void CVideoGrabber::SetNDIReceiveTimeoutMs (int Value) { _SetNDIReceiveTimeoutMs (m_VideoGrabber, Value); };
   
   TNetworkStreaming CVideoGrabber::GetNetworkStreaming () { return _GetNetworkStreaming (m_VideoGrabber); };
   void CVideoGrabber::SetNetworkStreaming (TNetworkStreaming Value) { _SetNetworkStreaming (m_VideoGrabber, Value); };
   
   TNetworkStreamingType CVideoGrabber::GetNetworkStreamingType () { return _GetNetworkStreamingType (m_VideoGrabber); };
   void CVideoGrabber::SetNetworkStreamingType (TNetworkStreamingType Value) { _SetNetworkStreamingType (m_VideoGrabber, Value); };
   
   TNotificationMethod CVideoGrabber::GetNotificationMethod () { return _GetNotificationMethod (m_VideoGrabber); };
   void CVideoGrabber::SetNotificationMethod (TNotificationMethod Value) { _SetNotificationMethod (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetNotificationSleepTime () { return _GetNotificationSleepTime (m_VideoGrabber); };
   void CVideoGrabber::SetNotificationSleepTime (int Value) { _SetNotificationSleepTime (m_VideoGrabber, Value); };
   
   TThreadPriority CVideoGrabber::GetNotificationPriority () { return _GetNotificationPriority (m_VideoGrabber); };
   void CVideoGrabber::SetNotificationPriority (TThreadPriority Value) { _SetNotificationPriority (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetOnFrameBitmapEventSynchrone () { return _GetOnFrameBitmapEventSynchrone (m_VideoGrabber); };
   void CVideoGrabber::SetOnFrameBitmapEventSynchrone (BOOL Value) { _SetOnFrameBitmapEventSynchrone (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetOpenURLAsync () { return _GetOpenURLAsync (m_VideoGrabber); };
   void CVideoGrabber::SetOpenURLAsync (BOOL Value) { _SetOpenURLAsync (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetOverlayAfterTransform () { return _GetOverlayAfterTransform (m_VideoGrabber); };
   void CVideoGrabber::SetOverlayAfterTransform (BOOL Value) { _SetOverlayAfterTransform (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetPlayerAudioRendering () { return _GetPlayerAudioRendering (m_VideoGrabber); };
   void CVideoGrabber::SetPlayerAudioRendering (BOOL Value) { _SetPlayerAudioRendering (m_VideoGrabber, Value); };
   
   TDVSize CVideoGrabber::GetPlayerDVSize () { return _GetPlayerDVSize (m_VideoGrabber); };
   void CVideoGrabber::SetPlayerDVSize (TDVSize Value) { _SetPlayerDVSize (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetPlayerFastSeekSpeedRatio () { return _GetPlayerFastSeekSpeedRatio (m_VideoGrabber); };
   void CVideoGrabber::SetPlayerFastSeekSpeedRatio (int Value) { _SetPlayerFastSeekSpeedRatio (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetPlayerFileName () { return _GetPlayerFileName (m_VideoGrabber); };
   void CVideoGrabber::SetPlayerFileName (const wchar_t *Value) { _SetPlayerFileName (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetPlayerForcedCodec () { return _GetPlayerForcedCodec (m_VideoGrabber); };
   void CVideoGrabber::SetPlayerForcedCodec (const wchar_t *Value) { _SetPlayerForcedCodec (m_VideoGrabber, Value); };
   
   THwAccel CVideoGrabber::GetPlayerHwAccel () { return _GetPlayerHwAccel (m_VideoGrabber); };
   void CVideoGrabber::SetPlayerHwAccel (THwAccel Value) { _SetPlayerHwAccel (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetPlayerRefreshPausedDisplay () { return _GetPlayerRefreshPausedDisplay (m_VideoGrabber); };
   void CVideoGrabber::SetPlayerRefreshPausedDisplay (BOOL Value) { _SetPlayerRefreshPausedDisplay (m_VideoGrabber, Value); };
   
   double CVideoGrabber::GetPlayerRefreshPausedDisplayFrameRate () { return _GetPlayerRefreshPausedDisplayFrameRate (m_VideoGrabber); };
   void CVideoGrabber::SetPlayerRefreshPausedDisplayFrameRate (double Value) { _SetPlayerRefreshPausedDisplayFrameRate (m_VideoGrabber, Value); };
   
   double CVideoGrabber::GetPlayerSpeedRatio () { return _GetPlayerSpeedRatio (m_VideoGrabber); };
   void CVideoGrabber::SetPlayerSpeedRatio (double Value) { _SetPlayerSpeedRatio (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetPlayerSpeedRatioConstantAudioPitch () { return _GetPlayerSpeedRatioConstantAudioPitch (m_VideoGrabber); };
   void CVideoGrabber::SetPlayerSpeedRatioConstantAudioPitch (BOOL Value) { _SetPlayerSpeedRatioConstantAudioPitch (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetPlayerTrackBarSynchrone () { return _GetPlayerTrackBarSynchrone (m_VideoGrabber); };
   void CVideoGrabber::SetPlayerTrackBarSynchrone (BOOL Value) { _SetPlayerTrackBarSynchrone (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetPreallocCapFileCopiedAfterRecording () { return _GetPreallocCapFileCopiedAfterRecording (m_VideoGrabber); };
   void CVideoGrabber::SetPreallocCapFileCopiedAfterRecording (BOOL Value) { _SetPreallocCapFileCopiedAfterRecording (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetPreallocCapFileEnabled () { return _GetPreallocCapFileEnabled (m_VideoGrabber); };
   void CVideoGrabber::SetPreallocCapFileEnabled (BOOL Value) { _SetPreallocCapFileEnabled (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetPreallocCapFileName () { return _GetPreallocCapFileName (m_VideoGrabber); };
   void CVideoGrabber::SetPreallocCapFileName (const wchar_t *Value) { _SetPreallocCapFileName (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetPreallocCapFileSizeInMB () { return _GetPreallocCapFileSizeInMB (m_VideoGrabber); };
   void CVideoGrabber::SetPreallocCapFileSizeInMB (int Value) { _SetPreallocCapFileSizeInMB (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetPreviewZoomSize () { return _GetPreviewZoomSize (m_VideoGrabber); };
   void CVideoGrabber::SetPreviewZoomSize (int Value) { _SetPreviewZoomSize (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetRecordingAudioBitRate () { return _GetRecordingAudioBitRate (m_VideoGrabber); };
   void CVideoGrabber::SetRecordingAudioBitRate (int Value) { _SetRecordingAudioBitRate (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetRecordingVideoBitRate () { return _GetRecordingVideoBitRate (m_VideoGrabber); };
   void CVideoGrabber::SetRecordingVideoBitRate (int Value) { _SetRecordingVideoBitRate (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetRecordingFileName () { return _GetRecordingFileName (m_VideoGrabber); };
   void CVideoGrabber::SetRecordingFileName (const wchar_t *Value) { _SetRecordingFileName (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetRecordingFileSizeMaxInMB () { return _GetRecordingFileSizeMaxInMB (m_VideoGrabber); };
   void CVideoGrabber::SetRecordingFileSizeMaxInMB (int Value) { _SetRecordingFileSizeMaxInMB (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetRecordingInNativeFormat () { return _GetRecordingInNativeFormat (m_VideoGrabber); };
   void CVideoGrabber::SetRecordingInNativeFormat (BOOL Value) { _SetRecordingInNativeFormat (m_VideoGrabber, Value); };
   
   TRecordingMethod CVideoGrabber::GetRecordingMethod () { return _GetRecordingMethod (m_VideoGrabber); };
   void CVideoGrabber::SetRecordingMethod (TRecordingMethod Value) { _SetRecordingMethod (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetRecordingPauseCreatesNewFile () { return _GetRecordingPauseCreatesNewFile (m_VideoGrabber); };
   void CVideoGrabber::SetRecordingPauseCreatesNewFile (BOOL Value) { _SetRecordingPauseCreatesNewFile (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetRecordingOnMotion_Enabled () { return _GetRecordingOnMotion_Enabled (m_VideoGrabber); };
   void CVideoGrabber::SetRecordingOnMotion_Enabled (BOOL Value) { _SetRecordingOnMotion_Enabled (m_VideoGrabber, Value); };
   
   double CVideoGrabber::GetRecordingOnMotion_MotionThreshold () { return _GetRecordingOnMotion_MotionThreshold (m_VideoGrabber); };
   void CVideoGrabber::SetRecordingOnMotion_MotionThreshold (double Value) { _SetRecordingOnMotion_MotionThreshold (m_VideoGrabber, Value); };
   
   TRecordingTimer CVideoGrabber::GetRecordingTimer () { return _GetRecordingTimer (m_VideoGrabber); };
   void CVideoGrabber::SetRecordingTimer (TRecordingTimer Value) { _SetRecordingTimer (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetRecordingTimerInterval () { return _GetRecordingTimerInterval (m_VideoGrabber); };
   void CVideoGrabber::SetRecordingTimerInterval (int Value) { _SetRecordingTimerInterval (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetRecordingOnMotion_NoMotionPauseDelayMs () { return _GetRecordingOnMotion_NoMotionPauseDelayMs (m_VideoGrabber); };
   void CVideoGrabber::SetRecordingOnMotion_NoMotionPauseDelayMs (int Value) { _SetRecordingOnMotion_NoMotionPauseDelayMs (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetReencoding_NewVideoClip () { return _GetReencodingNewVideoClip (m_VideoGrabber); };
   void CVideoGrabber::SetReencoding_NewVideoClip (const wchar_t *Value) { _SetReencodingNewVideoClip (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetReencoding_SourceVideoClip () { return _GetReencodingSourceVideoClip (m_VideoGrabber); };
   void CVideoGrabber::SetReencoding_SourceVideoClip (const wchar_t *Value) { _SetReencodingSourceVideoClip (m_VideoGrabber, Value); };
   
   TCursors CVideoGrabber::GetBusyCursor () { return _GetBusyCursor (m_VideoGrabber); };
   void CVideoGrabber::SetBusyCursor (TCursors Value) { _SetBusyCursor (m_VideoGrabber, Value); };
   
   TCursors CVideoGrabber::GetVideoCursor () { return _GetVideoCursor (m_VideoGrabber); };
   void CVideoGrabber::SetVideoCursor (TCursors Value) { _SetVideoCursor (m_VideoGrabber, Value); };
   
   TCursors CVideoGrabber::GetNormalCursor () { return _GetNormalCursor (m_VideoGrabber); };
   void CVideoGrabber::SetNormalCursor (TCursors Value) { _SetNormalCursor (m_VideoGrabber, Value); };
   
   __int64 CVideoGrabber::GetReencoding_StartTime () { return _GetReencodingStartTime (m_VideoGrabber); };
   void CVideoGrabber::SetReencoding_StartTime (__int64 Value) { _SetReencodingStartTime (m_VideoGrabber, Value); };
   
   __int64 CVideoGrabber::GetReencoding_StartFrame () { return _GetReencodingStartFrame (m_VideoGrabber); };
   void CVideoGrabber::SetReencoding_StartFrame (__int64 Value) { _SetReencodingStartFrame (m_VideoGrabber, Value); };
   
   __int64 CVideoGrabber::GetReencoding_StopTime () { return _GetReencodingStopTime (m_VideoGrabber); };
   void CVideoGrabber::SetReencoding_StopTime (__int64 Value) { _SetReencodingStopTime (m_VideoGrabber, Value); };
   
   __int64 CVideoGrabber::GetReencoding_StopFrame () { return _GetReencodingStopFrame (m_VideoGrabber); };
   void CVideoGrabber::SetReencoding_StopFrame (__int64 Value) { _SetReencodingStopFrame (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetReencoding_IncludeAudioStream () { return _GetReencodingIncludeAudioStream (m_VideoGrabber); };
   void CVideoGrabber::SetReencoding_IncludeAudioStream (BOOL Value) { _SetReencodingIncludeAudioStream (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetReencoding_IncludeVideoStream () { return _GetReencodingIncludeVideoStream (m_VideoGrabber); };
   void CVideoGrabber::SetReencoding_IncludeVideoStream (BOOL Value) { _SetReencodingIncludeVideoStream (m_VideoGrabber, Value); };
   
   TRecordingMethod CVideoGrabber::GetReencoding_Method () { return _GetReencodingMethod (m_VideoGrabber); };
   void CVideoGrabber::SetReencoding_Method (TRecordingMethod Value) { _SetReencodingMethod (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetReencoding_UseAudioCompressor () { return _GetReencodingUseAudioCompressor (m_VideoGrabber); };
   void CVideoGrabber::SetReencoding_UseAudioCompressor (BOOL Value) { _SetReencodingUseAudioCompressor (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetReencoding_UseFrameGrabber () { return _GetReencodingUseFrameGrabber (m_VideoGrabber); };
   void CVideoGrabber::SetReencoding_UseFrameGrabber (BOOL Value) { _SetReencodingUseFrameGrabber (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetReencoding_UseVideoCompressor () { return _GetReencodingUseVideoCompressor (m_VideoGrabber); };
   void CVideoGrabber::SetReencoding_UseVideoCompressor (BOOL Value) { _SetReencodingUseVideoCompressor (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetReencoding_WMVOutput () { return _GetReencodingWMVOutput (m_VideoGrabber); };
   void CVideoGrabber::SetReencoding_WMVOutput (BOOL Value) { _SetReencodingWMVOutput (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetQuickDeviceInitialization () { return _GetQuickDeviceInitialization (m_VideoGrabber); };
   void CVideoGrabber::SetQuickDeviceInitialization (BOOL Value) { _SetQuickDeviceInitialization (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetRawAudioSampleCapture () { return _GetRawAudioSampleCapture (m_VideoGrabber); };
   void CVideoGrabber::SetRawAudioSampleCapture (BOOL Value) { _SetRawAudioSampleCapture (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetRawCaptureAsyncEvent () { return _GetRawCaptureAsyncEvent (m_VideoGrabber); };
   void CVideoGrabber::SetRawCaptureAsyncEvent (BOOL Value) { _SetRawCaptureAsyncEvent (m_VideoGrabber, Value); };
   
   TRawSampleCaptureLocation CVideoGrabber::GetRawSampleCaptureLocation () { return _GetRawSampleCaptureLocation (m_VideoGrabber); };
   void CVideoGrabber::SetRawSampleCaptureLocation (TRawSampleCaptureLocation Value) { _SetRawSampleCaptureLocation (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetRawVideoSampleCapture () { return _GetRawVideoSampleCapture (m_VideoGrabber); };
   void CVideoGrabber::SetRawVideoSampleCapture (BOOL Value) { _SetRawVideoSampleCapture (m_VideoGrabber, Value); };
   
   TRecordingSize CVideoGrabber::GetRecordingSize () { return _GetRecordingSize (m_VideoGrabber); };
   void CVideoGrabber::SetRecordingSize (TRecordingSize Value) { _SetRecordingSize (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetScreenRecordingSizePercent () { return _GetScreenRecordingSizePercent (m_VideoGrabber); };
   void CVideoGrabber::SetScreenRecordingSizePercent (int Value) { _SetScreenRecordingSizePercent (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetScreenRecordingLayeredWindows () { return _GetScreenRecordingLayeredWindows (m_VideoGrabber); };
   void CVideoGrabber::SetScreenRecordingLayeredWindows (BOOL Value) { _SetScreenRecordingLayeredWindows (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetScreenRecordingMonitor () { return _GetScreenRecordingMonitor (m_VideoGrabber); };
   void CVideoGrabber::SetScreenRecordingMonitor (int Value) { _SetScreenRecordingMonitor (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetScreenRecordingNonVisibleWindows () { return _GetScreenRecordingNonVisibleWindows (m_VideoGrabber); };
   void CVideoGrabber::SetScreenRecordingNonVisibleWindows (BOOL Value) { _SetScreenRecordingNonVisibleWindows (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetScreenRecordingThroughClipboard () { return _GetScreenRecordingThroughClipboard (m_VideoGrabber); };
   void CVideoGrabber::SetScreenRecordingThroughClipboard (BOOL Value) { _SetScreenRecordingThroughClipboard (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetScreenRecordingWithCursor () { return _GetScreenRecordingWithCursor (m_VideoGrabber); };
   void CVideoGrabber::SetScreenRecordingWithCursor (BOOL Value) { _SetScreenRecordingWithCursor (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetSpeakerControl () { return _GetSpeakerControl (m_VideoGrabber); };
   void CVideoGrabber::SetSpeakerControl (BOOL Value) { _SetSpeakerControl (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetStoragePath () { return _GetStoragePath (m_VideoGrabber); };
   void CVideoGrabber::SetStoragePath (const wchar_t *Value) { _SetStoragePath (m_VideoGrabber, Value); };
   
   TStoragePathMode CVideoGrabber::GetStoragePathMode () { return _GetStoragePathMode (m_VideoGrabber); };
   void CVideoGrabber::SetStoragePathMode (TStoragePathMode Value) { _SetStoragePathMode (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetStoreDeviceSettingsInRegistry () { return _GetStoreDeviceSettingsInRegistry (m_VideoGrabber); };
   void CVideoGrabber::SetStoreDeviceSettingsInRegistry (BOOL Value) { _SetStoreDeviceSettingsInRegistry (m_VideoGrabber, Value); };
   
   TSynchronizationRole CVideoGrabber::GetSynchronizationRole () { return _GetSynchronizationRole (m_VideoGrabber); };
   void CVideoGrabber::SetSynchronizationRole (TSynchronizationRole Value) { _SetSynchronizationRole (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetSynchronized () { return _GetSynchronized (m_VideoGrabber); };
   void CVideoGrabber::SetSynchronized (BOOL Value) { _SetSynchronized (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetSyncCommands () { return _GetSyncCommands (m_VideoGrabber); };
   void CVideoGrabber::SetSyncCommands (BOOL Value) { _SetSyncCommands (m_VideoGrabber, Value); };
   
   TSyncPreview CVideoGrabber::GetSyncPreview () { return _GetSyncPreview (m_VideoGrabber); };
   void CVideoGrabber::SetSyncPreview (TSyncPreview Value) { _SetSyncPreview (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetTextOverlay_Enabled () { return _GetTextOverlayEnabled (m_VideoGrabber); };
   void CVideoGrabber::SetTextOverlay_Enabled (BOOL Value) { _SetTextOverlayEnabled (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetTextOverlay_FontColor () { return _GetTextOverlayFontColor (m_VideoGrabber); };
   void CVideoGrabber::SetTextOverlay_FontColor (int Value) { _SetTextOverlayFontColor (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetTextOverlay_FontSize () { return _GetTextOverlayFontSize (m_VideoGrabber); };
   void CVideoGrabber::SetTextOverlay_FontSize (int Value) { _SetTextOverlayFontSize (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetTextOverlay_HighResFont () { return _GetTextOverlayHighResFont (m_VideoGrabber); };
   void CVideoGrabber::SetTextOverlay_HighResFont (BOOL Value) { _SetTextOverlayHighResFont (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetTextOverlay_Left () { return _GetTextOverlayLeft (m_VideoGrabber); };
   void CVideoGrabber::SetTextOverlay_Left (int Value) { _SetTextOverlayLeft (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetTextOverlay_Top () { return _GetTextOverlayTop (m_VideoGrabber); };
   void CVideoGrabber::SetTextOverlay_Top (int Value) { _SetTextOverlayTop (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetTextOverlay_Right () { return _GetTextOverlayRight (m_VideoGrabber); };
   void CVideoGrabber::SetTextOverlay_Right (int Value) { _SetTextOverlayRight (m_VideoGrabber, Value); };
   
   TTextOrientation CVideoGrabber::GetTextOverlay_Orientation () { return _GetTextOverlayOrientation (m_VideoGrabber); };
   void CVideoGrabber::SetTextOverlay_Orientation (TTextOrientation Value) { _SetTextOverlayOrientation (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetTextOverlay_Scrolling () { return _GetTextOverlayScrolling (m_VideoGrabber); };
   void CVideoGrabber::SetTextOverlay_Scrolling (BOOL Value) { _SetTextOverlayScrolling (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetTextOverlay_ScrollingSpeed () { return _GetTextOverlayScrollingSpeed (m_VideoGrabber); };
   void CVideoGrabber::SetTextOverlay_ScrollingSpeed (int Value) { _SetTextOverlayScrollingSpeed (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetTextOverlay_Shadow () { return _GetTextOverlayShadow (m_VideoGrabber); };
   void CVideoGrabber::SetTextOverlay_Shadow (BOOL Value) { _SetTextOverlayShadow (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetTextOverlay_ShadowColor () { return _GetTextOverlayShadowColor (m_VideoGrabber); };
   void CVideoGrabber::SetTextOverlay_ShadowColor (int Value) { _SetTextOverlayShadowColor (m_VideoGrabber, Value); };
   
   TCardinalDirection CVideoGrabber::GetTextOverlay_ShadowDirection () { return _GetTextOverlayShadowDirection (m_VideoGrabber); };
   void CVideoGrabber::SetTextOverlay_ShadowDirection (TCardinalDirection Value) { _SetTextOverlayShadowDirection (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetTextOverlay_BkColor () { return _GetTextOverlayBkColor (m_VideoGrabber); };
   void CVideoGrabber::SetTextOverlay_BkColor (int Value) { _SetTextOverlayBkColor (m_VideoGrabber, Value); };
   
   TTextOverlayAlign CVideoGrabber::GetTextOverlay_Align () { return _GetTextOverlayAlign (m_VideoGrabber); };
   void CVideoGrabber::SetTextOverlay_Align (TTextOverlayAlign Value) { _SetTextOverlayAlign (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetTextOverlay_AlphaBlend () { return _GetTextOverlayAlphaBlend (m_VideoGrabber); };
   void CVideoGrabber::SetTextOverlay_AlphaBlend (BOOL Value) { _SetTextOverlayAlphaBlend (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetTextOverlay_AlphaBlendValue () { return _GetTextOverlayAlphaBlendValue (m_VideoGrabber); };
   void CVideoGrabber::SetTextOverlay_AlphaBlendValue (int Value) { _SetTextOverlayAlphaBlendValue (m_VideoGrabber, Value); };
   
   TTextOverlayGradientMode CVideoGrabber::GetTextOverlay_GradientMode () { return _GetTextOverlayGradientMode (m_VideoGrabber); };
   void CVideoGrabber::SetTextOverlay_GradientMode (TTextOverlayGradientMode Value) { _SetTextOverlayGradientMode (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetTextOverlay_GradientColor () { return _GetTextOverlayGradientColor (m_VideoGrabber); };
   void CVideoGrabber::SetTextOverlay_GradientColor (int Value) { _SetTextOverlayGradientColor (m_VideoGrabber, Value); };
   
   TVideoAlignment CVideoGrabber::GetTextOverlay_VideoAlignment () { return _GetTextOverlayVideoAlignment (m_VideoGrabber); };
   void CVideoGrabber::SetTextOverlay_VideoAlignment (TVideoAlignment Value) { _SetTextOverlayVideoAlignment (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetTextOverlay_String () { return _GetTextOverlayString (m_VideoGrabber); };
   void CVideoGrabber::SetTextOverlay_String (const wchar_t *Value) { _SetTextOverlayString (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetTextOverlay_TargetDisplay () { return _GetTextOverlayTargetDisplay (m_VideoGrabber); };
   void CVideoGrabber::SetTextOverlay_TargetDisplay (int Value) { _SetTextOverlayTargetDisplay (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetTextOverlay_Transparent () { return _GetTextOverlayTransparent (m_VideoGrabber); };
   void CVideoGrabber::SetTextOverlay_Transparent (BOOL Value) { _SetTextOverlayTransparent (m_VideoGrabber, Value); };
   
   INT_PTR CVideoGrabber::GetTextOverlay_Font () { return _GetTextOverlayFont (m_VideoGrabber); };
   void CVideoGrabber::SetTextOverlay_Font (INT_PTR Value) { _SetTextOverlayFont (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetThirdPartyDeinterlacer () { return _GetThirdPartyDeinterlacer (m_VideoGrabber); };
   void CVideoGrabber::SetThirdPartyDeinterlacer (const wchar_t *Value) { _SetThirdPartyDeinterlacer (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetTranslateMouseCoordinates () { return _GetTranslateMouseCoordinates (m_VideoGrabber); };
   void CVideoGrabber::SetTranslateMouseCoordinates (BOOL Value) { _SetTranslateMouseCoordinates (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetTVUseFrequencyOverrides () { return _GetTVUseFrequencyOverrides (m_VideoGrabber); };
   void CVideoGrabber::SetTVUseFrequencyOverrides (BOOL Value) { _SetTVUseFrequencyOverrides (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetTunerFrequency () { return _GetTunerFrequency (m_VideoGrabber); };
   void CVideoGrabber::SetTunerFrequency (int Value) { _SetTunerFrequency (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetUseClock () { return _GetUseClock (m_VideoGrabber); };
   void CVideoGrabber::SetUseClock (BOOL Value) { _SetUseClock (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetVersion () { return _GetVersion (m_VideoGrabber); };
   void CVideoGrabber::SetVersion (const wchar_t *Value) { _SetVersion (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::Getv360_Enabled () { return _Getv360_Enabled (m_VideoGrabber); };
   void CVideoGrabber::Setv360_Enabled (BOOL Value) { _Setv360_Enabled (m_VideoGrabber, Value); };
   
   double CVideoGrabber::Getv360_AspectRatio () { return _Getv360_AspectRatio (m_VideoGrabber); };
   void CVideoGrabber::Setv360_AspectRatio (double Value) { _Setv360_AspectRatio (m_VideoGrabber, Value); };
   
   int CVideoGrabber::Getv360_MouseActionPercent () { return _Getv360_MouseActionPercent (m_VideoGrabber); };
   void CVideoGrabber::Setv360_MouseActionPercent (int Value) { _Setv360_MouseActionPercent (m_VideoGrabber, Value); };
   
   TV360_MouseAction CVideoGrabber::Getv360_MouseAction () { return _Getv360_MouseAction (m_VideoGrabber); };
   void CVideoGrabber::Setv360_MouseAction (TV360_MouseAction Value) { _Setv360_MouseAction (m_VideoGrabber, Value); };
   
   Tv360_Angle CVideoGrabber::Getv360_MasterAngle () { return _Getv360_MasterAngle (m_VideoGrabber); };
   void CVideoGrabber::Setv360_MasterAngle (Tv360_Angle Value) { _Setv360_MasterAngle (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetVideoDevice () { return _GetVideoDevice (m_VideoGrabber); };
   void CVideoGrabber::SetVideoDevice (int Value) { _SetVideoDevice (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetVideoCompression_DataRate () { return _GetVideoCompression_DataRate (m_VideoGrabber); };
   void CVideoGrabber::SetVideoCompression_DataRate (int Value) { _SetVideoCompression_DataRate (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetVideoCompression_KeyFrameRate () { return _GetVideoCompression_KeyFrameRate (m_VideoGrabber); };
   void CVideoGrabber::SetVideoCompression_KeyFrameRate (int Value) { _SetVideoCompression_KeyFrameRate (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetVideoCompression_PFramesPerKeyFrame () { return _GetVideoCompression_PFramesPerKeyFrame (m_VideoGrabber); };
   void CVideoGrabber::SetVideoCompression_PFramesPerKeyFrame (int Value) { _SetVideoCompression_PFramesPerKeyFrame (m_VideoGrabber, Value); };
   
   double CVideoGrabber::GetVideoCompression_Quality () { return _GetVideoCompression_Quality (m_VideoGrabber); };
   void CVideoGrabber::SetVideoCompression_Quality (double Value) { _SetVideoCompression_Quality (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetVideoCompression_WindowSize () { return _GetVideoCompression_WindowSize (m_VideoGrabber); };
   void CVideoGrabber::SetVideoCompression_WindowSize (int Value) { _SetVideoCompression_WindowSize (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetVideoCompressor () { return _GetVideoCompressor (m_VideoGrabber); };
   void CVideoGrabber::SetVideoCompressor (int Value) { _SetVideoCompressor (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetVideoControlSettings () { return _GetVideoControlSettings (m_VideoGrabber); };
   void CVideoGrabber::SetVideoControlSettings (BOOL Value) { _SetVideoControlSettings (m_VideoGrabber, Value); };
   
   __int64 CVideoGrabber::GetVideoDelay () { return _GetVideoDelay (m_VideoGrabber); };
   void CVideoGrabber::SetVideoDelay (__int64 Value) { _SetVideoDelay (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetVideoFormat () { return _GetVideoFormat (m_VideoGrabber); };
   void CVideoGrabber::SetVideoFormat (int Value) { _SetVideoFormat (m_VideoGrabber, Value); };
   
   TFileSort CVideoGrabber::GetVideoFromImages_BitmapsSortedBy () { return _GetVideoFromImages_BitmapsSortedBy (m_VideoGrabber); };
   void CVideoGrabber::SetVideoFromImages_BitmapsSortedBy (TFileSort Value) { _SetVideoFromImages_BitmapsSortedBy (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetVideoFromImages_RepeatIndefinitely () { return _GetVideoFromImages_RepeatIndefinitely (m_VideoGrabber); };
   void CVideoGrabber::SetVideoFromImages_RepeatIndefinitely (BOOL Value) { _SetVideoFromImages_RepeatIndefinitely (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetVideoFromImages_SourceDirectory () { return _GetVideoFromImages_SourceDirectory (m_VideoGrabber); };
   void CVideoGrabber::SetVideoFromImages_SourceDirectory (const wchar_t *Value) { _SetVideoFromImages_SourceDirectory (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetVideoFromImages_TemporaryFile () { return _GetVideoFromImages_TemporaryFile (m_VideoGrabber); };
   void CVideoGrabber::SetVideoFromImages_TemporaryFile (const wchar_t *Value) { _SetVideoFromImages_TemporaryFile (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetVideoInput () { return _GetVideoInput (m_VideoGrabber); };
   void CVideoGrabber::SetVideoInput (int Value) { _SetVideoInput (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetVideoProcessing_Brightness () { return _GetVideoProcessingBrightness (m_VideoGrabber); };
   void CVideoGrabber::SetVideoProcessing_Brightness (int Value) { _SetVideoProcessingBrightness (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetVideoProcessing_Contrast () { return _GetVideoProcessingContrast (m_VideoGrabber); };
   void CVideoGrabber::SetVideoProcessing_Contrast (int Value) { _SetVideoProcessingContrast (m_VideoGrabber, Value); };
   
   TVideoDeinterlacing CVideoGrabber::GetVideoProcessing_Deinterlacing () { return _GetVideoProcessingDeinterlacing (m_VideoGrabber); };
   void CVideoGrabber::SetVideoProcessing_Deinterlacing (TVideoDeinterlacing Value) { _SetVideoProcessingDeinterlacing (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetVideoProcessing_FlipHorizontal () { return _GetVideoProcessingLeftRight (m_VideoGrabber); };
   void CVideoGrabber::SetVideoProcessing_FlipHorizontal (BOOL Value) { _SetVideoProcessingLeftRight (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetVideoProcessing_FlipVertical () { return _GetVideoProcessingTopDown (m_VideoGrabber); };
   void CVideoGrabber::SetVideoProcessing_FlipVertical (BOOL Value) { _SetVideoProcessingTopDown (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetVideoProcessing_GrayScale () { return _GetVideoProcessingGrayScale (m_VideoGrabber); };
   void CVideoGrabber::SetVideoProcessing_GrayScale (BOOL Value) { _SetVideoProcessingGrayScale (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetVideoProcessing_Hue () { return _GetVideoProcessingHue (m_VideoGrabber); };
   void CVideoGrabber::SetVideoProcessing_Hue (int Value) { _SetVideoProcessingHue (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetVideoProcessing_InvertColors () { return _GetVideoProcessingInvertColors (m_VideoGrabber); };
   void CVideoGrabber::SetVideoProcessing_InvertColors (BOOL Value) { _SetVideoProcessingInvertColors (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetVideoProcessing_Pixellization () { return _GetVideoProcessingPixellization (m_VideoGrabber); };
   void CVideoGrabber::SetVideoProcessing_Pixellization (int Value) { _SetVideoProcessingPixellization (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetVideoProcessing_Saturation () { return _GetVideoProcessingSaturation (m_VideoGrabber); };
   void CVideoGrabber::SetVideoProcessing_Saturation (int Value) { _SetVideoProcessingSaturation (m_VideoGrabber, Value); };
   
   TVideoRotation CVideoGrabber::GetVideoProcessing_Rotation () { return _GetVideoProcessingRotation (m_VideoGrabber); };
   void CVideoGrabber::SetVideoProcessing_Rotation (TVideoRotation Value) { _SetVideoProcessingRotation (m_VideoGrabber, Value); };
   
   double CVideoGrabber::GetVideoProcessing_RotationCustomAngle () { return _GetVideoProcessingRotationCustomAngle (m_VideoGrabber); };
   void CVideoGrabber::SetVideoProcessing_RotationCustomAngle (double Value) { _SetVideoProcessingRotationCustomAngle (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetVideoQualitySettings () { return _GetVideoQualitySettings (m_VideoGrabber); };
   void CVideoGrabber::SetVideoQualitySettings (BOOL Value) { _SetVideoQualitySettings (m_VideoGrabber, Value); };
   
   TVideoRenderer CVideoGrabber::GetVideoRenderer () { return _GetVideoRenderer (m_VideoGrabber); };
   void CVideoGrabber::SetVideoRenderer (TVideoRenderer Value) { _SetVideoRenderer (m_VideoGrabber, Value); };
   
   TVideoRendererExternal CVideoGrabber::GetVideoRendererExternal () { return _GetVideoRendererExternal (m_VideoGrabber); };
   void CVideoGrabber::SetVideoRendererExternal (TVideoRendererExternal Value) { _SetVideoRendererExternal (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetVideoRendererExternalIndex () { return _GetVideoRendererExternalIndex (m_VideoGrabber); };
   void CVideoGrabber::SetVideoRendererExternalIndex (int Value) { _SetVideoRendererExternalIndex (m_VideoGrabber, Value); };
   
   TVideoRendererPriority CVideoGrabber::GetVideoRendererPriority () { return _GetVideoRendererPriority (m_VideoGrabber); };
   void CVideoGrabber::SetVideoRendererPriority (TVideoRendererPriority Value) { _SetVideoRendererPriority (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetVideoSize () { return _GetVideoSize (m_VideoGrabber); };
   void CVideoGrabber::SetVideoSize (int Value) { _SetVideoSize (m_VideoGrabber, Value); };
   
   TVideoSource CVideoGrabber::GetVideoSource () { return _GetVideoSource (m_VideoGrabber); };
   void CVideoGrabber::SetVideoSource (TVideoSource Value) { _SetVideoSource (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetVideoSource_FileOrURL () { return _GetVideoSource_FileOrURL (m_VideoGrabber); };
   void CVideoGrabber::SetVideoSource_FileOrURL (const wchar_t *Value) { _SetVideoSource_FileOrURL (m_VideoGrabber, Value); };
   
   __int64 CVideoGrabber::GetVideoSource_FileOrURL_StartTime () { return _GetVideoSource_FileOrURL_StartTime (m_VideoGrabber); };
   void CVideoGrabber::SetVideoSource_FileOrURL_StartTime (__int64 Value) { _SetVideoSource_FileOrURL_StartTime (m_VideoGrabber, Value); };
   
   __int64 CVideoGrabber::GetVideoSource_FileOrURL_StopTime () { return _GetVideoSource_FileOrURL_StopTime (m_VideoGrabber); };
   void CVideoGrabber::SetVideoSource_FileOrURL_StopTime (__int64 Value) { _SetVideoSource_FileOrURL_StopTime (m_VideoGrabber, Value); };
   
   const wchar_t *CVideoGrabber::GetStreamInterface_Format () { return _GetStreamInterface_Format (m_VideoGrabber); };
   void CVideoGrabber::SetStreamInterface_Format (const wchar_t *Value) { _SetStreamInterface_Format (m_VideoGrabber, Value); };
   
   double CVideoGrabber::GetStreamInterface_FrameRate () { return _GetStreamInterface_FrameRate (m_VideoGrabber); };
   void CVideoGrabber::SetStreamInterface_FrameRate (double Value) { _SetStreamInterface_FrameRate (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetStreamInterface_IsRealTime () { return _GetStreamInterface_IsRealTime (m_VideoGrabber); };
   void CVideoGrabber::SetStreamInterface_IsRealTime (BOOL Value) { _SetStreamInterface_IsRealTime (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetVideoStreamNumber () { return _GetVideoStreamNumber (m_VideoGrabber); };
   void CVideoGrabber::SetVideoStreamNumber (int Value) { _SetVideoStreamNumber (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetVideoSubtype () { return _GetVideoSubtype (m_VideoGrabber); };
   void CVideoGrabber::SetVideoSubtype (int Value) { _SetVideoSubtype (m_VideoGrabber, Value); };
   
   BOOL CVideoGrabber::GetVideoVisibleWhenStopped () { return _GetVideoVisibleWhenStopped (m_VideoGrabber); };
   void CVideoGrabber::SetVideoVisibleWhenStopped (BOOL Value) { _SetVideoVisibleWhenStopped (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetVirtualVideoStreamControl () { return _GetVirtualVideoStreamControl (m_VideoGrabber); };
   void CVideoGrabber::SetVirtualVideoStreamControl (int Value) { _SetVirtualVideoStreamControl (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetVirtualAudioStreamControl () { return _GetVirtualAudioStreamControl (m_VideoGrabber); };
   void CVideoGrabber::SetVirtualAudioStreamControl (int Value) { _SetVirtualAudioStreamControl (m_VideoGrabber, Value); };
   
   TVuMeter CVideoGrabber::GetVuMeter () { return _GetVuMeter (m_VideoGrabber); };
   void CVideoGrabber::SetVuMeter (TVuMeter Value) { _SetVuMeter (m_VideoGrabber, Value); };
   
   TWebcamStillCaptureButton CVideoGrabber::GetWebcamStillCaptureButton () { return _GetWebcamStillCaptureButton (m_VideoGrabber); };
   void CVideoGrabber::SetWebcamStillCaptureButton (TWebcamStillCaptureButton Value) { _SetWebcamStillCaptureButton (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetZoomCoeff () { return _GetZoomCoeff (m_VideoGrabber); };
   void CVideoGrabber::SetZoomCoeff (int Value) { _SetZoomCoeff (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetZoomXCenter () { return _GetZoomXCenter (m_VideoGrabber); };
   void CVideoGrabber::SetZoomXCenter (int Value) { _SetZoomXCenter (m_VideoGrabber, Value); };
   
   int CVideoGrabber::GetZoomYCenter () { return _GetZoomYCenter (m_VideoGrabber); };
   void CVideoGrabber::SetZoomYCenter (int Value) { _SetZoomYCenter (m_VideoGrabber, Value); };
   
//#endregion DeclarePropertiesCPP

//#region DeclareEventsCPP
   void CVideoGrabber::SetOnAudioBufferNegotiation (TOnAudioBufferNegotiationCb OnAudioBufferNegotiationCb) { _SetOnAudioBufferNegotiation (m_VideoGrabber, OnAudioBufferNegotiationCb); };
   void CVideoGrabber::SetOnAudioDeviceSelected (TOnAudioDeviceSelectedCb OnAudioDeviceSelectedCb) { _SetOnAudioDeviceSelected (m_VideoGrabber, OnAudioDeviceSelectedCb); };
   void CVideoGrabber::SetOnAudioPeak (TOnAudioPeakCb OnAudioPeakCb) { _SetOnAudioPeak (m_VideoGrabber, OnAudioPeakCb); };
   void CVideoGrabber::SetOnAuthenticationNeeded (TOnAuthenticationNeededCb OnAuthenticationNeededCb) { _SetOnAuthenticationNeeded (m_VideoGrabber, OnAuthenticationNeededCb); };
   void CVideoGrabber::SetOnAVIDurationUpdated (TOnAVIDurationUpdatedCb OnAVIDurationUpdatedCb) { _SetOnAVIDurationUpdated (m_VideoGrabber, OnAVIDurationUpdatedCb); };
   void CVideoGrabber::SetOnBacktimedFramesCountReached (TOnBacktimedFramesCountReachedCb OnBacktimedFramesCountReachedCb) { _SetOnBacktimedFramesCountReached (m_VideoGrabber, OnBacktimedFramesCountReachedCb); };
   void CVideoGrabber::SetOnBitmapsLoadingProgress (TOnBitmapsLoadingProgressCb OnBitmapsLoadingProgressCb) { _SetOnBitmapsLoadingProgress (m_VideoGrabber, OnBitmapsLoadingProgressCb); };
   void CVideoGrabber::SetOnClick (TOnClickCb OnClickCb) { _SetOnClick (m_VideoGrabber, OnClickCb); };
   void CVideoGrabber::SetOnClientConnection (TOnClientConnectionCb OnClientConnectionCb) { _SetOnClientConnection (m_VideoGrabber, OnClientConnectionCb); };
   void CVideoGrabber::SetOnColorKeyChange (TOnColorKeyChangeCb OnColorKeyChangeCb) { _SetOnColorKeyChange (m_VideoGrabber, OnColorKeyChangeCb); };
   void CVideoGrabber::SetOnCopyPreallocDataCompleted (TOnCopyPreallocDataCompletedCb OnCopyPreallocDataCompletedCb) { _SetOnCopyPreallocDataCompleted (m_VideoGrabber, OnCopyPreallocDataCompletedCb); };
   void CVideoGrabber::SetOnCopyPreallocDataProgress (TOnCopyPreallocDataProgressCb OnCopyPreallocDataProgressCb) { _SetOnCopyPreallocDataProgress (m_VideoGrabber, OnCopyPreallocDataProgressCb); };
   void CVideoGrabber::SetOnCopyPreallocDataStarted (TOnCopyPreallocDataStartedCb OnCopyPreallocDataStartedCb) { _SetOnCopyPreallocDataStarted (m_VideoGrabber, OnCopyPreallocDataStartedCb); };
   void CVideoGrabber::SetOnCreatePreallocFileCompleted (TOnCreatePreallocFileCompletedCb OnCreatePreallocFileCompletedCb) { _SetOnCreatePreallocFileCompleted (m_VideoGrabber, OnCreatePreallocFileCompletedCb); };
   void CVideoGrabber::SetOnCreatePreallocFileProgress (TOnCreatePreallocFileProgressCb OnCreatePreallocFileProgressCb) { _SetOnCreatePreallocFileProgress (m_VideoGrabber, OnCreatePreallocFileProgressCb); };
   void CVideoGrabber::SetOnCreatePreallocFileStarted (TOnCreatePreallocFileStartedCb OnCreatePreallocFileStartedCb) { _SetOnCreatePreallocFileStarted (m_VideoGrabber, OnCreatePreallocFileStartedCb); };
   void CVideoGrabber::SetOnDblClick (TOnDblClickCb OnDblClickCb) { _SetOnDblClick (m_VideoGrabber, OnDblClickCb); };
   void CVideoGrabber::SetOnDeviceArrivalOrRemoval (TOnDeviceArrivalOrRemovalCb OnDeviceArrivalOrRemovalCb) { _SetOnDeviceArrivalOrRemoval (m_VideoGrabber, OnDeviceArrivalOrRemovalCb); };
   void CVideoGrabber::SetOnDeviceLost (TOnDeviceLostCb OnDeviceLostCb) { _SetOnDeviceLost (m_VideoGrabber, OnDeviceLostCb); };
   void CVideoGrabber::SetOnDeviceReconnected (TOnDeviceReconnectedCb OnDeviceReconnectedCb) { _SetOnDeviceReconnected (m_VideoGrabber, OnDeviceReconnectedCb); };
   void CVideoGrabber::SetOnDeviceReconnecting (TOnDeviceReconnectingCb OnDeviceReconnectingCb) { _SetOnDeviceReconnecting (m_VideoGrabber, OnDeviceReconnectingCb); };
   void CVideoGrabber::SetOnDirectNetworkStreamingHostUrl (TOnDirectNetworkStreamingHostUrlCb OnDirectNetworkStreamingHostUrlCb) { _SetOnDirectNetworkStreamingHostUrl (m_VideoGrabber, OnDirectNetworkStreamingHostUrlCb); };
   void CVideoGrabber::SetOnDiskFull (TOnDiskFullCb OnDiskFullCb) { _SetOnDiskFull (m_VideoGrabber, OnDiskFullCb); };
   void CVideoGrabber::SetOnDragDrop (TOnDragDropCb OnDragDropCb) { _SetOnDragDrop (m_VideoGrabber, OnDragDropCb); };
   void CVideoGrabber::SetOnDragDropFiles (TOnDragDropFilesCb OnDragDropFilesCb) { _SetOnDragDropFiles (m_VideoGrabber, OnDragDropFilesCb); };
   void CVideoGrabber::SetOnDragOver (TOnDragOverCb OnDragOverCb) { _SetOnDragOver (m_VideoGrabber, OnDragOverCb); };
   void CVideoGrabber::SetOnDVCommandCompleted (TOnDVCommandCompletedCb OnDVCommandCompletedCb) { _SetOnDVCommandCompleted (m_VideoGrabber, OnDVCommandCompletedCb); };
   void CVideoGrabber::SetOnDVDiscontinuity (TOnDVDiscontinuityCb OnDVDiscontinuityCb) { _SetOnDVDiscontinuity (m_VideoGrabber, OnDVDiscontinuityCb); };
   void CVideoGrabber::SetOnEnumerateWindows (TOnEnumerateWindowsCb OnEnumerateWindowsCb) { _SetOnEnumerateWindows (m_VideoGrabber, OnEnumerateWindowsCb); };
   void CVideoGrabber::SetOnFilterSelected (TOnFilterSelectedCb OnFilterSelectedCb) { _SetOnFilterSelected (m_VideoGrabber, OnFilterSelectedCb); };
   void CVideoGrabber::SetOnFirstFrameReceived (TOnFirstFrameReceivedCb OnFirstFrameReceivedCb) { _SetOnFirstFrameReceived (m_VideoGrabber, OnFirstFrameReceivedCb); };
   void CVideoGrabber::SetOnFrameBitmap (TOnFrameBitmapCb OnFrameBitmapCb) { _SetOnFrameBitmap (m_VideoGrabber, OnFrameBitmapCb); };
   void CVideoGrabber::SetOnFrameCaptureCompleted (TOnFrameCaptureCompletedCb OnFrameCaptureCompletedCb) { _SetOnFrameCaptureCompleted (m_VideoGrabber, OnFrameCaptureCompletedCb); };
   void CVideoGrabber::SetOnFrameOverlayUsingDC (TOnFrameOverlayUsingDCCb OnFrameOverlayUsingDCCb) { _SetOnFrameOverlayUsingDC (m_VideoGrabber, OnFrameOverlayUsingDCCb); };
   void CVideoGrabber::SetOnFrameOverlayUsingDIB (TOnFrameOverlayUsingDIBCb OnFrameOverlayUsingDIBCb) { _SetOnFrameOverlayUsingDIB (m_VideoGrabber, OnFrameOverlayUsingDIBCb); };
   void CVideoGrabber::SetOnFrameProgress (TOnFrameProgressCb OnFrameProgressCb) { _SetOnFrameProgress (m_VideoGrabber, OnFrameProgressCb); };
   void CVideoGrabber::SetOnFrameProgress2 (TOnFrameProgress2Cb OnFrameProgress2Cb) { _SetOnFrameProgress2 (m_VideoGrabber, OnFrameProgress2Cb); };
   void CVideoGrabber::SetOnGraphBuilt (TOnGraphBuiltCb OnGraphBuiltCb) { _SetOnGraphBuilt (m_VideoGrabber, OnGraphBuiltCb); };
   void CVideoGrabber::SetOnInactive (TOnInactiveCb OnInactiveCb) { _SetOnInactive (m_VideoGrabber, OnInactiveCb); };
   void CVideoGrabber::SetOnKeyPress (TOnKeyPressCb OnKeyPressCb) { _SetOnKeyPress (m_VideoGrabber, OnKeyPressCb); };
   void CVideoGrabber::SetOnLastCommandCompleted (TOnLastCommandCompletedCb OnLastCommandCompletedCb) { _SetOnLastCommandCompleted (m_VideoGrabber, OnLastCommandCompletedCb); };
   void CVideoGrabber::SetOnLeavingFullScreen (TOnLeavingFullScreenCb OnLeavingFullScreenCb) { _SetOnLeavingFullScreen (m_VideoGrabber, OnLeavingFullScreenCb); };
   void CVideoGrabber::SetOnLog (TOnLogCb OnLogCb) { _SetOnLog (m_VideoGrabber, OnLogCb); };
   void CVideoGrabber::SetOnMotionDetected (TOnMotionDetectedCb OnMotionDetectedCb) { _SetOnMotionDetected (m_VideoGrabber, OnMotionDetectedCb); };
   void CVideoGrabber::SetOnMotionNotDetected (TOnMotionNotDetectedCb OnMotionNotDetectedCb) { _SetOnMotionNotDetected (m_VideoGrabber, OnMotionNotDetectedCb); };
   void CVideoGrabber::SetOnMouseDown (TOnMouseDownCb OnMouseDownCb) { _SetOnMouseDown (m_VideoGrabber, OnMouseDownCb); };
   void CVideoGrabber::SetOnMouseDown_Video (TOnMouseDown_VideoCb OnMouseDown_VideoCb) { _SetOnMouseDown_Video (m_VideoGrabber, OnMouseDown_VideoCb); };
   void CVideoGrabber::SetOnMouseDown_Window (TOnMouseDown_WindowCb OnMouseDown_WindowCb) { _SetOnMouseDown_Window (m_VideoGrabber, OnMouseDown_WindowCb); };
   void CVideoGrabber::SetOnMouseEnter (TOnMouseEnterCb OnMouseEnterCb) { _SetOnMouseEnter (m_VideoGrabber, OnMouseEnterCb); };
   void CVideoGrabber::SetOnMouseLeave (TOnMouseLeaveCb OnMouseLeaveCb) { _SetOnMouseLeave (m_VideoGrabber, OnMouseLeaveCb); };
   void CVideoGrabber::SetOnMouseMove (TOnMouseMoveCb OnMouseMoveCb) { _SetOnMouseMove (m_VideoGrabber, OnMouseMoveCb); };
   void CVideoGrabber::SetOnMouseMove_Video (TOnMouseMove_VideoCb OnMouseMove_VideoCb) { _SetOnMouseMove_Video (m_VideoGrabber, OnMouseMove_VideoCb); };
   void CVideoGrabber::SetOnMouseMove_Window (TOnMouseMove_WindowCb OnMouseMove_WindowCb) { _SetOnMouseMove_Window (m_VideoGrabber, OnMouseMove_WindowCb); };
   void CVideoGrabber::SetOnMouseUp (TOnMouseUpCb OnMouseUpCb) { _SetOnMouseUp (m_VideoGrabber, OnMouseUpCb); };
   void CVideoGrabber::SetOnMouseUp_Video (TOnMouseUp_VideoCb OnMouseUp_VideoCb) { _SetOnMouseUp_Video (m_VideoGrabber, OnMouseUp_VideoCb); };
   void CVideoGrabber::SetOnMouseUp_Window (TOnMouseUp_WindowCb OnMouseUp_WindowCb) { _SetOnMouseUp_Window (m_VideoGrabber, OnMouseUp_WindowCb); };
   void CVideoGrabber::SetOnMouseWheel (TOnMouseWheelCb OnMouseWheelCb) { _SetOnMouseWheel (m_VideoGrabber, OnMouseWheelCb); };
   void CVideoGrabber::SetOnMultipurposeEncoderCompleted (TOnMultipurposeEncoderCompletedCb OnMultipurposeEncoderCompletedCb) { _SetOnMultipurposeEncoderCompleted (m_VideoGrabber, OnMultipurposeEncoderCompletedCb); };
   void CVideoGrabber::SetOnMultipurposeEncoderError (TOnMultipurposeEncoderErrorCb OnMultipurposeEncoderErrorCb) { _SetOnMultipurposeEncoderError (m_VideoGrabber, OnMultipurposeEncoderErrorCb); };
   void CVideoGrabber::SetOnMultipurposeEncoderProgress (TOnMultipurposeEncoderProgressCb OnMultipurposeEncoderProgressCb) { _SetOnMultipurposeEncoderProgress (m_VideoGrabber, OnMultipurposeEncoderProgressCb); };
   void CVideoGrabber::SetOnNoVideoDevices (TOnNoVideoDevicesCb OnNoVideoDevicesCb) { _SetOnNoVideoDevices (m_VideoGrabber, OnNoVideoDevicesCb); };
   void CVideoGrabber::SetOnNTPTimeStamp (TOnNTPTimeStampCb OnNTPTimeStampCb) { _SetOnNTPTimeStamp (m_VideoGrabber, OnNTPTimeStampCb); };
   void CVideoGrabber::SetOnPlayerBufferingData (TOnPlayerBufferingDataCb OnPlayerBufferingDataCb) { _SetOnPlayerBufferingData (m_VideoGrabber, OnPlayerBufferingDataCb); };
   void CVideoGrabber::SetOnPlayerDurationUpdated (TOnPlayerDurationUpdatedCb OnPlayerDurationUpdatedCb) { _SetOnPlayerDurationUpdated (m_VideoGrabber, OnPlayerDurationUpdatedCb); };
   void CVideoGrabber::SetOnPlayerEndOfPlaylist (TOnPlayerEndOfPlaylistCb OnPlayerEndOfPlaylistCb) { _SetOnPlayerEndOfPlaylist (m_VideoGrabber, OnPlayerEndOfPlaylistCb); };
   void CVideoGrabber::SetOnPlayerEndOfStream (TOnPlayerEndOfStreamCb OnPlayerEndOfStreamCb) { _SetOnPlayerEndOfStream (m_VideoGrabber, OnPlayerEndOfStreamCb); };
   void CVideoGrabber::SetOnPlayerOpened (TOnPlayerOpenedCb OnPlayerOpenedCb) { _SetOnPlayerOpened (m_VideoGrabber, OnPlayerOpenedCb); };
   void CVideoGrabber::SetOnPlayerStateChanged (TOnPlayerStateChangedCb OnPlayerStateChangedCb) { _SetOnPlayerStateChanged (m_VideoGrabber, OnPlayerStateChangedCb); };
   void CVideoGrabber::SetOnPlayerUpdateTrackbarPosition (TOnPlayerUpdateTrackbarPositionCb OnPlayerUpdateTrackbarPositionCb) { _SetOnPlayerUpdateTrackbarPosition (m_VideoGrabber, OnPlayerUpdateTrackbarPositionCb); };
   void CVideoGrabber::SetOnPreviewStarted (TOnPreviewStartedCb OnPreviewStartedCb) { _SetOnPreviewStarted (m_VideoGrabber, OnPreviewStartedCb); };
   void CVideoGrabber::SetOnRawAudioSample (TOnRawAudioSampleCb OnRawAudioSampleCb) { _SetOnRawAudioSample (m_VideoGrabber, OnRawAudioSampleCb); };
   void CVideoGrabber::SetOnRawVideoSample (TOnRawVideoSampleCb OnRawVideoSampleCb) { _SetOnRawVideoSample (m_VideoGrabber, OnRawVideoSampleCb); };
   void CVideoGrabber::SetOnRecordingCompleted (TOnRecordingCompletedCb OnRecordingCompletedCb) { _SetOnRecordingCompleted (m_VideoGrabber, OnRecordingCompletedCb); };
   void CVideoGrabber::SetOnRecordingPaused (TOnRecordingPausedCb OnRecordingPausedCb) { _SetOnRecordingPaused (m_VideoGrabber, OnRecordingPausedCb); };
   void CVideoGrabber::SetOnRecordingReadyToStart (TOnRecordingReadyToStartCb OnRecordingReadyToStartCb) { _SetOnRecordingReadyToStart (m_VideoGrabber, OnRecordingReadyToStartCb); };
   void CVideoGrabber::SetOnRecordingStarted (TOnRecordingStartedCb OnRecordingStartedCb) { _SetOnRecordingStarted (m_VideoGrabber, OnRecordingStartedCb); };
   void CVideoGrabber::SetOnReencodingCompleted (TOnReencodingCompletedCb OnReencodingCompletedCb) { _SetOnReencodingCompleted (m_VideoGrabber, OnReencodingCompletedCb); };
   void CVideoGrabber::SetOnReencodingProgress (TOnReencodingProgressCb OnReencodingProgressCb) { _SetOnReencodingProgress (m_VideoGrabber, OnReencodingProgressCb); };
   void CVideoGrabber::SetOnReencodingStarted (TOnReencodingStartedCb OnReencodingStartedCb) { _SetOnReencodingStarted (m_VideoGrabber, OnReencodingStartedCb); };
   void CVideoGrabber::SetOnReinitializing (TOnReinitializingCb OnReinitializingCb) { _SetOnReinitializing (m_VideoGrabber, OnReinitializingCb); };
   void CVideoGrabber::SetOnResizeVideo (TOnResizeVideoCb OnResizeVideoCb) { _SetOnResizeVideo (m_VideoGrabber, OnResizeVideoCb); };
   void CVideoGrabber::SetOnStoppingGraph (TOnStoppingGraphCb OnStoppingGraphCb) { _SetOnStoppingGraph (m_VideoGrabber, OnStoppingGraphCb); };
   void CVideoGrabber::SetOnStoppingGraphCompleted (TOnStoppingGraphCompletedCb OnStoppingGraphCompletedCb) { _SetOnStoppingGraphCompleted (m_VideoGrabber, OnStoppingGraphCompletedCb); };
   void CVideoGrabber::SetOnTextOverlayScrollingCompleted (TOnTextOverlayScrollingCompletedCb OnTextOverlayScrollingCompletedCb) { _SetOnTextOverlayScrollingCompleted (m_VideoGrabber, OnTextOverlayScrollingCompletedCb); };
   void CVideoGrabber::SetOnThirdPartyFilterAdded (TOnThirdPartyFilterAddedCb OnThirdPartyFilterAddedCb) { _SetOnThirdPartyFilterAdded (m_VideoGrabber, OnThirdPartyFilterAddedCb); };
   void CVideoGrabber::SetOnThirdPartyFilterConnected (TOnThirdPartyFilterConnectedCb OnThirdPartyFilterConnectedCb) { _SetOnThirdPartyFilterConnected (m_VideoGrabber, OnThirdPartyFilterConnectedCb); };
   void CVideoGrabber::SetOnThirdPartyFilterConnected2 (TOnThirdPartyFilterConnected2Cb OnThirdPartyFilterConnected2Cb) { _SetOnThirdPartyFilterConnected2 (m_VideoGrabber, OnThirdPartyFilterConnected2Cb); };
   void CVideoGrabber::SetOnThreadSync (TOnThreadSyncCb OnThreadSyncCb) { _SetOnThreadSync (m_VideoGrabber, OnThreadSyncCb); };
   void CVideoGrabber::SetOnTVChannelScanCompleted (TOnTVChannelScanCompletedCb OnTVChannelScanCompletedCb) { _SetOnTVChannelScanCompleted (m_VideoGrabber, OnTVChannelScanCompletedCb); };
   void CVideoGrabber::SetOnTVChannelScanStarted (TOnTVChannelScanStartedCb OnTVChannelScanStartedCb) { _SetOnTVChannelScanStarted (m_VideoGrabber, OnTVChannelScanStartedCb); };
   void CVideoGrabber::SetOnTVChannelSelected (TOnTVChannelSelectedCb OnTVChannelSelectedCb) { _SetOnTVChannelSelected (m_VideoGrabber, OnTVChannelSelectedCb); };
   void CVideoGrabber::SetOnVideoCompressionSettings (TOnVideoCompressionSettingsCb OnVideoCompressionSettingsCb) { _SetOnVideoCompressionSettings (m_VideoGrabber, OnVideoCompressionSettingsCb); };
   void CVideoGrabber::SetOnVideoDeviceSelected (TOnVideoDeviceSelectedCb OnVideoDeviceSelectedCb) { _SetOnVideoDeviceSelected (m_VideoGrabber, OnVideoDeviceSelectedCb); };
   void CVideoGrabber::SetOnVideoFromBitmapsNextFrameNeeded (TOnVideoFromBitmapsNextFrameNeededCb OnVideoFromBitmapsNextFrameNeededCb) { _SetOnVideoFromBitmapsNextFrameNeeded (m_VideoGrabber, OnVideoFromBitmapsNextFrameNeededCb); };
//#endregion DeclareEventsCPP

